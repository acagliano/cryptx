	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_hexdump
_hexdump:
	ld	hl, -4
	call	__frameset
	ld	hl, (ix + 12)
	ld	bc, -327680
	ld	de, _.str.3
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_2
	push	de
	push	bc
	call	_sprintf
	jr	BB0_3
BB0_2:
	ld	de, _.str.2
	push	hl
	push	de
	push	bc
	call	_sprintf
	pop	hl
BB0_3:
	pop	hl
	pop	hl
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	bc, -327680
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
	ex	de, hl
BB0_4:
	ld	de, (ix - 3)
	ld	a, e
	inc	a
	or	a, a
	sbc	hl, de
	jr	z, BB0_6
	lea	hl, iy
	ld	de, (ix - 3)
	add	hl, de
	ld	de, 0
	ld	e, (hl)
	push	de
	ld	hl, _.str.4
	push	hl
	push	bc
	ld	(ix - 4), a
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	a, (ix - 4)
	and	a, 15
	or	a, a
	ld	hl, _.str.3
	push	hl
	ld	hl, -327680
	push	hl
	call	z, _sprintf
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	bc, -327680
	ld	iy, (ix + 6)
	ld	hl, (ix + 9)
	jr	BB0_4
BB0_6:
	ld	hl, _.str.3
	push	hl
	push	bc
	call	_sprintf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_demo_aes_cbc
_demo_aes_cbc:
	ld	hl, -12
	call	__frameset
	ld	hl, (_msg)
	push	hl
	call	_strlen
	push	hl
	pop	de
	pop	hl
	ld	a, e
	and	a, 15
	push	de
	pop	iy
	ld	bc, 16
	add	iy, bc
	lea	hl, iy
	ld	bc, -16
	call	__iand
	or	a, a
	jr	z, BB1_2
	push	hl
	pop	iy
BB1_2:
	ld	(ix - 3), iy
	push	iy
	push	de
	ld	hl, _.str.5
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 0
	add	hl, sp
	ld	de, (ix - 3)
	or	a, a
	sbc	hl, de
	ld	(ix - 6), hl
	ld	sp, hl
	ld	hl, 0
	add	hl, sp
	or	a, a
	sbc	hl, de
	ld	(ix - 9), hl
	ld	sp, hl
	ld	hl, _.str.6
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 16
	push	hl
	ld	hl, _iv
	push	hl
	ld	hl, 32
	push	hl
	ld	hl, _key
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_init
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.7
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_msg)
	ld	(ix - 12), hl
	push	hl
	call	_strlen
	pop	de
	ld	de, (ix - 6)
	push	de
	push	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_encrypt
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.8
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _.str.9
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	call	_hexdump
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 16
	push	hl
	ld	hl, _iv
	push	hl
	ld	hl, 32
	push	hl
	ld	hl, _key
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_init
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.7
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 9)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_decrypt
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.10
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, _.str.11
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_demo_aes_ctr
_demo_aes_ctr:
	ld	hl, -12
	call	__frameset
	ld	hl, (_msg)
	push	hl
	call	_strlen
	ld	(ix - 9), hl
	pop	de
	push	hl
	call	_malloc
	ld	(ix - 3), hl
	pop	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, 1
	push	hl
	call	_calloc
	ld	(ix - 6), hl
	pop	hl
	pop	hl
	ld	hl, _.str.12
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	ld	hl, 2177
	push	hl
	ld	hl, 16
	push	hl
	ld	hl, _iv
	push	hl
	ld	hl, 32
	push	hl
	ld	hl, _key
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_init
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.13
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	ld	(hl), 0
	push	hl
	pop	iy
	inc	iy
	ld	bc, 47
	lea	de, iy
	ldir
	ld	hl, (_msg)
	ld	(ix - 12), hl
	push	hl
	call	_strlen
	pop	de
	ld	de, (ix - 3)
	push	de
	push	hl
	ld	hl, (ix - 12)
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_encrypt
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.14
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _.str.9
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_hexdump
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 2177
	push	hl
	ld	hl, 16
	push	hl
	ld	hl, _iv
	push	hl
	ld	hl, 32
	push	hl
	ld	hl, _key
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_init
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.13
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_decrypt
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.15
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, _.str.11
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	push	hl
	call	_free
	pop	hl
	ld	hl, (ix - 6)
	push	hl
	call	_free
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_demo_aes_gcm
_demo_aes_gcm:
	ld	hl, -47
	call	__frameset
	lea	hl, ix - 16
	ld	(ix - 41), hl
	ld	hl, (_msg)
	push	hl
	call	_strlen
	ld	(ix - 38), hl
	pop	de
	push	hl
	ld	hl, 1
	push	hl
	call	_calloc
	ld	(ix - 35), hl
	pop	hl
	pop	hl
	ld	hl, (ix - 38)
	push	hl
	call	_malloc
	ld	(ix - 44), hl
	pop	hl
	ld	hl, _.str.17
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	ld	hl, 2
	push	hl
	ld	hl, 13
	push	hl
	ld	hl, _iv
	push	hl
	ld	hl, 32
	push	hl
	ld	hl, _key
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_init
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.18
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 18
	push	hl
	ld	hl, _.str.16
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_update_aad
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (_msg)
	ld	(ix - 47), hl
	push	hl
	call	_strlen
	pop	de
	ld	de, (ix - 35)
	push	de
	push	hl
	ld	hl, (ix - 47)
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_encrypt
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.19
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _.str.9
	push	hl
	ld	hl, (ix - 38)
	push	hl
	ld	hl, (ix - 35)
	push	hl
	call	_hexdump
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 41)
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_digest
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.20
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _.str.21
	push	hl
	ld	hl, 16
	push	hl
	ld	hl, (ix - 41)
	push	hl
	call	_hexdump
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 2
	push	hl
	ld	hl, 13
	push	hl
	ld	hl, _iv
	push	hl
	ld	hl, 32
	push	hl
	ld	hl, _key
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_init
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.18
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 41)
	push	hl
	ld	hl, (ix - 38)
	push	hl
	ld	hl, (ix - 35)
	push	hl
	ld	hl, 18
	push	hl
	ld	hl, _.str.16
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_verify
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	bit	0, a
	jp	z, BB3_2
	ld	hl, _.str.23
	lea	de, ix - 32
	ld	(ix - 41), de
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	ld	hl, 18
	push	hl
	ld	hl, _.str.16
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_update_aad
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 38)
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, (ix - 44)
	push	hl
	call	_memset
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 44)
	push	hl
	ld	hl, (ix - 38)
	push	hl
	ld	hl, (ix - 35)
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_decrypt
	pop	de
	pop	de
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.24
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 44)
	push	hl
	ld	hl, _.str.11
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 41)
	push	hl
	ld	hl, _ctx
	push	hl
	call	_cryptx_aes_digest
	pop	de
	pop	de
	ld	(_error), hl
	push	hl
	ld	hl, _.str.20
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _.str.21
	push	hl
	ld	hl, 16
	push	hl
	ld	hl, (ix - 41)
	push	hl
	call	_hexdump
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 35)
	push	hl
	call	_free
	pop	hl
	ld	hl, (ix - 44)
	push	hl
	call	_free
	jr	BB3_3
BB3_2:
	ld	hl, _.str.22
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
BB3_3:
	pop	hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	de, -327680
	ld	hl, _.str.25
	push	hl
	push	de
	call	_sprintf
	pop	hl
	pop	hl
	call	_cryptx_csrand_init
	bit	0, a
	jr	z, BB4_2
	ld	hl, _.str.26
	push	hl
	ld	hl, -327680
	push	hl
	call	_sprintf
	pop	hl
	pop	hl
	ld	hl, _.str.27
	push	hl
	ld	hl, 32
	push	hl
	ld	hl, _key
	push	hl
	call	_hexdump
	pop	hl
	pop	hl
	pop	hl
	ld	hl, _.str.28
	push	hl
	ld	hl, 16
	push	hl
	ld	hl, _iv
	push	hl
	call	_hexdump
	pop	hl
	pop	hl
	pop	hl
	call	_demo_aes_cbc
	call	_demo_aes_ctr
	call	_demo_aes_gcm
	or	a, a
	sbc	hl, hl
	ret
BB4_2:
	ld	hl, 1
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"The lazy fox jumped over the dog!", 0

	section	.data,"aw",@progbits
	public	_msg
_msg:
	dl	_.str

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	"The dog got angry and barked", 0

	section	.data,"aw",@progbits
	public	_secondmsg
_secondmsg:
	dl	_.str.1

	section	.data,"aw",@progbits
	public	_key
_key:
	db	"Óâ√çSz÷ûw‡‡LLp€·""y·êØôIéfs"

	section	.data,"aw",@progbits
	public	_iv
_iv:
	db	"y¶ﬁﬂ¢|Óéıc§ä"

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	10, "%s", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.3
_.str.3:
	db	10, 0

	section	.rodata,"a",@progbits
	private	_.str.4
_.str.4:
	db	"\x%02X", 0

	section	.rodata,"a",@progbits
	private	_.str.5
_.str.5:
	db	"String len: %u", 10, "Allocated size: %u", 0

	section	.rodata,"a",@progbits
	private	_.str.6
_.str.6:
	db	10, "-----------------------------------", 10, "Cyclic Block Chain (CBC) mode", 10, 10, 0

	section	.bss,"aw",@nobits
	public	_ctx
_ctx:
	rb	350

	section	.bss,"aw",@nobits
	public	_error
_error:
	rb	3

	section	.rodata,"a",@progbits
	private	_.str.7
_.str.7:
	db	"cbc init complete, exit code %u", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.8
_.str.8:
	db	"cbc encryption done, exit code %u", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.9
_.str.9:
	db	"-- encrypted msg --", 0

	section	.rodata,"a",@progbits
	private	_.str.10
_.str.10:
	db	"cbc decryption done, exit code %u", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.11
_.str.11:
	db	"%s", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.12
_.str.12:
	db	10, "-----------------------------------", 10, "Counter (CTR) mode", 10, 10, 0

	section	.rodata,"a",@progbits
	private	_.str.13
_.str.13:
	db	"ctr init complete, exit code %u", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.14
_.str.14:
	db	"ctr encryption done, exit code %u", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.15
_.str.15:
	db	"ctr decryption done, exit code %u", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.16
_.str.16:
	db	"Some random header", 0

	section	.rodata,"a",@progbits
	private	_.str.17
_.str.17:
	db	10, "-----------------------------------", 10, "Galois Counter (GCM) mode", 10, 10, 0

	section	.rodata,"a",@progbits
	private	_.str.18
_.str.18:
	db	"gcm init complete, exit code %u", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.19
_.str.19:
	db	"gcm encryption done, exit code %u", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.20
_.str.20:
	db	"gcm digest return done, exit code %u", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.21
_.str.21:
	db	"-- digest of aad + ciphertext --", 0

	section	.rodata,"a",@progbits
	private	_.str.22
_.str.22:
	db	"auth tag invalid. not decrypting.", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.23
_.str.23:
	db	"auth tag valid. proceeding.", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.24
_.str.24:
	db	"gcm decryption done, exit code %u", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.25
_.str.25:
	db	10, "------------------------------", 10, "CryptX AES Demo", 10, "------------------------------", 10, 0

	section	.rodata,"a",@progbits
	private	_.str.26
_.str.26:
	db	10, "-----------------------------------", 10, "Secrets for Testing", 10, 10, 0

	section	.rodata,"a",@progbits
	private	_.str.27
_.str.27:
	db	"-- aes key --", 0

	section	.rodata,"a",@progbits
	private	_.str.28
_.str.28:
	db	"-- initialization vector --", 0

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 6c61664110f888c0285ae4c48b150c9a7a4361bb)"
	extern	_memset
	extern	_cryptx_aes_update_aad
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_malloc
	extern	_sprintf
	extern	_cryptx_aes_encrypt
	extern	_strlen
	extern	_cryptx_csrand_init
	extern	__iand
	extern	__Unwind_SjLj_Unregister
	extern	_cryptx_aes_verify
	extern	_cryptx_aes_decrypt
	extern	_calloc
	extern	_cryptx_aes_init
	extern	_cryptx_aes_digest
	extern	_free
