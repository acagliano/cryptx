<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="cryptx_8h" kind="file" language="C++">
    <compoundname>cryptx.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h</label>
        <link refid="cryptx_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structcryptx__priv__hash__sha256__state" prot="public">cryptx_priv_hash_sha256_state</innerclass>
    <innerclass refid="unioncryptx__hash__private__h" prot="public">cryptx_hash_private_h</innerclass>
    <innerclass refid="structcryptx__priv__hmac__sha256__state" prot="public">cryptx_priv_hmac_sha256_state</innerclass>
    <innerclass refid="unioncryptx__hmac__private__h" prot="public">cryptx_hmac_private_h</innerclass>
    <innerclass refid="structcryptx__aes__cbc__state" prot="public">cryptx_aes_cbc_state</innerclass>
    <innerclass refid="structcryptx__aes__ctr__state" prot="public">cryptx_aes_ctr_state</innerclass>
    <innerclass refid="structcryptx__aes__gcm__state" prot="public">cryptx_aes_gcm_state</innerclass>
    <innerclass refid="unioncryptx__aes__private__h" prot="public">cryptx_aes_private_h</innerclass>
    <innerclass refid="structcryptx__hash__ctx" prot="public">cryptx_hash_ctx</innerclass>
    <innerclass refid="structcryptx__hmac__ctx" prot="public">cryptx_hmac_ctx</innerclass>
    <innerclass refid="structcryptx__aes__ctx" prot="public">cryptx_aes_ctx</innerclass>
    <innerclass refid="structcryptx__ecc__point" prot="public">cryptx_ecc_point</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="cryptx_8h_1aa08392858444e1cc894d5f98432411c9" prot="public" static="no">
        <name>CRYPTX_AES_128_KEYLEN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="286" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a0ceacc8bb81e6ef0f60bbe736732e5e0" prot="public" static="no">
        <name>CRYPTX_AES_192_KEYLEN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="287" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1acb2aea7855878c1b9b505ecb9b9583b1" prot="public" static="no">
        <name>CRYPTX_AES_256_KEYLEN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="288" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a2d638028c68c84297614a1dc7ff318d9" prot="public" static="no">
        <name>CRYPTX_AES_BLOCK_SIZE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="290" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1ac47330f91ba12f7856c0c198bdbf2753" prot="public" static="no">
        <name>CRYPTX_AES_IV_SIZE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="291" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a89521b82b1be81ea3e5f70c3593bf5a9" prot="public" static="no">
        <name>CRYPTX_AES_AUTHTAG_SIZE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="292" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1af0f7e8aa23de8ecc99b2420efefa4edc" prot="public" static="no">
        <name>CRYPTX_AES_CBC_FLAGS</name>
        <param><defname>padding_mode</defname></param>
        <briefdescription>
<para>Defines a macro to enable AES CBC cipher mode and pass relevant configuration options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="295" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a0ed8d02473b9a003653db30e1d856614" prot="public" static="no">
        <name>CRYPTX_AES_CTR_FLAGS</name>
        <param><defname>nonce_len</defname></param>
        <param><defname>counter_len</defname></param>
        <briefdescription>
<para>Defines a macro to enable AES CTR cipher mode and pass relevant configuration options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="299" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1ac0de9d43e9ef5718060b164bf71e3ae0" prot="public" static="no">
        <name>CRYPTX_AES_GCM_FLAGS</name>
        <briefdescription>
<para>Defines a macro to enable AES GCM cipher mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="303" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1adf4062c77f37927bc0178872056602ff" prot="public" static="no">
        <name>cryptx_aes_get_ciphertext_len</name>
        <param><defname>len</defname></param>
        <briefdescription>
<para>Defines a macro to return the byte length of an AES ciphertext given a plaintext length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="306" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a265dcd336b31e2b95870d864c85cee2a" prot="public" static="no">
        <name>CRYPTX_RSA_MODULUS_MAX</name>
        <briefdescription>
<para>Defines the maximum byte length of an RSA public modulus supported by this library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="425" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a26e233163ef752cc08d3f3499007369a" prot="public" static="no">
        <name>CRYPTX_EC_PRIVKEY_LEN</name>
        <briefdescription>
<para>Defines the byte length of an ECDH private key supported by this library. </para>
        </briefdescription>
        <detaileddescription>
<sect3 id="cryptx_8h_1autotoc_md3">
<title>ELLIPTIC CURVE DIFFIE-HELLMAN</title>
<para>Using curve SECT233k1 </para>
</sect3>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="452" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="452" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a9fb63bb764b8654fc273535be6c4e3a3" prot="public" static="no">
        <name>CRYPTX_EC_PUBKEY_LEN</name>
        <briefdescription>
<para>Defines the byte length of an ECDH public key supported by this library. </para>
        </briefdescription>
        <detaileddescription>
<para><linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="455" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a3afc412d9c56cd1f46407fe280b92156" prot="public" static="no">
        <name>CRYPTX_EC_SECRET_LEN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="456" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a13585a6206e220218a8f379327b04433" prot="public" static="no">
        <name>cryptx_asn1_get_tag</name>
        <param><defname>tag</defname></param>
        <briefdescription>
<para>Returns the unmasked tag. See <bold>CRYPTX_ASN1_TAGS</bold> above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="542" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="542" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a5af192045bb48e03f788962f259a2a7e" prot="public" static="no">
        <name>cryptx_asn1_get_class</name>
        <param><defname>tag</defname></param>
        <briefdescription>
<para>Returns the 2-bit tag class flag. See <bold>CRYPTX_ASN1_CLASSES</bold> above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="544" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="544" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a3c8b39f5fb3ad1d8d138b9791b18f01e" prot="public" static="no">
        <name>cryptx_asn1_get_form</name>
        <param><defname>tag</defname></param>
        <briefdescription>
<para>Returns the 1-bit tag form (1 = constructed, 0 = primitive). See <bold>CRYPTX_ASN1_FORMS</bold> above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="546" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="546" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a9db7be56d66674980b5540cab9405cc7" prot="public" static="no">
        <name>cryptx_base64_get_encoded_len</name>
        <param><defname>len</defname></param>
        <briefdescription>
<para>Defines a macro to return the expected size of base64-encoded data, given octet-encoded length. </para>
        </briefdescription>
        <detaileddescription>
<sect3 id="cryptx_8h_1autotoc_md5">
<title>BASE 64 ENCODE/DECODE</title>
</sect3>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="581" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="581" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a5629130707448f8475166398fb18a486" prot="public" static="no">
        <name>cryptx_base64_get_decoded_len</name>
        <param><defname>len</defname></param>
        <briefdescription>
<para>Defines a macro to return the expected size of octet-encoded data, given base64-encoded length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="583" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1ad0e904358b21cab26ad541d594184a89" prot="public" static="no">
        <name>CRYPTX_GF2_INTLEN</name>
        <briefdescription>
<para>Defines the length of a galois field for a curve of degree 233. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="678" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="678" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93b" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_hash_algorithms</name>
        <enumvalue id="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93bac7716785728694693ec29eccd5ffa0e1" prot="public">
          <name>SHA256</name>
          <briefdescription>
<para>algorithm type identifier for SHA-256 </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93ba27028cc8b5d6f0a1cb3030c180019abc" prot="public">
          <name>SHA1</name>
          <briefdescription>
<para>algorithm type identifier for SHA-1 </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="93" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a59334db45c5435de6ded4492dec34735" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_aes_cipher_modes</name>
        <enumvalue id="cryptx_8h_1a59334db45c5435de6ded4492dec34735ad21a3698b98b7368b14ec3d48314a132" prot="public">
          <name>AES_MODE_CBC</name>
          <briefdescription>
<para>selects Cyclic Block Chain (CBC) mode </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a59334db45c5435de6ded4492dec34735a5ecd63cd0bd97d46f273461b6550cb8e" prot="public">
          <name>AES_MODE_CTR</name>
          <briefdescription>
<para>selects Counter (CTR) mode </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a59334db45c5435de6ded4492dec34735aa41ebb36bc19b64d64ff6b7fc0d5e5df" prot="public">
          <name>AES_MODE_GCM</name>
          <briefdescription>
<para>selects Galois Counter (GCM) mode </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="272" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="272" bodyend="276"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_aes_padding_schemes</name>
        <enumvalue id="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a673ae2fee0bfe0a962717b3f673b9b7c" prot="public">
          <name>PAD_PKCS7</name>
          <briefdescription>
<para>PKCS#7 padding | DEFAULT. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a322c11c9058ef67073a3ff9bdcb9f759" prot="public">
          <name>PAD_DEFAULT</name>
          <initializer>= PAD_PKCS7</initializer>
          <briefdescription>
<para>selects the scheme marked DEFAULT. </para>
          </briefdescription>
          <detaileddescription>
<para>Using this is recommended in case a change to the standards would set a stronger padding scheme as default </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a7566d9371110a1a24db62b145c901ad8" prot="public">
          <name>PAD_ISO2</name>
          <briefdescription>
<para>ISO-9797 M2 padding. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="278" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="278" bodyend="284"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" prot="public" static="no" strong="no">
        <type></type>
        <name>aes_error_t</name>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaacf07636102724d2a7913911b0cf74b2" prot="public">
          <name>AES_OK</name>
          <briefdescription>
<para>AES operation completed successfully. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda6d39b280aea9d8d62d126eef05d271db" prot="public">
          <name>AES_INVALID_ARG</name>
          <briefdescription>
<para>AES operation failed, bad argument. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaae5e9a591aeda666b0e425d9a05834e3" prot="public">
          <name>AES_INVALID_MSG</name>
          <briefdescription>
<para>AES operation failed, message invalid. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdad2b49ffeabf14aaf47db3d1bad18f84e" prot="public">
          <name>AES_INVALID_CIPHERMODE</name>
          <briefdescription>
<para>AES operation failed, cipher mode undefined. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda47bbd593fc3bdb7758a790bab86b41d9" prot="public">
          <name>AES_INVALID_PADDINGMODE</name>
          <briefdescription>
<para>AES operation failed, padding mode undefined. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaba928751c773ffa0287e47e1f86eae8b" prot="public">
          <name>AES_INVALID_CIPHERTEXT</name>
          <briefdescription>
<para>AES operation failed, ciphertext error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda95a9dcbf64347e3c6f2c50d05e8937f5" prot="public">
          <name>AES_INVALID_OPERATION</name>
          <briefdescription>
<para>AES operation failed, used encrypt context for decrypt or vice versa. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines response codes returned by the AES API. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="310" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="310" bodyend="318"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a0486449f609d0e485bad091a671d9294" prot="public" static="no" strong="no">
        <type></type>
        <name>rsa_error_t</name>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294a2cafdb683e1870a33bcb821420626cae" prot="public">
          <name>RSA_OK</name>
          <briefdescription>
<para>RSA encryption completed successfully. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294aab9ab38286c4180a1aa9f6e8df42e5db" prot="public">
          <name>RSA_INVALID_ARG</name>
          <briefdescription>
<para>RSA encryption failed, bad argument. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294aedeb18a96b96e292369abed5b2f0a271" prot="public">
          <name>RSA_INVALID_MSG</name>
          <briefdescription>
<para>RSA encryption failed, bad msg or msg too long. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294a843ec210de66176ef63e2d2b8ebdeb65" prot="public">
          <name>RSA_INVALID_MODULUS</name>
          <briefdescription>
<para>RSA encryption failed, modulus invalid. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294a43eadc89540121b902e02afabc7a7eb9" prot="public">
          <name>RSA_ENCODING_ERROR</name>
          <briefdescription>
<para>RSA encryption failed, OAEP encoding error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines response codes returned by calls to the RSA API. </para>
        </briefdescription>
        <detaileddescription>
<sect3 id="cryptx_8h_1autotoc_md2">
<title>RIVEST-SHAMIR-ADLEMAN (RSA)</title>
</sect3>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="416" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="416" bodyend="422"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" prot="public" static="no" strong="no">
        <type></type>
        <name>ec_error_t</name>
        <enumvalue id="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90ae92ae69b454b0311041616e4be38d26e" prot="public">
          <name>EC_OK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90a51c1b8f170116b8aa0a75c6ad6fd3d0d" prot="public">
          <name>EC_INVALID_ARG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90a77a3ce6d10fe286a0f7789b15c4ed790" prot="public">
          <name>EC_PRIVKEY_INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90ae8066072efe056458722cc53a743966a" prot="public">
          <name>EC_RPUBKEY_INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines possible response codes from calls to the ECDH API. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="459" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="459" bodyend="464"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5" prot="public" static="no" strong="no">
        <type></type>
        <name>CRYPTX_ASN1_TAGS</name>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a0b4ee1817dddda0e7bb95f8c9c5262cc" prot="public">
          <name>ASN1_RESVD</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>RESERVED. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5afcacc079274ffffd6f8f30005a478309" prot="public">
          <name>ASN1_BOOLEAN</name>
          <briefdescription>
<para>defines a BOOLEAN object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ace678073d12a09bd35a9d14ee843f4f6" prot="public">
          <name>ASN1_INTEGER</name>
          <briefdescription>
<para>defines an INTEGER object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a80cce3c21b5cf2a46abcf2d6559f16a2" prot="public">
          <name>ASN1_BITSTRING</name>
          <briefdescription>
<para>defines a BIT STRING object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ad652362316e1126ce1f372ee9f42fdf7" prot="public">
          <name>ASN1_OCTETSTRING</name>
          <briefdescription>
<para>defines an OCTET STRING object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ab9aa4736a7a0bec12fda19d770381ade" prot="public">
          <name>ASN1_NULL</name>
          <briefdescription>
<para>defines a NULL object (0 size, no data) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ab4e5697bbcfa96959f724b475deb438d" prot="public">
          <name>ASN1_OBJECTID</name>
          <briefdescription>
<para>defines an OBJECT IDENTIFIER </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5afa75f14a7646b0ee90575da2299c9303" prot="public">
          <name>ASN1_OBJECTDESC</name>
          <briefdescription>
<para>defines an OBJECT DESCRIPTION </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a2169eaf366165cd4dfe1aca66659935c" prot="public">
          <name>ASN1_INSTANCE</name>
          <briefdescription>
<para>defines an INSTANCE </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ade199cbdfbec356bae58bc468797580a" prot="public">
          <name>ASN1_REAL</name>
          <briefdescription>
<para>defines a REAL object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a5bb35c428781f325e40ea36ab317bc42" prot="public">
          <name>ASN1_ENUMERATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a7c167c8e276b910d748db386f78383af" prot="public">
          <name>ASN1_EMBEDDEDPDV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a64811d53c5db0139556f07ec23185f08" prot="public">
          <name>ASN1_UTF8STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a5234ef0948bc0487ae9474e21ce0df3f" prot="public">
          <name>ASN1_RELATIVEOID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a472ab1907cf28338eff639b8b5ab667c" prot="public">
          <name>ASN1_SEQUENCE</name>
          <initializer>= 16</initializer>
          <briefdescription>
<para>defines a SEQUENCE </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5aefff306acd391300face0a8080ad415e" prot="public">
          <name>ASN1_SET</name>
          <briefdescription>
<para>defines a SET </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5af1b09bf2be320630525edcbbffe0424e" prot="public">
          <name>ASN1_NUMERICSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a336e057dd223cc6f701304f0461a2ddf" prot="public">
          <name>ASN1_PRINTABLESTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a9bf70ad3dd4bf8c417d2df3a0567b7a4" prot="public">
          <name>ASN1_TELETEXSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a74f77040fbd3853dd952425441fe5768" prot="public">
          <name>ASN1_VIDEOTEXSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ae00956dc4ea6da4a6f5b052e35ad4b75" prot="public">
          <name>ASN1_IA5STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a11abbe84d583fe76922cb89fe1220567" prot="public">
          <name>ASN1_UTCTIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a6b3d1c40aa79f25a72a9165a4cd691d4" prot="public">
          <name>ASN1_GENERALIZEDTIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a7866c130d61ad33372bb0cacdcc50e71" prot="public">
          <name>ASN1_GRAPHICSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5acb9714785116f8951d2cdfb45bcfaf6c" prot="public">
          <name>ASN1_VISIBLESTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5aaecdda4440eb96bc770733f950eab4dd" prot="public">
          <name>ASN1_GENERALSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a1e1d7c1dcf076d12776c085e5f534d58" prot="public">
          <name>ASN1_UNIVERSALSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5af46947fb8b9acd84edae67bb08dabb28" prot="public">
          <name>ASN1_CHARSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5af68d6904a260c69ee964445f81bfbbc4" prot="public">
          <name>ASN1_BMPSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<sect3 id="cryptx_8h_1autotoc_md4">
<title>ABSTRACT SYNTAX NOTATION ONE (ASN.1)</title>
</sect3>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="497" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="497" bodyend="527"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900" prot="public" static="no" strong="no">
        <type></type>
        <name>CRYPTX_ASN1_CLASSES</name>
        <enumvalue id="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a36845401ba730128d3078d9cd0730fe8" prot="public">
          <name>ASN1_UNIVERSAL</name>
          <briefdescription>
<para>tags defined in the ASN.1 standard. </para>
          </briefdescription>
          <detaileddescription>
<para>Most use cases on calc will be this. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a1c873115fb577a391d1af735307abc45" prot="public">
          <name>ASN1_APPLICATION</name>
          <briefdescription>
<para>tags unique to a particular application. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a0e4e8c83e4929fe69855de5c8c7a34d3" prot="public">
          <name>ASN1_CONTEXTSPEC</name>
          <briefdescription>
<para>tags that need to be identified within a particular, well-definded context. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900ac51c7440728bfe2d94426d0ca4f3d895" prot="public">
          <name>ASN1_PRIVATE</name>
          <briefdescription>
<para>reserved for use by a specific entity for their applications. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="529" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="529" bodyend="534"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1af2211fe420abff08488c8f04de017080" prot="public" static="no" strong="no">
        <type></type>
        <name>CRYPTX_ASN1_FORMS</name>
        <enumvalue id="cryptx_8h_1af2211fe420abff08488c8f04de017080a916350d579d4895b1f843289b60b4572" prot="public">
          <name>ASN1_PRIMITIVE</name>
          <briefdescription>
<para>this element should contain no nested elements. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1af2211fe420abff08488c8f04de017080ad03b2b41a6f3417a981a78ca887332e6" prot="public">
          <name>ASN1_CONSTRUCTED</name>
          <briefdescription>
<para>this element contains nested elements. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="536" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="536" bodyend="539"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" prot="public" static="no" strong="no">
        <type></type>
        <name>asn1_error_t</name>
        <enumvalue id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33ae8a5623b62dab851b0dc76048afc0b4a" prot="public">
          <name>ASN1_OK</name>
          <briefdescription>
<para>No errors occured. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a434628c70562f3ab468d94e8eae7784d" prot="public">
          <name>ASN1_END_OF_FILE</name>
          <briefdescription>
<para>End of ASN.1 data stream reached. </para>
          </briefdescription>
          <detaileddescription>
<para>Not an error. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33aa13d20ad819d43693d26c77b80fb4952" prot="public">
          <name>ASN1_INVALID_ARG</name>
          <briefdescription>
<para>One or more arguments invalid. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a0101185f2109f1ba75ea2c4833664474" prot="public">
          <name>ASN1_LEN_OVERFLOW</name>
          <briefdescription>
<para>Length of an element overflowed arch size_t allowance. </para>
          </briefdescription>
          <detaileddescription>
<para>Remainder of data stream unparsable. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines error codes returned from calls to the ASN.1 API. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="549" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="549" bodyend="554"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cryptx_8h_1a791c9616d63340d5f3d55673abefd768" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t x[30]</definition>
        <argsstring>[30]</argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="0" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cryptx_8h_1a9671c45fbc76e3760ed5b891992cf94a" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t y[30]</definition>
        <argsstring>[30]</argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="1" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cryptx_8h_1a70b79d7bbba52b64700123ab77ab5a28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_hash_init</definition>
        <argsstring>(struct cryptx_hash_ctx *context, uint8_t hash_alg)</argsstring>
        <name>cryptx_hash_init</name>
        <param>
          <type>struct cryptx_hash_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Initializes a hash-state context for a specific hash algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a hash-state context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if hash initialization succeeded, <bold>false</bold> if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="104" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="104" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a0df23ee0aff04b31db05f5175bfe63a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hash_update</definition>
        <argsstring>(struct cryptx_hash_ctx *context, const void *data, size_t len)</argsstring>
        <name>cryptx_hash_update</name>
        <param>
          <type>struct cryptx_hash_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Updates the hash-state for a given block of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a hash-state context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a block of data to hash.. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <bold>data</bold> to hash. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="112" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="112" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a1444bb4124409dbae8088ffbc9830ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hash_digest</definition>
        <argsstring>(struct cryptx_hash_ctx *context, void *digest)</argsstring>
        <name>cryptx_hash_digest</name>
        <param>
          <type>struct cryptx_hash_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>digest</declname>
        </param>
        <briefdescription>
<para>Output digest for current hash-state (preserves state). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a hash-state context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>digest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to write digest to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="119" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="119" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a661281f90257c5e21dbb53654ba505e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hash_mgf1</definition>
        <argsstring>(const void *data, size_t datalen, void *outbuf, size_t outlen, uint8_t hash_alg)</argsstring>
        <name>cryptx_hash_mgf1</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>datalen</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>outbuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>outlen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Computes a digest of arbitrary length for a given block of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data to hash. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>datalen</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of <bold>data</bold> to hash. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write digest to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write to <bold>outbuf</bold>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="129" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="129" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a21c854c0bcb6f7497516847e080c27c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_hmac_init</definition>
        <argsstring>(struct cryptx_hmac_ctx *context, const void *key, size_t keylen, uint8_t hash_alg)</argsstring>
        <name>cryptx_hmac_init</name>
        <param>
          <type>struct cryptx_hmac_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Initializes an HMAC-state context for a specific hash algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an HMAC-state context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a key used to initialize the <ref refid="structHMAC" kindref="compound">HMAC</ref> state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the <bold>key</bold>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if initialized succeeded, <bold>false</bold> if failed. </para>
</simplesect>
<simplesect kind="note"><para>Destroys 516 bytes of fastMem starting at 0xE30800. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="156" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="156" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a1ab7dcd49b5df0f9e697a5e14939d186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hmac_update</definition>
        <argsstring>(struct cryptx_hmac_ctx *context, const void *data, size_t len)</argsstring>
        <name>cryptx_hmac_update</name>
        <param>
          <type>struct cryptx_hmac_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Updates the hash-state for a given block of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an HMAC-state context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a block of data to hash.. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <bold>data</bold> to hash. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Destroys 516 bytes of fastMem starting at 0xE30800. </para>
</simplesect>
<simplesect kind="warning"><para>Calling this on a context that has not been initialized may have unpredictable results. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="169" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="169" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a710f6c433fa3e6d07c602a0fca5952d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hmac_digest</definition>
        <argsstring>(struct cryptx_hmac_ctx *context, void *digest)</argsstring>
        <name>cryptx_hmac_digest</name>
        <param>
          <type>struct cryptx_hmac_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>digest</declname>
        </param>
        <briefdescription>
<para>Output digest for current HMAC-state (preserves state). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an HMAC-state context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>digest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to write digest to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><bold>digest</bold> must be at large enough to hold the hash digest. You can retrieve the necessary size by accessing the <bold>digest_len</bold> member of an initialized <bold>cryptx_hmac_ctx</bold>. </para>
</simplesect>
<simplesect kind="note"><para>Destroys 516 bytes of fastMem starting at 0xE30800. </para>
</simplesect>
<simplesect kind="warning"><para>Calling this on a context that has not been initialized may have unpredictable results. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="182" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="182" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a428a5da208ae3b55b73f4e05242148e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hmac_pbkdf2</definition>
        <argsstring>(const char *password, size_t passlen, const void *salt, size_t saltlen, uint8_t *key, size_t keylen, size_t rounds, uint8_t hash_alg)</argsstring>
        <name>cryptx_hmac_pbkdf2</name>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>passlen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>saltlen</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rounds</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Derives a key from a password, salt, and round count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a string containing the password. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte length of the password. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>salt</parametername>
</parameternamelist>
<parameterdescription>
<para>A psuedo-random string to use in each round of key derivation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>saltlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte length of the salt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rounds</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of times to iterate the <ref refid="structHMAC" kindref="compound">HMAC</ref> function per block of <bold>keylen</bold>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write key to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of <bold>key</bold> to generate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>NIST recommends a salt of at least 128 bits (16 bytes). </para>
</simplesect>
<simplesect kind="note"><para><bold>rounds</bold> is used to increase the cost (computational time) of generating a key. What makes a password-hashing algorithm secure is the time needed to generate a rainbow table attack against it. More rounds means a more secure key, but more time spent generating it. Current cryptography standards recommend thousands of rounds but that may not be feasible on the CE. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="200" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="200" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a2537f98ad431d23589334bf33889ebb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_bytes_tostring</definition>
        <argsstring>(const void *buf, size_t len, char *hexstr)</argsstring>
        <name>cryptx_bytes_tostring</name>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>hexstr</declname>
        </param>
        <briefdescription>
<para>Convert a bytearray to its hexstring representation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to bytearray to convert. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte length of <bold>digest</bold>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hexstr</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to write the output hex string to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="215" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="215" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ae4aaaf994e1f56c7e1e7641458f74a85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_bytes_fromstring</definition>
        <argsstring>(void *buf, const char *hexstr)</argsstring>
        <name>cryptx_bytes_fromstring</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hexstr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="219" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="219" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a71cc951ac0995a56ea485075235fb3f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_bytes_rcopy</definition>
        <argsstring>(void *dest, const void *src, size_t len)</argsstring>
        <name>cryptx_bytes_rcopy</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Copies <bold>len</bold> bytes from <bold>src</bold> to <bold>dest</bold> while reversing the byte order. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to write bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to read bytes from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to read. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="227" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="227" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1afd0c8d1f7d77d3bd2739561996594ff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_bytes_reverse</definition>
        <argsstring>(void *buf, size_t len)</argsstring>
        <name>cryptx_bytes_reverse</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Reverses the byte order of a buffer in-place. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to reverse. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="234" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="234" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ae27b2f138550c6d08a539809f4bc27a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_bytes_compare</definition>
        <argsstring>(const void *buf1, const void *buf2, size_t len)</argsstring>
        <name>cryptx_bytes_compare</name>
        <param>
          <type>const void *</type>
          <declname>buf1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf2</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Compare two bytearrays using a <bold>constant-time</bold> algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf1</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to first buffer to compare. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf2</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to second buffer to compare. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if the buffers are equal, <bold>false</bold> if not equal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="243" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="243" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a61b09a810e766ef1d2ff00c85ece63f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cryptx_csrand_get</definition>
        <argsstring>(void)</argsstring>
        <name>cryptx_csrand_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns a securely psuedo-random 32-bit integer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A securely psuedo-random 32-bit integer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="250" column="10" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="250" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a8c550bae2fddbf8a04655325ba2c9e8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_csrand_fill</definition>
        <argsstring>(void *buffer, size_t size)</argsstring>
        <name>cryptx_csrand_fill</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Fills a buffer with securely pseduo-random bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to fill with random bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer to fill. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> on success, <bold>false</bold> on failure. </para>
</simplesect>
<simplesect kind="return"><para><bold>buffer</bold> filled to size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="259" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="259" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1aee9ba52b80ab5bddd81193cdf26389e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_init</definition>
        <argsstring>(struct cryptx_aes_ctx *context, const void *key, size_t keylen, const void *iv, size_t ivlen, uint24_t flags)</argsstring>
        <name>cryptx_aes_init</name>
        <param>
          <type>struct cryptx_aes_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>iv</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ivlen</declname>
        </param>
        <param>
          <type>uint24_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Initializes a stateful AES cipher context to be used for encryption or decryption. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an AES cipher context to initialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an 128, 192, or 256 bit key to load into the AES context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>The size, in bytes, of the <bold>key</bold> to load. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iv</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Initialization vector, a buffer equal to the block size filled with random bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ivlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the initalization vector. Capped at 16 bytes. Certain cipher modes have different recommendations. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>A series of flags to configure the AES context with. Use the provided <bold>CRYPTX_AES_CTR_FLAGS</bold>, <bold>CRYPTX_AES_CBC_FLAGS</bold>, or <bold>CRYPTX_AES_GCM_FLAGS</bold> to pass flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>aes_error_t</bold> indicating the status of the AES operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="331" column="13" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="331" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a571d4b9eb0fe3d069b10492025e47fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_encrypt</definition>
        <argsstring>(const struct cryptx_aes_ctx *context, const void *plaintext, size_t len, void *ciphertext)</argsstring>
        <name>cryptx_aes_encrypt</name>
        <param>
          <type>const struct cryptx_aes_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ciphertext</declname>
        </param>
        <briefdescription>
<para>Performs a stateful AES encryption of an arbitrary length of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an AES cipher context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data to encrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data at <bold>plaintext</bold> to encrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ciphertext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write encrypted data to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>aes_error_t</bold> indicating the status of the AES operation. </para>
</simplesect>
<simplesect kind="note"><para><bold>ciphertext</bold> should large enough to hold the encrypted message. See the <bold>cryptx_aes_get_ciphertext_len</bold> macro for CBC mode. </para>
</simplesect>
<simplesect kind="note"><para><bold>plaintext</bold> and <bold>ciphertext</bold> are aliasable. </para>
</simplesect>
<simplesect kind="note"><para>Encrypt is streamable, such that <formula id="0">$ encrypt(msg1) + encrypt(msg2) $</formula> is functionally identical to <formula id="1">$ encrypt(msg1+msg2) $</formula> with the exception of intervening padding in CBC mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="350" column="13" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="350" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ab5cf162f80d83c86c9dbba9aa866b289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_decrypt</definition>
        <argsstring>(const struct cryptx_aes_ctx *context, const void *ciphertext, size_t len, void *plaintext)</argsstring>
        <name>cryptx_aes_decrypt</name>
        <param>
          <type>const struct cryptx_aes_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>ciphertext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>plaintext</declname>
        </param>
        <briefdescription>
<para>Performs a stateful AES decryption of an arbitrary length of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to AES cipher context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ciphertext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data to decrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data at <bold>ciphertext</bold> to decrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write decryped data to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>aes_error_t</bold> indicating the status of the AES operation. </para>
</simplesect>
<simplesect kind="note"><para><bold>plaintext</bold> and <bold>ciphertext</bold> are aliasable. </para>
</simplesect>
<simplesect kind="note"><para>Decrypt is streamable, such that <formula id="2">$ decrypt(msg1) + decrypt(msg2) $</formula> is functionally identical to <formula id="3">$ decrypt(msg1+msg2) $</formula> with the exception of intervening padding in CBC mode. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="365" column="13" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="365" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a3d55233d4178e3f6c6b96272fda56ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_update_aad</definition>
        <argsstring>(struct cryptx_aes_ctx *context, const void *aad, size_t aad_len)</argsstring>
        <name>cryptx_aes_update_aad</name>
        <param>
          <type>struct cryptx_aes_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>aad_len</declname>
        </param>
        <briefdescription>
<para>Updates the cipher context for given AAD (Additional Authenticated Data). </para>
        </briefdescription>
        <detaileddescription>
<para>AAD is data that is only authenticated, not encrypted. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an AES context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to additional authenticated data segment. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of additional data segment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>aes_error_t</bold> indicating the status of the AES operation. </para>
</simplesect>
<simplesect kind="note"><para>This function can only be called between cipher initialization and encryption/decryption. Attempting to call this function at any other time will return <bold>AES_INVALID_OPERATION</bold>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="380" column="13" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="380" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a7aaae6b33efe97c579d24729680eda79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_digest</definition>
        <argsstring>(struct cryptx_aes_ctx *context, uint8_t *digest)</argsstring>
        <name>cryptx_aes_digest</name>
        <param>
          <type>struct cryptx_aes_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>digest</declname>
        </param>
        <briefdescription>
<para>Returns the current authentication tag for data parsed so far. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an AES context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>digest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to output digest to. Must be at least 16 bytes large. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>aes_error_t</bold> indicating the status of the AES operation. </para>
</simplesect>
<simplesect kind="warning"><para><bold>Nonce-misuse vulnerability/forbidden attack</bold>: GCM is vulnerable to key discovery if the same nonce is reused to encrypt or decrypt multiple messages. Once you generate a digest for data processed by the cipher, cycle the nonce by generating a new one and calling <bold>cryptx_aes_init</bold> again with the new nonce. To ensure this is done properly, the context is marked invalid once this function is called. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="393" column="13" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="393" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a69437bd1ca1d4fe40dc50d91da7c1be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_aes_verify</definition>
        <argsstring>(const struct cryptx_aes_ctx *context, const void *aad, size_t aad_len, const void *ciphertext, size_t ciphertext_len, uint8_t *tag)</argsstring>
        <name>cryptx_aes_verify</name>
        <param>
          <type>const struct cryptx_aes_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>aad_len</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>ciphertext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ciphertext_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
<para>Parses the specified AAD and ciphertext and then compares the output auth tag to an expected auth tag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an AES context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to associated data to authenticate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of associated data to authenticate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ciphertext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to ciphertext to authenticate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ciphertext_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of ciphertext to authenticate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to expected auth tag to validate against. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if authentication tag matches expected, FALSE otherwise. </para>
</simplesect>
<simplesect kind="note"><para>If this function returns FALSE, do not decrypt the message. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="408" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="408" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1aa4f5ae1eb3d9636c20dec64503a4896b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294" kindref="member">rsa_error_t</ref></type>
        <definition>rsa_error_t cryptx_rsa_encrypt</definition>
        <argsstring>(const void *msg, size_t msglen, const void *pubkey, size_t keylen, void *ciphertext, uint8_t oaep_hash_alg)</argsstring>
        <name>cryptx_rsa_encrypt</name>
        <param>
          <type>const void *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>msglen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ciphertext</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>oaep_hash_alg</declname>
        </param>
        <briefdescription>
<para>Encrypts a message using the given RSA public key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a message to encrypt using RSA. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msglen</parametername>
</parameternamelist>
<parameterdescription>
<para>The byte length of the <bold>msg</bold>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a public key to use for encryption. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the public key (modulus) to encrypt with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ciphertext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer a buffer to write the ciphertext to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oaep_hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use within OAEP encoding. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>rsa_error_t</bold> indicating the status of the RSA operation. </para>
</simplesect>
<simplesect kind="note"><para><bold>ciphertext</bold> should be at least <bold>msglen</bold> bytes large. </para>
</simplesect>
<simplesect kind="note"><para>OAEP encoding is applied to the message as part of the encryption. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="440" column="13" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="440" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ace17d744e36edae96bea85ccfa7c18f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" kindref="member">ec_error_t</ref></type>
        <definition>ec_error_t cryptx_ec_keygen</definition>
        <argsstring>(uint8_t *privkey, uint8_t *pubkey)</argsstring>
        <name>cryptx_ec_keygen</name>
        <param>
          <type>uint8_t *</type>
          <declname>privkey</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
<para>Generates a pair of public/private keys for ECC over SECT233k1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>privkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to EC private key buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to EC public key buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A random 29-byte EC private key and associated public key. </para>
</simplesect>
<simplesect kind="note"><para>Output public key is a point on the curve expressed as two 30-byte coordinates encoded in little endian byte order and padded with zeros (if needed). You may have to deserialize the key and then serialize it into a different format to use it with some encryption libraries. </para>
</simplesect>
<simplesect kind="note"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="477" column="12" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="477" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a4057940333f4f8f56b8ccf1d24db21ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" kindref="member">ec_error_t</ref></type>
        <definition>ec_error_t cryptx_ec_secret</definition>
        <argsstring>(const uint8_t *privkey, const uint8_t *rpubkey, uint8_t *secret)</argsstring>
        <name>cryptx_ec_secret</name>
        <param>
          <type>const uint8_t *</type>
          <declname>privkey</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>rpubkey</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>secret</declname>
        </param>
        <briefdescription>
<para>Computes a secret from the private key and the remote public key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>privkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to local private key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rpubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to remote public key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>secret</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write shared secret to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><bold>secret</bold> must be at least <bold>CRYPTX_ECDH_SECRET_LEN</bold> bytes large. </para>
</simplesect>
<simplesect kind="note"><para>Output secret is a point on the curve expressed as two 30-byte coordinates encoded in little endian byte order and padded with zeros if needed. You may have to deserialize the secret and then serialize it into a different format for compatibility with other encryption libraries. </para>
</simplesect>
<simplesect kind="note"><para>It is generally not recommended to use the computed secret as an encryption key as is. It is preferred to pass the secret to a KDF or a cryptographic primitive such as a hash function and use that output as your symmetric key. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="493" column="12" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="493" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1afbb965d7c7819b8685a1062d5e21e02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" kindref="member">asn1_error_t</ref></type>
        <definition>asn1_error_t cryptx_asn1_decode</definition>
        <argsstring>(void *data_start, size_t data_len, uint8_t seek_to, uint8_t *element_tag, size_t *element_len, uint8_t **element_data)</argsstring>
        <name>cryptx_asn1_decode</name>
        <param>
          <type>void *</type>
          <declname>data_start</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>data_len</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>seek_to</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>element_tag</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>element_len</declname>
        </param>
        <param>
          <type>uint8_t **</type>
          <declname>element_data</declname>
        </param>
        <briefdescription>
<para>Decodes the ASN.1 data at the given address. </para>
        </briefdescription>
        <detaileddescription>
<para>Seeks to an element from the front of the data. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data_start</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a block of ASN.1-encoded data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of ASN.1-encoded block. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>seek_to</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of ASN.1 elements to skip before returning one. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Masked tag value of the returned element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the returned element. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the data of the returned element. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>asn1_error_t</bold> indicating the status of the operation. </para>
</simplesect>
<simplesect kind="note"><para><bold>ASN1_END_OF_FILE</bold> will be returned if <bold>seek_to</bold> is invalid. </para>
</simplesect>
<simplesect kind="note"><para>NULL may be passed for <bold>element_tag</bold>, <bold>element_len</bold>, and/or <bold>element_data</bold> if you do not need to return that particular bit of information. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="569" column="14" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="569" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a3e216a54646a3f7d04c37102905ef850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cryptx_base64_encode</definition>
        <argsstring>(void *dest, const void *src, size_t len)</argsstring>
        <name>cryptx_base64_encode</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Converts an octet-encoded byte stream into a sextet-encoded byte stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to output sextet-encoded data stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to input octet-encoded data stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of octet-encoded data stream. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><bold>dest</bold> should be at least <bold>len</bold> * 4 / 3 bytes large. </para>
</simplesect>
<simplesect kind="return"><para>Length of output sextet. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="593" column="8" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="593" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a28db41653bf7ba5ef8bfcef425343722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cryptx_base64_decode</definition>
        <argsstring>(void *dest, const void *src, size_t len)</argsstring>
        <name>cryptx_base64_decode</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Converts a sextet-encoded byte stream into a octet-encoded byte stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to output octet-encoded data stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to input sextet-encoded data stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of sextet-encoded data stream. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><bold>dest</bold> should be at least <bold>len</bold> * 3 / 4 bytes large. </para>
</simplesect>
<simplesect kind="return"><para>Length of output octet. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="603" column="8" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="603" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1aa26dcd5f7c0f1f679c91268bc5b69455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hazmat_aes_ecb_encrypt</definition>
        <argsstring>(const void *block_in, void *block_out, struct cryptx_aes_ctx *ks)</argsstring>
        <name>cryptx_hazmat_aes_ecb_encrypt</name>
        <param>
          <type>const void *</type>
          <declname>block_in</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>block_out</declname>
        </param>
        <param>
          <type>struct cryptx_aes_ctx *</type>
          <declname>ks</declname>
        </param>
        <briefdescription>
<para>AES-ECB mode single block encryption. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to block of data to encrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write block of encrypted data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ks</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to AES key schedule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>ECB mode is insecure. Use this function as a constructor for other cipher modes, not standalone. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="615" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="615" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a705b398f84e2020d762a0ce03c90bd90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hazmat_aes_ecb_decrypt</definition>
        <argsstring>(const void *block_in, void *block_out, struct cryptx_aes_ctx *ks)</argsstring>
        <name>cryptx_hazmat_aes_ecb_decrypt</name>
        <param>
          <type>const void *</type>
          <declname>block_in</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>block_out</declname>
        </param>
        <param>
          <type>struct cryptx_aes_ctx *</type>
          <declname>ks</declname>
        </param>
        <briefdescription>
<para>AES-ECB mode single block decryption. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to block of data to decrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write block of decrypted data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ks</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to AES key schedule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>ECB mode is insecure. Use this function as a constructor for other cipher modes, not standalone. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="626" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="626" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a686d9781ff0de6cf06424df197ce6e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_hazmat_rsa_oaep_encode</definition>
        <argsstring>(const void *plaintext, size_t len, void *encoded, size_t modulus_len, const uint8_t *auth, uint8_t hash_alg)</argsstring>
        <name>cryptx_hazmat_rsa_oaep_encode</name>
        <param>
          <type>const void *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>encoded</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>modulus_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>auth</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Optimal Asymmetric Encryption Padding v2.2 Encoder. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to block of data to encode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of plaintext to encode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encoded</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write encoded output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>modulus_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of modulus to encode for (ex: length of RSA public modulus). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auth</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional string to include in the encoding (NULL to omit). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>Algorithm ID of the hash to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on successful encoding, False on error. </para>
</simplesect>
<simplesect kind="note"><para>An error returned from the encoder usually is related to the size of plaintext. Maximum plaintext length for encoding is the length of the modulus minus twice the length of the selected hash digest minus two more padding bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="643" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="643" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ab367fc9a33e00bee5e9a9f8df5f2a697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_hazmat_rsa_oaep_decode</definition>
        <argsstring>(const void *encoded, size_t len, void *plaintext, const uint8_t *auth, uint8_t hash_alg)</argsstring>
        <name>cryptx_hazmat_rsa_oaep_decode</name>
        <param>
          <type>const void *</type>
          <declname>encoded</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>auth</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Optimal Asymmetric Encryption Padding v2.2 Decoder. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encoded</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to block of data to decode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of plaintext to encode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write decoded output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auth</parametername>
</parameternamelist>
<parameterdescription>
<para>String included in the encoding (NULL to omit). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>Algorithm ID of the hash to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on successful decoding, False on error. </para>
</simplesect>
<simplesect kind="note"><para>An error returned from the decoder usually means the input did not appear to be valid OAEP-encoded data. OAEP 2.2-encoded data starts with the byte <emphasis>0x00</emphasis>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="661" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="661" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a70bc16d6ac300e87e3fc9c9847254bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hazmat_powmod</definition>
        <argsstring>(uint8_t size, uint8_t *restrict base, uint24_t exp, const uint8_t *restrict mod)</argsstring>
        <name>cryptx_hazmat_powmod</name>
        <param>
          <type>uint8_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint8_t *restrict</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint24_t</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>const uint8_t *restrict</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
<para>Modular Exponentation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the modulus, in bytes. <emphasis>0</emphasis> is actually 256. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the base. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exp</parametername>
</parameternamelist>
<parameterdescription>
<para>Exponent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to modulus. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is timing-safe if run from normal speed memory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="675" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="675" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a71ea61142ac4e58af9d8b8c9d2d17685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref></type>
        <definition>struct cryptx_ecc_point cryptx_hazmat_ecc_point_add</definition>
        <argsstring>(cryptx_ecc_point *p, cryptx_ecc_point *q)</argsstring>
        <name>cryptx_hazmat_ecc_point_add</name>
        <param>
          <type><ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Elliptic Curve Point Addition over SECT233k1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to first point to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to second point to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Outputs in <bold>p</bold>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="675" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="675" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ae4b37d491cbd4d5a16e0fb84d87b9270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hazmat_ecc_point_double</definition>
        <argsstring>(cryptx_ecc_point *p)</argsstring>
        <name>cryptx_hazmat_ecc_point_double</name>
        <param>
          <type><ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Elliptic Curve Point Doubling over SECT233k1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to point to double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Outputs in <bold>p</bold>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="699" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="699" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1adf9bad66ca13288b71d9306d9c0a55e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hazmat_ecc_point_mul_scalar</definition>
        <argsstring>(cryptx_ecc_point *p, const uint8_t *scalar, size_t scalar_bit_width)</argsstring>
        <name>cryptx_hazmat_ecc_point_mul_scalar</name>
        <param>
          <type><ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>scalar</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>scalar_bit_width</declname>
        </param>
        <briefdescription>
<para>Elliptic Curve Scalar Multiplication over SECT233k1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to point to multiply. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scalar_bit_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Length, in bits, of the scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Outputs in <bold>p</bold>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="708" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="708" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Industry-Standard Cryptography for the TI-84+ CE. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Anthony <emphasis>ACagliano</emphasis> Cagliano </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>cryptx_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structcryptx__priv__hash__sha256__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__priv__hash__sha256__state" kindref="compound">cryptx_priv_hash_sha256_state</ref><sp/>{</highlight></codeline>
<codeline lineno="19" refid="structcryptx__priv__hash__sha256__state_1ace8bc5d62baf6635d34d334d676f70dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hash__sha256__state_1ace8bc5d62baf6635d34d334d676f70dc" kindref="member">data</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20" refid="structcryptx__priv__hash__sha256__state_1a39895682d65bc3717534cf819f1c3a5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hash__sha256__state_1a39895682d65bc3717534cf819f1c3a5e" kindref="member">datalen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21" refid="structcryptx__priv__hash__sha256__state_1aface79df571a3e926b521fe08fcc38cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hash__sha256__state_1aface79df571a3e926b521fe08fcc38cd" kindref="member">bitlen</ref>[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22" refid="structcryptx__priv__hash__sha256__state_1ac1ec56cb26c817b455f30a06002ea0ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structcryptx__priv__hash__sha256__state_1ac1ec56cb26c817b455f30a06002ea0ef" kindref="member">state</ref>[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="unioncryptx__hash__private__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__priv__hash__sha256__state" kindref="compound">cryptx_priv_hash_sha256_state</ref><sp/>sha256;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}<sp/><ref refid="unioncryptx__hash__private__h" kindref="compound">cryptx_hash_private_h</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structcryptx__priv__hmac__sha256__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__priv__hmac__sha256__state" kindref="compound">cryptx_priv_hmac_sha256_state</ref><sp/>{</highlight></codeline>
<codeline lineno="36" refid="structcryptx__priv__hmac__sha256__state_1a76528b6828a8be3bf9aec6c60f52d9ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hmac__sha256__state_1a76528b6828a8be3bf9aec6c60f52d9ed" kindref="member">ipad</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="structcryptx__priv__hmac__sha256__state_1a2500321d12090b024ffa47c84d1fd4a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hmac__sha256__state_1a2500321d12090b024ffa47c84d1fd4a7" kindref="member">opad</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="structcryptx__priv__hmac__sha256__state_1a211f5efbddeaf4f31dc6ce2183aab29a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hmac__sha256__state_1a211f5efbddeaf4f31dc6ce2183aab29a" kindref="member">data</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="structcryptx__priv__hmac__sha256__state_1a08a4247ddd5ec7698e39d0179e281255" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hmac__sha256__state_1a08a4247ddd5ec7698e39d0179e281255" kindref="member">datalen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="structcryptx__priv__hmac__sha256__state_1a97047e014a3dcdd45fe2170667b39693" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hmac__sha256__state_1a97047e014a3dcdd45fe2170667b39693" kindref="member">bitlen</ref>[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="structcryptx__priv__hmac__sha256__state_1a15e182b571ba9a3f833aeb6cdc046859" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structcryptx__priv__hmac__sha256__state_1a15e182b571ba9a3f833aeb6cdc046859" kindref="member">state</ref>[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="unioncryptx__hmac__private__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__priv__hmac__sha256__state" kindref="compound">cryptx_priv_hmac_sha256_state</ref><sp/>sha256;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/><ref refid="unioncryptx__hmac__private__h" kindref="compound">cryptx_hmac_private_h</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structcryptx__aes__cbc__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__cbc__state" kindref="compound">cryptx_aes_cbc_state</ref><sp/>{<sp/>uint8_t<sp/>padding_mode;<sp/>};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="structcryptx__aes__ctr__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__ctr__state" kindref="compound">cryptx_aes_ctr_state</ref><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>counter_pos_start;<sp/>uint8_t<sp/>counter_len;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>last_block_stop;<sp/>uint8_t<sp/>last_block[16];<sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="structcryptx__aes__gcm__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__gcm__state" kindref="compound">cryptx_aes_gcm_state</ref><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>last_block_stop;<sp/>uint8_t<sp/>last_block[16];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ghash_key[16];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>aad_cache[16];<sp/>uint8_t<sp/>auth_tag[16];<sp/>uint8_t<sp/>auth_j0[16];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>aad_cache_len;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aad_len;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ct_len;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>gcm_op;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="unioncryptx__aes__private__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78" refid="unioncryptx__aes__private__h_1ad7b64d4d23bbe6483c6a8f80e1fceff1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__gcm__state" kindref="compound">cryptx_aes_gcm_state</ref><sp/>gcm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="unioncryptx__aes__private__h_1ab8d218d6589b9b07a4a306237e5eb157" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__cbc__state" kindref="compound">cryptx_aes_cbc_state</ref><sp/>ctr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80" refid="unioncryptx__aes__private__h_1ae1fc34b70eb382df03714488d599dfab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__ctr__state" kindref="compound">cryptx_aes_ctr_state</ref><sp/>cbc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/><ref refid="unioncryptx__aes__private__h" kindref="compound">cryptx_aes_private_h</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_hash_ctx<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(*init)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*update)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*digest)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>digest_len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unioncryptx__hash__private__h" kindref="compound">cryptx_hash_private_h</ref><sp/>metadata;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93b" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93b" kindref="member">cryptx_hash_algorithms</ref><sp/>{</highlight></codeline>
<codeline lineno="94" refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93bac7716785728694693ec29eccd5ffa0e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93bac7716785728694693ec29eccd5ffa0e1" kindref="member">SHA256</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93ba27028cc8b5d6f0a1cb3030c180019abc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93ba27028cc8b5d6f0a1cb3030c180019abc" kindref="member">SHA1</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="cryptx_8h_1a70b79d7bbba52b64700123ab77ab5a28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a70b79d7bbba52b64700123ab77ab5a28" kindref="member">cryptx_hash_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_hash_ctx*<sp/>context,<sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="cryptx_8h_1a0df23ee0aff04b31db05f5175bfe63a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a0df23ee0aff04b31db05f5175bfe63a2" kindref="member">cryptx_hash_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_hash_ctx*<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="cryptx_8h_1a1444bb4124409dbae8088ffbc9830ee3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a1444bb4124409dbae8088ffbc9830ee3" kindref="member">cryptx_hash_digest</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_hash_ctx*<sp/>context,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>digest);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="cryptx_8h_1a661281f90257c5e21dbb53654ba505e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a661281f90257c5e21dbb53654ba505e7" kindref="member">cryptx_hash_mgf1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datalen,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>outbuf,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outlen,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"></codeline>
<codeline lineno="139"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_hmac_ctx<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(*init)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*update)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*digest)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>digest_len;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unioncryptx__hmac__private__h" kindref="compound">cryptx_hmac_private_h</ref><sp/>metadata;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="cryptx_8h_1a21c854c0bcb6f7497516847e080c27c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a21c854c0bcb6f7497516847e080c27c3" kindref="member">cryptx_hmac_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_hmac_ctx*<sp/>context,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="cryptx_8h_1a1ab7dcd49b5df0f9e697a5e14939d186" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a1ab7dcd49b5df0f9e697a5e14939d186" kindref="member">cryptx_hmac_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_hmac_ctx*<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="182" refid="cryptx_8h_1a710f6c433fa3e6d07c602a0fca5952d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a710f6c433fa3e6d07c602a0fca5952d7" kindref="member">cryptx_hmac_digest</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_hmac_ctx*<sp/>context,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>digest);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="cryptx_8h_1a428a5da208ae3b55b73f4e05242148e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a428a5da208ae3b55b73f4e05242148e8" kindref="member">cryptx_hmac_pbkdf2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>password,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>passlen,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>salt,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>saltlen,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>key,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rounds,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="215" refid="cryptx_8h_1a2537f98ad431d23589334bf33889ebb0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a2537f98ad431d23589334bf33889ebb0" kindref="member">cryptx_bytes_tostring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hexstr);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cryptx_bytes_fromstring(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hexstr);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="cryptx_8h_1a71cc951ac0995a56ea485075235fb3f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a71cc951ac0995a56ea485075235fb3f3" kindref="member">cryptx_bytes_rcopy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="cryptx_8h_1afd0c8d1f7d77d3bd2739561996594ff4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1afd0c8d1f7d77d3bd2739561996594ff4" kindref="member">cryptx_bytes_reverse</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="cryptx_8h_1ae27b2f138550c6d08a539809f4bc27a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1ae27b2f138550c6d08a539809f4bc27a1" kindref="member">cryptx_bytes_compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="cryptx_8h_1a61b09a810e766ef1d2ff00c85ece63f2" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cryptx_8h_1a61b09a810e766ef1d2ff00c85ece63f2" kindref="member">cryptx_csrand_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="cryptx_8h_1a8c550bae2fddbf8a04655325ba2c9e8f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a8c550bae2fddbf8a04655325ba2c9e8f" kindref="member">cryptx_csrand_fill</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_aes_ctx<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>uint24_t<sp/>keysize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>round_keys[60];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>iv[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ciphermode;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>op_assoc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unioncryptx__aes__private__h" kindref="compound">cryptx_aes_private_h</ref><sp/>metadata;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal">};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735" kindref="member">cryptx_aes_cipher_modes</ref><sp/>{</highlight></codeline>
<codeline lineno="273" refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735ad21a3698b98b7368b14ec3d48314a132" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735ad21a3698b98b7368b14ec3d48314a132" kindref="member">AES_MODE_CBC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="274" refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735a5ecd63cd0bd97d46f273461b6550cb8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735a5ecd63cd0bd97d46f273461b6550cb8e" kindref="member">AES_MODE_CTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735aa41ebb36bc19b64d64ff6b7fc0d5e5df" kindref="member">AES_MODE_GCM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276" refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735aa41ebb36bc19b64d64ff6b7fc0d5e5df" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433" kindref="member">cryptx_aes_padding_schemes</ref><sp/>{</highlight></codeline>
<codeline lineno="279" refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a673ae2fee0bfe0a962717b3f673b9b7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a673ae2fee0bfe0a962717b3f673b9b7c" kindref="member">PAD_PKCS7</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a322c11c9058ef67073a3ff9bdcb9f759" kindref="member">PAD_DEFAULT</ref><sp/>=<sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a673ae2fee0bfe0a962717b3f673b9b7c" kindref="member">PAD_PKCS7</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a7566d9371110a1a24db62b145c901ad8" kindref="member">PAD_ISO2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284" refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a7566d9371110a1a24db62b145c901ad8" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_128_KEYLEN<sp/><sp/><sp/>16<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_192_KEYLEN<sp/><sp/><sp/>24<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_256_KEYLEN<sp/><sp/><sp/>32<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_BLOCK_SIZE<sp/><sp/><sp/>16<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_IV_SIZE<sp/><sp/>CRYPTX_AES_BLOCK_SIZE<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_AUTHTAG_SIZE<sp/>CRYPTX_AES_BLOCK_SIZE<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="cryptx_8h_1af0f7e8aa23de8ecc99b2420efefa4edc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_CBC_FLAGS(padding_mode)<sp/>\</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((padding_mode)&lt;&lt;2)<sp/>|<sp/>AES_MODE_CBC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="cryptx_8h_1a0ed8d02473b9a003653db30e1d856614" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_CTR_FLAGS(nonce_len,<sp/>counter_len)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="300"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((0x0f<sp/>&amp;<sp/>(counter_len))&lt;&lt;8)<sp/>|<sp/>((0x0f<sp/>&amp;<sp/>(nonce_len))&lt;&lt;4)<sp/>|<sp/>AES_MODE_CTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="cryptx_8h_1ac0de9d43e9ef5718060b164bf71e3ae0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_GCM_FLAGS<sp/><sp/><sp/><sp/>AES_MODE_GCM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="cryptx_8h_1adf4062c77f37927bc0178872056602ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_aes_get_ciphertext_len(len)<sp/>\</highlight></codeline>
<codeline lineno="307"><highlight class="preprocessor">((((len)%CRYPTX_AES_BLOCK_SIZE)==0)<sp/>?<sp/>(len)<sp/>+<sp/>CRYPTX_AES_BLOCK_SIZE<sp/>:<sp/>(((len)&gt;&gt;4)<sp/>+<sp/>1)&lt;&lt;4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="311" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaacf07636102724d2a7913911b0cf74b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaacf07636102724d2a7913911b0cf74b2" kindref="member">AES_OK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda6d39b280aea9d8d62d126eef05d271db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda6d39b280aea9d8d62d126eef05d271db" kindref="member">AES_INVALID_ARG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaae5e9a591aeda666b0e425d9a05834e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaae5e9a591aeda666b0e425d9a05834e3" kindref="member">AES_INVALID_MSG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdad2b49ffeabf14aaf47db3d1bad18f84e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdad2b49ffeabf14aaf47db3d1bad18f84e" kindref="member">AES_INVALID_CIPHERMODE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="315" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda47bbd593fc3bdb7758a790bab86b41d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda47bbd593fc3bdb7758a790bab86b41d9" kindref="member">AES_INVALID_PADDINGMODE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="316" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaba928751c773ffa0287e47e1f86eae8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaba928751c773ffa0287e47e1f86eae8b" kindref="member">AES_INVALID_CIPHERTEXT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda95a9dcbf64347e3c6f2c50d05e8937f5" kindref="member">AES_INVALID_OPERATION</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda95a9dcbf64347e3c6f2c50d05e8937f5" refkind="member"><highlight class="normal">}<sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref>;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="cryptx_8h_1aee9ba52b80ab5bddd81193cdf26389e2" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/><ref refid="cryptx_8h_1aee9ba52b80ab5bddd81193cdf26389e2" kindref="member">cryptx_aes_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_aes_ctx*<sp/>context,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>iv,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ivlen,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint24_t<sp/>flags);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="cryptx_8h_1a571d4b9eb0fe3d069b10492025e47fe0" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/><ref refid="cryptx_8h_1a571d4b9eb0fe3d069b10492025e47fe0" kindref="member">cryptx_aes_encrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_aes_ctx*<sp/>context,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>plaintext,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ciphertext);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="cryptx_8h_1ab5cf162f80d83c86c9dbba9aa866b289" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/><ref refid="cryptx_8h_1ab5cf162f80d83c86c9dbba9aa866b289" kindref="member">cryptx_aes_decrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_aes_ctx*<sp/>context,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ciphertext,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>plaintext);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="cryptx_8h_1a3d55233d4178e3f6c6b96272fda56ae0" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/><ref refid="cryptx_8h_1a3d55233d4178e3f6c6b96272fda56ae0" kindref="member">cryptx_aes_update_aad</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_aes_ctx*<sp/>context,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>aad,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aad_len);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="393" refid="cryptx_8h_1a7aaae6b33efe97c579d24729680eda79" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/><ref refid="cryptx_8h_1a7aaae6b33efe97c579d24729680eda79" kindref="member">cryptx_aes_digest</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_aes_ctx*<sp/>context,<sp/>uint8_t<sp/>*digest);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="cryptx_8h_1a69437bd1ca1d4fe40dc50d91da7c1be4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a69437bd1ca1d4fe40dc50d91da7c1be4" kindref="member">cryptx_aes_verify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_aes_ctx*<sp/>context,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>aad,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aad_len,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ciphertext,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ciphertext_len,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*tag);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"></codeline>
<codeline lineno="416" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="417" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a2cafdb683e1870a33bcb821420626cae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a2cafdb683e1870a33bcb821420626cae" kindref="member">RSA_OK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="418" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294aab9ab38286c4180a1aa9f6e8df42e5db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294aab9ab38286c4180a1aa9f6e8df42e5db" kindref="member">RSA_INVALID_ARG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="419" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294aedeb18a96b96e292369abed5b2f0a271" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294aedeb18a96b96e292369abed5b2f0a271" kindref="member">RSA_INVALID_MSG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="420" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a843ec210de66176ef63e2d2b8ebdeb65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a843ec210de66176ef63e2d2b8ebdeb65" kindref="member">RSA_INVALID_MODULUS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a43eadc89540121b902e02afabc7a7eb9" kindref="member">RSA_ENCODING_ERROR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="422" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a43eadc89540121b902e02afabc7a7eb9" refkind="member"><highlight class="normal">}<sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294" kindref="member">rsa_error_t</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="425" refid="cryptx_8h_1a265dcd336b31e2b95870d864c85cee2a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_RSA_MODULUS_MAX<sp/><sp/><sp/><sp/><sp/><sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="cryptx_8h_1aa4f5ae1eb3d9636c20dec64503a4896b" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294" kindref="member">rsa_error_t</ref><sp/><ref refid="cryptx_8h_1aa4f5ae1eb3d9636c20dec64503a4896b" kindref="member">cryptx_rsa_encrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>msglen,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pubkey,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ciphertext,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>oaep_hash_alg);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="cryptx_8h_1a26e233163ef752cc08d3f3499007369a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_EC_PRIVKEY_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="455" refid="cryptx_8h_1a9fb63bb764b8654fc273535be6c4e3a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_EC_PUBKEY_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(CRYPTX_ECDH_PRIVKEY_LEN&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_EC_SECRET_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CRYPTX_ECDH_PUBKEY_LEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_ec_error<sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>EC_OK,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>EC_INVALID_ARG,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>EC_PRIVKEY_INVALID,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>EC_RPUBKEY_INVALID</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}<sp/><ref refid="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" kindref="member">ec_error_t</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="cryptx_8h_1ace17d744e36edae96bea85ccfa7c18f9" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" kindref="member">ec_error_t</ref><sp/><ref refid="cryptx_8h_1ace17d744e36edae96bea85ccfa7c18f9" kindref="member">cryptx_ec_keygen</ref>(uint8_t<sp/>*privkey,<sp/>uint8_t<sp/>*pubkey);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="cryptx_8h_1a4057940333f4f8f56b8ccf1d24db21ea" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" kindref="member">ec_error_t</ref><sp/><ref refid="cryptx_8h_1a4057940333f4f8f56b8ccf1d24db21ea" kindref="member">cryptx_ec_secret</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*privkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*rpubkey,<sp/>uint8_t<sp/>*secret);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5" kindref="member">CRYPTX_ASN1_TAGS</ref><sp/>{</highlight></codeline>
<codeline lineno="498" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a0b4ee1817dddda0e7bb95f8c9c5262cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a0b4ee1817dddda0e7bb95f8c9c5262cc" kindref="member">ASN1_RESVD</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="499" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5afcacc079274ffffd6f8f30005a478309" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5afcacc079274ffffd6f8f30005a478309" kindref="member">ASN1_BOOLEAN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="500" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ace678073d12a09bd35a9d14ee843f4f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ace678073d12a09bd35a9d14ee843f4f6" kindref="member">ASN1_INTEGER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="501" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a80cce3c21b5cf2a46abcf2d6559f16a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a80cce3c21b5cf2a46abcf2d6559f16a2" kindref="member">ASN1_BITSTRING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ad652362316e1126ce1f372ee9f42fdf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ad652362316e1126ce1f372ee9f42fdf7" kindref="member">ASN1_OCTETSTRING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="503" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ab9aa4736a7a0bec12fda19d770381ade" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ab9aa4736a7a0bec12fda19d770381ade" kindref="member">ASN1_NULL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="504" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ab4e5697bbcfa96959f724b475deb438d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ab4e5697bbcfa96959f724b475deb438d" kindref="member">ASN1_OBJECTID</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="505" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5afa75f14a7646b0ee90575da2299c9303" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5afa75f14a7646b0ee90575da2299c9303" kindref="member">ASN1_OBJECTDESC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a2169eaf366165cd4dfe1aca66659935c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a2169eaf366165cd4dfe1aca66659935c" kindref="member">ASN1_INSTANCE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="507" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ade199cbdfbec356bae58bc468797580a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ade199cbdfbec356bae58bc468797580a" kindref="member">ASN1_REAL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_ENUMERATED,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_EMBEDDEDPDV,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTF8STRING,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_RELATIVEOID,</highlight></codeline>
<codeline lineno="512" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a472ab1907cf28338eff639b8b5ab667c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a472ab1907cf28338eff639b8b5ab667c" kindref="member">ASN1_SEQUENCE</ref><sp/>=<sp/>16,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5aefff306acd391300face0a8080ad415e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5aefff306acd391300face0a8080ad415e" kindref="member">ASN1_SET</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_NUMERICSTRING,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_PRINTABLESTRING,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_TELETEXSTRING,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_VIDEOTEXSTRING,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_IA5STRING,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTCTIME,</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_GENERALIZEDTIME,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_GRAPHICSTRING,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_VISIBLESTRING,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_GENERALSTRING,</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UNIVERSALSTRING,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_CHARSTRING,</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_BMPSTRING</highlight></codeline>
<codeline lineno="527"><highlight class="normal">};</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900" kindref="member">CRYPTX_ASN1_CLASSES</ref><sp/>{</highlight></codeline>
<codeline lineno="530" refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a36845401ba730128d3078d9cd0730fe8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a36845401ba730128d3078d9cd0730fe8" kindref="member">ASN1_UNIVERSAL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="531" refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a1c873115fb577a391d1af735307abc45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a1c873115fb577a391d1af735307abc45" kindref="member">ASN1_APPLICATION</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="532" refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a0e4e8c83e4929fe69855de5c8c7a34d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a0e4e8c83e4929fe69855de5c8c7a34d3" kindref="member">ASN1_CONTEXTSPEC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900ac51c7440728bfe2d94426d0ca4f3d895" kindref="member">ASN1_PRIVATE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="534" refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900ac51c7440728bfe2d94426d0ca4f3d895" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536" refid="cryptx_8h_1af2211fe420abff08488c8f04de017080" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1af2211fe420abff08488c8f04de017080" kindref="member">CRYPTX_ASN1_FORMS</ref><sp/>{</highlight></codeline>
<codeline lineno="537" refid="cryptx_8h_1af2211fe420abff08488c8f04de017080a916350d579d4895b1f843289b60b4572" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1af2211fe420abff08488c8f04de017080a916350d579d4895b1f843289b60b4572" kindref="member">ASN1_PRIMITIVE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="538" refid="cryptx_8h_1af2211fe420abff08488c8f04de017080ad03b2b41a6f3417a981a78ca887332e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1af2211fe420abff08488c8f04de017080ad03b2b41a6f3417a981a78ca887332e6" kindref="member">ASN1_CONSTRUCTED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal">};</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="542" refid="cryptx_8h_1a13585a6206e220218a8f379327b04433" refkind="member"><highlight class="preprocessor">#define<sp/>cryptx_asn1_get_tag(tag)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((tag)<sp/>&amp;<sp/>0b111111)</highlight></codeline>
<codeline lineno="544" refid="cryptx_8h_1a5af192045bb48e03f788962f259a2a7e" refkind="member"><highlight class="preprocessor">#define<sp/>cryptx_asn1_get_class(tag)<sp/><sp/><sp/><sp/><sp/><sp/>(((tag)&gt;&gt;6)<sp/>&amp;<sp/>0b11)</highlight></codeline>
<codeline lineno="546" refid="cryptx_8h_1a3c8b39f5fb3ad1d8d138b9791b18f01e" refkind="member"><highlight class="preprocessor">#define<sp/>cryptx_asn1_get_form(tag)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((tag)&gt;&gt;5)<sp/>&amp;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="550" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33ae8a5623b62dab851b0dc76048afc0b4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33ae8a5623b62dab851b0dc76048afc0b4a" kindref="member">ASN1_OK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="551" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a434628c70562f3ab468d94e8eae7784d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a434628c70562f3ab468d94e8eae7784d" kindref="member">ASN1_END_OF_FILE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="552" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33aa13d20ad819d43693d26c77b80fb4952" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33aa13d20ad819d43693d26c77b80fb4952" kindref="member">ASN1_INVALID_ARG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="553" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a0101185f2109f1ba75ea2c4833664474" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a0101185f2109f1ba75ea2c4833664474" kindref="member">ASN1_LEN_OVERFLOW</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="554"><highlight class="normal">}<sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" kindref="member">asn1_error_t</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="cryptx_8h_1afbb965d7c7819b8685a1062d5e21e02c" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" kindref="member">asn1_error_t</ref><sp/><ref refid="cryptx_8h_1afbb965d7c7819b8685a1062d5e21e02c" kindref="member">cryptx_asn1_decode</ref>(</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data_start,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_len,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>seek_to,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*element_tag,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*element_len,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>**element_data);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"></codeline>
<codeline lineno="581" refid="cryptx_8h_1a9db7be56d66674980b5540cab9405cc7" refkind="member"><highlight class="preprocessor">#define<sp/>cryptx_base64_get_encoded_len(len)<sp/><sp/><sp/><sp/><sp/><sp/>((len)<sp/>*<sp/>4<sp/>/<sp/>3)</highlight></codeline>
<codeline lineno="583" refid="cryptx_8h_1a5629130707448f8475166398fb18a486" refkind="member"><highlight class="preprocessor">#define<sp/>cryptx_base64_get_decoded_len(len)<sp/><sp/><sp/><sp/><sp/><sp/>((len)<sp/>*<sp/>3<sp/>/<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="593" refid="cryptx_8h_1a3e216a54646a3f7d04c37102905ef850" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a3e216a54646a3f7d04c37102905ef850" kindref="member">cryptx_base64_encode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="cryptx_8h_1a28db41653bf7ba5ef8bfcef425343722" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a28db41653bf7ba5ef8bfcef425343722" kindref="member">cryptx_base64_decode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CRYPTX_ENABLE_HAZMAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="615" refid="cryptx_8h_1aa26dcd5f7c0f1f679c91268bc5b69455" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1aa26dcd5f7c0f1f679c91268bc5b69455" kindref="member">cryptx_hazmat_aes_ecb_encrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block_in,</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block_out,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_aes_ctx*<sp/>ks);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="cryptx_8h_1a705b398f84e2020d762a0ce03c90bd90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a705b398f84e2020d762a0ce03c90bd90" kindref="member">cryptx_hazmat_aes_ecb_decrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block_in,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block_out,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_aes_ctx*<sp/>ks);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="cryptx_8h_1a686d9781ff0de6cf06424df197ce6e1e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a686d9781ff0de6cf06424df197ce6e1e" kindref="member">cryptx_hazmat_rsa_oaep_encode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plaintext,</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*encoded,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>modulus_len,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*auth,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="661" refid="cryptx_8h_1ab367fc9a33e00bee5e9a9f8df5f2a697" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1ab367fc9a33e00bee5e9a9f8df5f2a697" kindref="member">cryptx_hazmat_rsa_oaep_decode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*encoded,</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plaintext,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*auth,</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="675" refid="cryptx_8h_1a71ea61142ac4e58af9d8b8c9d2d17685" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a70bc16d6ac300e87e3fc9c9847254bd1" kindref="member">cryptx_hazmat_powmod</ref>(uint8_t<sp/>size,<sp/>uint8_t<sp/>*restrict<sp/>base,<sp/>uint24_t<sp/>exp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*restrict<sp/>mod);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="678" refid="cryptx_8h_1ad0e904358b21cab26ad541d594184a89" refkind="member"><highlight class="preprocessor">#define<sp/>CRYPTX_GF2_INTLEN<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="structcryptx__ecc__point" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>x[<ref refid="cryptx_8h_1ad0e904358b21cab26ad541d594184a89" kindref="member">CRYPTX_GF2_INTLEN</ref>];</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>y[<ref refid="cryptx_8h_1ad0e904358b21cab26ad541d594184a89" kindref="member">CRYPTX_GF2_INTLEN</ref>];</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a71ea61142ac4e58af9d8b8c9d2d17685" kindref="member">cryptx_hazmat_ecc_point_add</ref>(<ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref>*<sp/>p,<sp/><ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref>*<sp/>q);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="cryptx_8h_1ae4b37d491cbd4d5a16e0fb84d87b9270" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1ae4b37d491cbd4d5a16e0fb84d87b9270" kindref="member">cryptx_hazmat_ecc_point_double</ref>(<ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref>*<sp/>p);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="cryptx_8h_1adf9bad66ca13288b71d9306d9c0a55e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1adf9bad66ca13288b71d9306d9c0a55e0" kindref="member">cryptx_hazmat_ecc_point_mul_scalar</ref>(<ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>scalar,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>scalar_bit_width);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h"/>
  </compounddef>
</doxygen>
