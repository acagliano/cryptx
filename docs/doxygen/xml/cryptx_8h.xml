<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="cryptx_8h" kind="file" language="C++">
    <compoundname>cryptx.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h</label>
        <link refid="cryptx_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structcryptx__priv__hash__sha256__state" prot="public">cryptx_priv_hash_sha256_state</innerclass>
    <innerclass refid="unioncryptx__hash__private__h" prot="public">cryptx_hash_private_h</innerclass>
    <innerclass refid="structcryptx__priv__hmac__sha256__state" prot="public">cryptx_priv_hmac_sha256_state</innerclass>
    <innerclass refid="unioncryptx__hmac__private__h" prot="public">cryptx_hmac_private_h</innerclass>
    <innerclass refid="structcryptx__aes__cbc__state" prot="public">cryptx_aes_cbc_state</innerclass>
    <innerclass refid="structcryptx__aes__ctr__state" prot="public">cryptx_aes_ctr_state</innerclass>
    <innerclass refid="structcryptx__aes__gcm__state" prot="public">cryptx_aes_gcm_state</innerclass>
    <innerclass refid="unioncryptx__aes__private__h" prot="public">cryptx_aes_private_h</innerclass>
    <innerclass refid="structcryptx__hash__ctx" prot="public">cryptx_hash_ctx</innerclass>
    <innerclass refid="structcryptx__hmac__ctx" prot="public">cryptx_hmac_ctx</innerclass>
    <innerclass refid="structcryptx__aes__ctx" prot="public">cryptx_aes_ctx</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="cryptx_8h_1a5aa7b168ba3ea05c827e9ff212a8c2cb" prot="public" static="no">
        <name>CRYPTX_AES128_KEYLEN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="283" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a48abe0abed8433c330f10a97329a23ba" prot="public" static="no">
        <name>CRYPTX_AES192_KEYLEN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="284" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a1935030be806b7761f4aef3db98953a6" prot="public" static="no">
        <name>CRYPTX_AES256_KEYLEN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="285" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="285" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a2d638028c68c84297614a1dc7ff318d9" prot="public" static="no">
        <name>CRYPTX_AES_BLOCK_SIZE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="287" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1ac47330f91ba12f7856c0c198bdbf2753" prot="public" static="no">
        <name>CRYPTX_AES_IV_SIZE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="288" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a89521b82b1be81ea3e5f70c3593bf5a9" prot="public" static="no">
        <name>CRYPTX_AES_AUTHTAG_SIZE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="289" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1af0f7e8aa23de8ecc99b2420efefa4edc" prot="public" static="no">
        <name>CRYPTX_AES_CBC_FLAGS</name>
        <param><defname>padding_mode</defname></param>
        <briefdescription>
<para>Defines a macro to enable AES CBC cipher mode and pass relevant configuration options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="292" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a0ed8d02473b9a003653db30e1d856614" prot="public" static="no">
        <name>CRYPTX_AES_CTR_FLAGS</name>
        <param><defname>nonce_len</defname></param>
        <param><defname>counter_len</defname></param>
        <briefdescription>
<para>Defines a macro to enable AES CTR cipher mode and pass relevant configuration options. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="296" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1ac0de9d43e9ef5718060b164bf71e3ae0" prot="public" static="no">
        <name>CRYPTX_AES_GCM_FLAGS</name>
        <briefdescription>
<para>Defines a macro to enable AES GCM cipher mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="300" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1adf4062c77f37927bc0178872056602ff" prot="public" static="no">
        <name>cryptx_aes_get_ciphertext_len</name>
        <param><defname>len</defname></param>
        <briefdescription>
<para>Defines a macro to return the byte length of an AES ciphertext given a plaintext length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="303" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a265dcd336b31e2b95870d864c85cee2a" prot="public" static="no">
        <name>CRYPTX_RSA_MODULUS_MAX</name>
        <briefdescription>
<para>Defines the maximum byte length of an RSA public modulus supported by this library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="442" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="442" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1ac753c393f9a2f85ebd589ed14823ccd7" prot="public" static="no">
        <name>CRYPTX_ECDH_PRIVKEY_LEN</name>
        <briefdescription>
<para>An alternate form of secret (for AES) negotiation. </para>
        </briefdescription>
        <detaileddescription>
<para>Defines the byte length of an ECDH private key supported by this library. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="474" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1ad75ef28855bfeec84da3e324494c3082" prot="public" static="no">
        <name>CRYPTX_ECDH_PUBKEY_LEN</name>
        <briefdescription>
<para>Defines the byte length of an ECDH public key supported by this library. </para>
        </briefdescription>
        <detaileddescription>
<para><linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="477" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1aa95fc648d6050a2e47e08f24176167c6" prot="public" static="no">
        <name>CRYPTX_ECDH_SECRET_LEN</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="478" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a1bd4fb56d54940c2534049e2a5a73351" prot="public" static="no">
        <name>cryptx_ecdh_generate_privkey</name>
        <param><defname>privkey</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="480" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a13585a6206e220218a8f379327b04433" prot="public" static="no">
        <name>cryptx_asn1_get_tag</name>
        <param><defname>tag</defname></param>
        <briefdescription>
<para>Returns the unmasked tag. See <bold>CRYPTX_ASN1_TAGS</bold> above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="569" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="569" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a5af192045bb48e03f788962f259a2a7e" prot="public" static="no">
        <name>cryptx_asn1_get_class</name>
        <param><defname>tag</defname></param>
        <briefdescription>
<para>Returns the 2-bit tag class flag. See <bold>CRYPTX_ASN1_CLASSES</bold> above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="571" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="571" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a3c8b39f5fb3ad1d8d138b9791b18f01e" prot="public" static="no">
        <name>cryptx_asn1_get_form</name>
        <param><defname>tag</defname></param>
        <briefdescription>
<para>Returns the 1-bit tag form (1 = constructed, 0 = primitive). See <bold>CRYPTX_ASN1_FORMS</bold> above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="573" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a9db7be56d66674980b5540cab9405cc7" prot="public" static="no">
        <name>cryptx_base64_get_encoded_len</name>
        <param><defname>len</defname></param>
        <briefdescription>
<para>Used to encode to or decode from Base64, another encoding format common to cryptography libraries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="612" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="612" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a5629130707448f8475166398fb18a486" prot="public" static="no">
        <name>cryptx_base64_get_decoded_len</name>
        <param><defname>len</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="613" column="9" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="613" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93b" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_hash_algorithms</name>
        <enumvalue id="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93bac7716785728694693ec29eccd5ffa0e1" prot="public">
          <name>SHA256</name>
          <briefdescription>
<para>algorithm type identifier for SHA-256 </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="68" column="1" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a59334db45c5435de6ded4492dec34735" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_aes_cipher_modes</name>
        <enumvalue id="cryptx_8h_1a59334db45c5435de6ded4492dec34735ad21a3698b98b7368b14ec3d48314a132" prot="public">
          <name>AES_MODE_CBC</name>
          <briefdescription>
<para>selects Cyclic Block Chain (CBC) mode </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a59334db45c5435de6ded4492dec34735a5ecd63cd0bd97d46f273461b6550cb8e" prot="public">
          <name>AES_MODE_CTR</name>
          <briefdescription>
<para>selects Counter (CTR) mode </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a59334db45c5435de6ded4492dec34735aa41ebb36bc19b64d64ff6b7fc0d5e5df" prot="public">
          <name>AES_MODE_GCM</name>
          <briefdescription>
<para>selects Galois Counter (GCM) mode </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="269" column="1" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="269" bodyend="273"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_aes_padding_schemes</name>
        <enumvalue id="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a673ae2fee0bfe0a962717b3f673b9b7c" prot="public">
          <name>PAD_PKCS7</name>
          <briefdescription>
<para>PKCS#7 padding | DEFAULT. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a322c11c9058ef67073a3ff9bdcb9f759" prot="public">
          <name>PAD_DEFAULT</name>
          <initializer>= PAD_PKCS7</initializer>
          <briefdescription>
<para>selects the scheme marked DEFAULT. </para>
          </briefdescription>
          <detaileddescription>
<para>Using this is recommended in case a change to the standards would set a stronger padding scheme as default </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a7566d9371110a1a24db62b145c901ad8" prot="public">
          <name>PAD_ISO2</name>
          <briefdescription>
<para>ISO-9797 M2 padding. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="275" column="1" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="275" bodyend="281"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" prot="public" static="no" strong="no">
        <type></type>
        <name>aes_error_t</name>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaacf07636102724d2a7913911b0cf74b2" prot="public">
          <name>AES_OK</name>
          <briefdescription>
<para>AES operation completed successfully. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda6d39b280aea9d8d62d126eef05d271db" prot="public">
          <name>AES_INVALID_ARG</name>
          <briefdescription>
<para>AES operation failed, bad argument. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaae5e9a591aeda666b0e425d9a05834e3" prot="public">
          <name>AES_INVALID_MSG</name>
          <briefdescription>
<para>AES operation failed, message invalid. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdad2b49ffeabf14aaf47db3d1bad18f84e" prot="public">
          <name>AES_INVALID_CIPHERMODE</name>
          <briefdescription>
<para>AES operation failed, cipher mode undefined. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda47bbd593fc3bdb7758a790bab86b41d9" prot="public">
          <name>AES_INVALID_PADDINGMODE</name>
          <briefdescription>
<para>AES operation failed, padding mode undefined. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaba928751c773ffa0287e47e1f86eae8b" prot="public">
          <name>AES_INVALID_CIPHERTEXT</name>
          <briefdescription>
<para>AES operation failed, ciphertext error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda95a9dcbf64347e3c6f2c50d05e8937f5" prot="public">
          <name>AES_INVALID_OPERATION</name>
          <briefdescription>
<para>AES operation failed, used encrypt context for decrypt or vice versa. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="306" column="1" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="306" bodyend="314"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a0486449f609d0e485bad091a671d9294" prot="public" static="no" strong="no">
        <type></type>
        <name>rsa_error_t</name>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294a2cafdb683e1870a33bcb821420626cae" prot="public">
          <name>RSA_OK</name>
          <briefdescription>
<para>RSA encryption completed successfully. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294aab9ab38286c4180a1aa9f6e8df42e5db" prot="public">
          <name>RSA_INVALID_ARG</name>
          <briefdescription>
<para>RSA encryption failed, bad argument. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294aedeb18a96b96e292369abed5b2f0a271" prot="public">
          <name>RSA_INVALID_MSG</name>
          <briefdescription>
<para>RSA encryption failed, bad msg or msg too long. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294a843ec210de66176ef63e2d2b8ebdeb65" prot="public">
          <name>RSA_INVALID_MODULUS</name>
          <briefdescription>
<para>RSA encryption failed, modulus invalid. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294a43eadc89540121b902e02afabc7a7eb9" prot="public">
          <name>RSA_ENCODING_ERROR</name>
          <briefdescription>
<para>RSA encryption failed, OAEP encoding error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Use when you need to encrypt a secret (eg: for AES) in order to create a secure session. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="433" column="1" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="433" bodyend="439"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a0aa0891afd8596f5fc0624b07a939944" prot="public" static="no" strong="no">
        <type></type>
        <name>ecdh_error_t</name>
        <enumvalue id="cryptx_8h_1a0aa0891afd8596f5fc0624b07a939944a1fc3b5fa5eb8adaa46a9257ee782acbb" prot="public">
          <name>ECDH_OK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0aa0891afd8596f5fc0624b07a939944a635480018ca2a67bd5994a91091abc5a" prot="public">
          <name>ECDH_INVALID_ARG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0aa0891afd8596f5fc0624b07a939944a761fc8a34f1342ebe085e06300fb907f" prot="public">
          <name>ECDH_PRIVKEY_INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0aa0891afd8596f5fc0624b07a939944a6bb841ab7c886611c50ce3e4a8bcdf08" prot="public">
          <name>ECDH_RPUBKEY_INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="483" column="1" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="483" bodyend="488"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5" prot="public" static="no" strong="no">
        <type></type>
        <name>CRYPTX_ASN1_TAGS</name>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a0b4ee1817dddda0e7bb95f8c9c5262cc" prot="public">
          <name>ASN1_RESVD</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>RESERVED. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5afcacc079274ffffd6f8f30005a478309" prot="public">
          <name>ASN1_BOOLEAN</name>
          <briefdescription>
<para>defines a BOOLEAN object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ace678073d12a09bd35a9d14ee843f4f6" prot="public">
          <name>ASN1_INTEGER</name>
          <briefdescription>
<para>defines an INTEGER object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a80cce3c21b5cf2a46abcf2d6559f16a2" prot="public">
          <name>ASN1_BITSTRING</name>
          <briefdescription>
<para>defines a BIT STRING object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ad652362316e1126ce1f372ee9f42fdf7" prot="public">
          <name>ASN1_OCTETSTRING</name>
          <briefdescription>
<para>defines an OCTET STRING object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ab9aa4736a7a0bec12fda19d770381ade" prot="public">
          <name>ASN1_NULL</name>
          <briefdescription>
<para>defines a NULL object (0 size, no data) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ab4e5697bbcfa96959f724b475deb438d" prot="public">
          <name>ASN1_OBJECTID</name>
          <briefdescription>
<para>defines an OBJECT IDENTIFIER </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5afa75f14a7646b0ee90575da2299c9303" prot="public">
          <name>ASN1_OBJECTDESC</name>
          <briefdescription>
<para>defines an OBJECT DESCRIPTION </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a2169eaf366165cd4dfe1aca66659935c" prot="public">
          <name>ASN1_INSTANCE</name>
          <briefdescription>
<para>defines an INSTANCE </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ade199cbdfbec356bae58bc468797580a" prot="public">
          <name>ASN1_REAL</name>
          <briefdescription>
<para>defines a REAL object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a5bb35c428781f325e40ea36ab317bc42" prot="public">
          <name>ASN1_ENUMERATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a7c167c8e276b910d748db386f78383af" prot="public">
          <name>ASN1_EMBEDDEDPDV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a64811d53c5db0139556f07ec23185f08" prot="public">
          <name>ASN1_UTF8STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a5234ef0948bc0487ae9474e21ce0df3f" prot="public">
          <name>ASN1_RELATIVEOID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a472ab1907cf28338eff639b8b5ab667c" prot="public">
          <name>ASN1_SEQUENCE</name>
          <initializer>= 16</initializer>
          <briefdescription>
<para>defines a SEQUENCE </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5aefff306acd391300face0a8080ad415e" prot="public">
          <name>ASN1_SET</name>
          <briefdescription>
<para>defines a SET </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5af1b09bf2be320630525edcbbffe0424e" prot="public">
          <name>ASN1_NUMERICSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a336e057dd223cc6f701304f0461a2ddf" prot="public">
          <name>ASN1_PRINTABLESTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a9bf70ad3dd4bf8c417d2df3a0567b7a4" prot="public">
          <name>ASN1_TELETEXSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a74f77040fbd3853dd952425441fe5768" prot="public">
          <name>ASN1_VIDEOTEXSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ae00956dc4ea6da4a6f5b052e35ad4b75" prot="public">
          <name>ASN1_IA5STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a11abbe84d583fe76922cb89fe1220567" prot="public">
          <name>ASN1_UTCTIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a6b3d1c40aa79f25a72a9165a4cd691d4" prot="public">
          <name>ASN1_GENERALIZEDTIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a7866c130d61ad33372bb0cacdcc50e71" prot="public">
          <name>ASN1_GRAPHICSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5acb9714785116f8951d2cdfb45bcfaf6c" prot="public">
          <name>ASN1_VISIBLESTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5aaecdda4440eb96bc770733f950eab4dd" prot="public">
          <name>ASN1_GENERALSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a1e1d7c1dcf076d12776c085e5f534d58" prot="public">
          <name>ASN1_UNIVERSALSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5af46947fb8b9acd84edae67bb08dabb28" prot="public">
          <name>ASN1_CHARSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5af68d6904a260c69ee964445f81bfbbc4" prot="public">
          <name>ASN1_BMPSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Used to decode ASN.1-encoded data structures, such as those output by most encryption libraries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="524" column="1" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="524" bodyend="554"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900" prot="public" static="no" strong="no">
        <type></type>
        <name>CRYPTX_ASN1_CLASSES</name>
        <enumvalue id="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a36845401ba730128d3078d9cd0730fe8" prot="public">
          <name>ASN1_UNIVERSAL</name>
          <briefdescription>
<para>tags defined in the ASN.1 standard. </para>
          </briefdescription>
          <detaileddescription>
<para>Most use cases on calc will be this. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a1c873115fb577a391d1af735307abc45" prot="public">
          <name>ASN1_APPLICATION</name>
          <briefdescription>
<para>tags unique to a particular application. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a0e4e8c83e4929fe69855de5c8c7a34d3" prot="public">
          <name>ASN1_CONTEXTSPEC</name>
          <briefdescription>
<para>tags that need to be identified within a particular, well-definded context. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900ac51c7440728bfe2d94426d0ca4f3d895" prot="public">
          <name>ASN1_PRIVATE</name>
          <briefdescription>
<para>reserved for use by a specific entity for their applications. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="556" column="1" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="556" bodyend="561"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1af2211fe420abff08488c8f04de017080" prot="public" static="no" strong="no">
        <type></type>
        <name>CRYPTX_ASN1_FORMS</name>
        <enumvalue id="cryptx_8h_1af2211fe420abff08488c8f04de017080a916350d579d4895b1f843289b60b4572" prot="public">
          <name>ASN1_PRIMITIVE</name>
          <briefdescription>
<para>this element should contain no nested elements. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1af2211fe420abff08488c8f04de017080ad03b2b41a6f3417a981a78ca887332e6" prot="public">
          <name>ASN1_CONSTRUCTED</name>
          <briefdescription>
<para>this element contains nested elements. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="563" column="1" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="563" bodyend="566"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" prot="public" static="no" strong="no">
        <type></type>
        <name>asn1_error_t</name>
        <enumvalue id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33ae8a5623b62dab851b0dc76048afc0b4a" prot="public">
          <name>ASN1_OK</name>
          <briefdescription>
<para>No errors occured. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a434628c70562f3ab468d94e8eae7784d" prot="public">
          <name>ASN1_END_OF_FILE</name>
          <briefdescription>
<para>End of ASN.1 data stream reached. </para>
          </briefdescription>
          <detaileddescription>
<para>Not an error. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33aa13d20ad819d43693d26c77b80fb4952" prot="public">
          <name>ASN1_INVALID_ARG</name>
          <briefdescription>
<para>One or more arguments invalid. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a0101185f2109f1ba75ea2c4833664474" prot="public">
          <name>ASN1_LEN_OVERFLOW</name>
          <briefdescription>
<para>Length of an element overflowed arch size_t allowance. </para>
          </briefdescription>
          <detaileddescription>
<para>Remainder of data stream unparsable. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="575" column="1" bodyfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="575" bodyend="580"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cryptx_8h_1a70b79d7bbba52b64700123ab77ab5a28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_hash_init</definition>
        <argsstring>(struct cryptx_hash_ctx *context, uint8_t hash_alg)</argsstring>
        <name>cryptx_hash_init</name>
        <param>
          <type>struct cryptx_hash_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Initializes a hash-state context for a specific hash algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a hash-state context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if hash initialization succeeded, <bold>false</bold> if failed. </para>
</simplesect>
<simplesect kind="note"><para>Destroys 516 bytes of fastMem starting at 0xE30800. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="79" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="79" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a0df23ee0aff04b31db05f5175bfe63a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hash_update</definition>
        <argsstring>(struct cryptx_hash_ctx *context, const void *data, size_t len)</argsstring>
        <name>cryptx_hash_update</name>
        <param>
          <type>struct cryptx_hash_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Updates the hash-state for a given block of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a hash-state context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a block of data to hash.. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <bold>data</bold> to hash. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Destroys 516 bytes of fastMem starting at 0xE30800. </para>
</simplesect>
<simplesect kind="warning"><para>Calling this on a context that has not been initialized may have unpredictable results. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="90" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="90" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a1444bb4124409dbae8088ffbc9830ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hash_digest</definition>
        <argsstring>(struct cryptx_hash_ctx *context, void *digest)</argsstring>
        <name>cryptx_hash_digest</name>
        <param>
          <type>struct cryptx_hash_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>digest</declname>
        </param>
        <briefdescription>
<para>Output digest for current hash-state (preserves state). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a hash-state context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>digest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to write digest to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><bold>digest</bold> must be at large enough to hold the hash digest. You can retrieve the necessary size by accessing the <bold>digest_len</bold> member of an initialized <bold>cryptx_hash_ctx</bold>. </para>
</simplesect>
<simplesect kind="note"><para>Destroys 516 bytes of fastMem starting at 0xE30800. </para>
</simplesect>
<simplesect kind="warning"><para>Calling this on a context that has not been initialized may have unpredictable results. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="103" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="103" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a661281f90257c5e21dbb53654ba505e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hash_mgf1</definition>
        <argsstring>(const void *data, size_t datalen, void *outbuf, size_t outlen, uint8_t hash_alg)</argsstring>
        <name>cryptx_hash_mgf1</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>datalen</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>outbuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>outlen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Computes a digest of arbitrary length for a given block of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data to hash. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>datalen</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of <bold>data</bold> to hash. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write digest to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write to <bold>outbuf</bold>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><bold>outbuf</bold> must be at least <bold>outlen</bold> bytes large. </para>
</simplesect>
<simplesect kind="note"><para>Destroys 516 bytes of fastMem starting at 0xE30800. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="115" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="115" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a21c854c0bcb6f7497516847e080c27c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_hmac_init</definition>
        <argsstring>(struct cryptx_hmac_ctx *context, const void *key, size_t keylen, uint8_t hash_alg)</argsstring>
        <name>cryptx_hmac_init</name>
        <param>
          <type>struct cryptx_hmac_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Initializes an HMAC-state context for a specific hash algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an HMAC-state context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a key used to initialize the <ref refid="structHMAC" kindref="compound">HMAC</ref> state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the <bold>key</bold>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if initialized succeeded, <bold>false</bold> if failed. </para>
</simplesect>
<simplesect kind="note"><para>Destroys 516 bytes of fastMem starting at 0xE30800. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="142" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="142" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a1ab7dcd49b5df0f9e697a5e14939d186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hmac_update</definition>
        <argsstring>(struct cryptx_hmac_ctx *context, const void *data, size_t len)</argsstring>
        <name>cryptx_hmac_update</name>
        <param>
          <type>struct cryptx_hmac_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Updates the hash-state for a given block of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an HMAC-state context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a block of data to hash.. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <bold>data</bold> to hash. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Destroys 516 bytes of fastMem starting at 0xE30800. </para>
</simplesect>
<simplesect kind="warning"><para>Calling this on a context that has not been initialized may have unpredictable results. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="155" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="155" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a264d2d740ebf417b4b4e794565483ec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hmac_digest</definition>
        <argsstring>(struct cryptx_hmac_ctx *context, void *output)</argsstring>
        <name>cryptx_hmac_digest</name>
        <param>
          <type>struct cryptx_hmac_ctx *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="168" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="168" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a428a5da208ae3b55b73f4e05242148e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hmac_pbkdf2</definition>
        <argsstring>(const char *password, size_t passlen, const void *salt, size_t saltlen, uint8_t *key, size_t keylen, size_t rounds, uint8_t hash_alg)</argsstring>
        <name>cryptx_hmac_pbkdf2</name>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>passlen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>saltlen</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rounds</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Use when you want to generate a secure key (eg: for encryption) from a password. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="192" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="192" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1aa25931fdaf401a4fddf0023e272278f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_digest_tostring</definition>
        <argsstring>(const void *digest, size_t len, uint8_t *hexstr)</argsstring>
        <name>cryptx_digest_tostring</name>
        <param>
          <type>const void *</type>
          <declname>digest</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>hexstr</declname>
        </param>
        <briefdescription>
<para>Use when you need to compare or render digests. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="214" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="214" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a36bdf1683237ed686ce175fde670ccff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_digest_compare</definition>
        <argsstring>(const void *digest1, const void *digest2, size_t len)</argsstring>
        <name>cryptx_digest_compare</name>
        <param>
          <type>const void *</type>
          <declname>digest1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>digest2</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="224" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="224" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1aa4599a28ff439f7a21dbb0ce5772fa78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_csrand_init</definition>
        <argsstring>(void)</argsstring>
        <name>cryptx_csrand_init</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Use when you need to generate cryptographically-secure randomness (eg: keys, salts). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="237" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="237" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a61b09a810e766ef1d2ff00c85ece63f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cryptx_csrand_get</definition>
        <argsstring>(void)</argsstring>
        <name>cryptx_csrand_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="243" column="10" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="243" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a8c550bae2fddbf8a04655325ba2c9e8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_csrand_fill</definition>
        <argsstring>(void *buffer, size_t size)</argsstring>
        <name>cryptx_csrand_fill</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="252" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="252" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1aee9ba52b80ab5bddd81193cdf26389e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_init</definition>
        <argsstring>(struct cryptx_aes_ctx *context, const void *key, size_t keylen, const void *iv, size_t ivlen, uint24_t flags)</argsstring>
        <name>cryptx_aes_init</name>
        <param>
          <type>struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>iv</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ivlen</declname>
        </param>
        <param>
          <type>uint24_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="334" column="13" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="334" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a571d4b9eb0fe3d069b10492025e47fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_encrypt</definition>
        <argsstring>(const struct cryptx_aes_ctx *context, const void *plaintext, size_t len, void *ciphertext)</argsstring>
        <name>cryptx_aes_encrypt</name>
        <param>
          <type>const struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ciphertext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="357" column="13" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="357" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ab5cf162f80d83c86c9dbba9aa866b289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_decrypt</definition>
        <argsstring>(const struct cryptx_aes_ctx *context, const void *ciphertext, size_t len, void *plaintext)</argsstring>
        <name>cryptx_aes_decrypt</name>
        <param>
          <type>const struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>ciphertext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>plaintext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="374" column="13" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="374" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a3d55233d4178e3f6c6b96272fda56ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_update_aad</definition>
        <argsstring>(struct cryptx_aes_ctx *context, const void *aad, size_t aad_len)</argsstring>
        <name>cryptx_aes_update_aad</name>
        <param>
          <type>struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>aad_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="392" column="13" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="392" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a7aaae6b33efe97c579d24729680eda79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_digest</definition>
        <argsstring>(struct cryptx_aes_ctx *context, uint8_t *digest)</argsstring>
        <name>cryptx_aes_digest</name>
        <param>
          <type>struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>digest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="406" column="13" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="406" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a69437bd1ca1d4fe40dc50d91da7c1be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_aes_verify</definition>
        <argsstring>(const struct cryptx_aes_ctx *context, const void *aad, size_t aad_len, const void *ciphertext, size_t ciphertext_len, uint8_t *tag)</argsstring>
        <name>cryptx_aes_verify</name>
        <param>
          <type>const struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>aad_len</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>ciphertext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ciphertext_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="422" column="6" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="422" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1aa4f5ae1eb3d9636c20dec64503a4896b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294" kindref="member">rsa_error_t</ref></type>
        <definition>rsa_error_t cryptx_rsa_encrypt</definition>
        <argsstring>(const void *msg, size_t msglen, const void *pubkey, size_t keylen, void *ciphertext, uint8_t oaep_hash_alg)</argsstring>
        <name>cryptx_rsa_encrypt</name>
        <param>
          <type>const void *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>msglen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ciphertext</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>oaep_hash_alg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="459" column="13" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="459" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a495fa773d3d4c650a289c7da236a8026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ecdh_error_t</type>
        <definition>ecdh_error_t cryptx_ecdh_publickey</definition>
        <argsstring>(const uint8_t *privkey, uint8_t *pubkey)</argsstring>
        <name>cryptx_ecdh_publickey</name>
        <param>
          <type>const uint8_t *</type>
          <declname>privkey</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="501" column="14" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="501" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ad975a0ac10f02d9509081ae57f790f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ecdh_error_t</type>
        <definition>ecdh_error_t cryptx_ecdh_secret</definition>
        <argsstring>(const uint8_t *privkey, const uint8_t *rpubkey, uint8_t *secret)</argsstring>
        <name>cryptx_ecdh_secret</name>
        <param>
          <type>const uint8_t *</type>
          <declname>privkey</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>rpubkey</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>secret</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="517" column="14" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="517" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1afbb965d7c7819b8685a1062d5e21e02c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" kindref="member">asn1_error_t</ref></type>
        <definition>asn1_error_t cryptx_asn1_decode</definition>
        <argsstring>(void *data_start, size_t data_len, uint8_t seek_to, uint8_t *element_tag, size_t *element_len, uint8_t **element_data)</argsstring>
        <name>cryptx_asn1_decode</name>
        <param>
          <type>void *</type>
          <declname>data_start</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>data_len</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>seek_to</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>element_tag</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>element_len</declname>
        </param>
        <param>
          <type>uint8_t **</type>
          <declname>element_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="598" column="14" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="598" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a3e216a54646a3f7d04c37102905ef850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cryptx_base64_encode</definition>
        <argsstring>(void *dest, const void *src, size_t len)</argsstring>
        <name>cryptx_base64_encode</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="623" column="8" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="623" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a28db41653bf7ba5ef8bfcef425343722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cryptx_base64_decode</definition>
        <argsstring>(void *dest, const void *src, size_t len)</argsstring>
        <name>cryptx_base64_decode</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" line="633" column="8" declfile="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h" declline="633" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Industry-Standard Cryptography for the TI-84+ CE. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Anthony <emphasis>ACagliano</emphasis> Cagliano </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>cryptx_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="structcryptx__priv__hash__sha256__state" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__priv__hash__sha256__state" kindref="compound">cryptx_priv_hash_sha256_state</ref><sp/>{</highlight></codeline>
<codeline lineno="16" refid="structcryptx__priv__hash__sha256__state_1ace8bc5d62baf6635d34d334d676f70dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hash__sha256__state_1ace8bc5d62baf6635d34d334d676f70dc" kindref="member">data</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17" refid="structcryptx__priv__hash__sha256__state_1a39895682d65bc3717534cf819f1c3a5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hash__sha256__state_1a39895682d65bc3717534cf819f1c3a5e" kindref="member">datalen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18" refid="structcryptx__priv__hash__sha256__state_1aface79df571a3e926b521fe08fcc38cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hash__sha256__state_1aface79df571a3e926b521fe08fcc38cd" kindref="member">bitlen</ref>[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19" refid="structcryptx__priv__hash__sha256__state_1ac1ec56cb26c817b455f30a06002ea0ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structcryptx__priv__hash__sha256__state_1ac1ec56cb26c817b455f30a06002ea0ef" kindref="member">state</ref>[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal">};</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__priv__hash__sha256__state" kindref="compound">cryptx_priv_hash_sha256_state</ref><sp/>sha256;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}<sp/>cryptx_hash_private_h;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_priv_hmac_sha256_state<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ipad[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>opad[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>data[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>datalen;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bitlen[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>state[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_priv_hmac_sha256_state<sp/>sha256;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/>cryptx_hmac_private_h;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_aes_cbc_state<sp/>{<sp/>uint8_t<sp/>padding_mode;<sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_aes_ctr_state<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>counter_pos_start;<sp/>uint8_t<sp/>counter_len;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>last_block_stop;<sp/>uint8_t<sp/>last_block[16];<sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_aes_gcm_state<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>last_block_stop;<sp/>uint8_t<sp/>last_block[16];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ghash_key[16];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>aad_cache[16];<sp/>uint8_t<sp/>auth_tag[16];<sp/>uint8_t<sp/>auth_j0[16];</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>aad_cache_len;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aad_len;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ct_len;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>gcm_op;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_aes_gcm_state<sp/>gcm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_aes_cbc_state<sp/>ctr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_aes_ctr_state<sp/>cbc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/>cryptx_aes_private_h;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_hash_ctx<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(*init)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*update)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*digest)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>digest_len;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>cryptx_hash_private_h<sp/>metadata;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93b" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93b" kindref="member">cryptx_hash_algorithms</ref><sp/>{</highlight></codeline>
<codeline lineno="69" refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93bac7716785728694693ec29eccd5ffa0e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93bac7716785728694693ec29eccd5ffa0e1" kindref="member">SHA256</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="70"><highlight class="normal">};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="cryptx_8h_1a70b79d7bbba52b64700123ab77ab5a28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a70b79d7bbba52b64700123ab77ab5a28" kindref="member">cryptx_hash_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_hash_ctx*<sp/>context,<sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="cryptx_8h_1a0df23ee0aff04b31db05f5175bfe63a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a0df23ee0aff04b31db05f5175bfe63a2" kindref="member">cryptx_hash_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_hash_ctx*<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="cryptx_8h_1a1444bb4124409dbae8088ffbc9830ee3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a1444bb4124409dbae8088ffbc9830ee3" kindref="member">cryptx_hash_digest</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_hash_ctx*<sp/>context,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>digest);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="cryptx_8h_1a661281f90257c5e21dbb53654ba505e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a661281f90257c5e21dbb53654ba505e7" kindref="member">cryptx_hash_mgf1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datalen,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>outbuf,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outlen,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"></codeline>
<codeline lineno="125"><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_hmac_ctx<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(*init)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*update)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*digest)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>digest_len;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>cryptx_hmac_private_h<sp/>metadata;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="cryptx_8h_1a21c854c0bcb6f7497516847e080c27c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a21c854c0bcb6f7497516847e080c27c3" kindref="member">cryptx_hmac_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_hmac_ctx*<sp/>context,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="cryptx_8h_1a1ab7dcd49b5df0f9e697a5e14939d186" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a1ab7dcd49b5df0f9e697a5e14939d186" kindref="member">cryptx_hmac_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_hmac_ctx*<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/><sp/>@brief<sp/>Output<sp/>digest<sp/>for<sp/>current<sp/>HMAC-state<sp/>(preserves<sp/>state).</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/><sp/>@param[in]<sp/>context<sp/><sp/>Pointer<sp/>to<sp/>an<sp/>HMAC-state<sp/>context.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/><sp/>@param[out]<sp/>digest<sp/><sp/>Pointer<sp/>to<sp/>a<sp/>buffer<sp/>to<sp/>write<sp/>digest<sp/>to.</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>@b<sp/>digest<sp/>must<sp/>be<sp/>at<sp/>large<sp/>enough<sp/>to<sp/>hold<sp/>the<sp/>hash<sp/>digest.</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>can<sp/>retrieve<sp/>the<sp/>necessary<sp/>size<sp/>by<sp/>accessing<sp/>the<sp/>@b<sp/>digest_len</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/><sp/>member<sp/>of<sp/>an<sp/>initialized<sp/>@b<sp/>cryptx_hmac_ctx.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>Uses<sp/>516<sp/>bytes<sp/>of<sp/>fastMem<sp/>starting<sp/>at<sp/>0xE30800.</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/><sp/>@warning<sp/>Calling<sp/>this<sp/>on<sp/>a<sp/>context<sp/>that<sp/>has<sp/>not<sp/>been<sp/>initialized<sp/>may<sp/>have</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/><sp/>unpredictable<sp/>results.</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cryptx_hmac_digest(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cryptx_hmac_ctx*<sp/>context,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>PASSWORD-BASED<sp/>KEY<sp/>DERIVATION<sp/>FUNCTION<sp/>2<sp/>(PBKDF2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight></codeline>
<codeline lineno="176"><highlight class="comment"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Derives<sp/>a<sp/>key<sp/>from<sp/>a<sp/>password,<sp/>salt,<sp/>and<sp/>round<sp/>count.</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>password<sp/><sp/>Pointer<sp/>to<sp/>a<sp/>string<sp/>containing<sp/>the<sp/>password.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>passlen<sp/><sp/><sp/>Byte<sp/>length<sp/>of<sp/>the<sp/>password.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>salt<sp/><sp/><sp/>A<sp/>psuedo-random<sp/>string<sp/>to<sp/>use<sp/>in<sp/>each<sp/>round<sp/>of<sp/>key<sp/>derivation.</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>saltlen<sp/><sp/><sp/>Byte<sp/>length<sp/>of<sp/>the<sp/>salt.</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>rounds<sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>times<sp/>to<sp/>iterate<sp/>the<sp/>HMAC<sp/>function<sp/>per<sp/>block<sp/>of<sp/>@b<sp/>keylen.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>key<sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>buffer<sp/>to<sp/>write<sp/>key<sp/>to.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>keylen<sp/><sp/><sp/><sp/>Length<sp/>of<sp/>@b<sp/>key<sp/>to<sp/>generate.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>hash_alg<sp/><sp/>The<sp/>numeric<sp/>ID<sp/>of<sp/>the<sp/>hashing<sp/>algorithm<sp/>to<sp/>use.<sp/>See<sp/>@b<sp/>cryptx_hash_algorithms.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>@note<sp/>NIST<sp/>recommends<sp/>a<sp/>salt<sp/>of<sp/>at<sp/>least<sp/>128<sp/>bits<sp/>(16<sp/>bytes).</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>@note<sp/>@b<sp/>rounds<sp/>is<sp/>used<sp/>to<sp/>increase<sp/>the<sp/>cost<sp/>(computational<sp/>time)<sp/>of<sp/>generating<sp/>a<sp/>key.<sp/>What<sp/>makes<sp/>password-</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/>hashing<sp/>algorithms<sp/>secure<sp/>is<sp/>the<sp/>time<sp/>needed<sp/>to<sp/>generate<sp/>a<sp/>rainbow<sp/>table<sp/>attack<sp/>against<sp/>it.<sp/>More<sp/>rounds<sp/>means</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>a<sp/>more<sp/>secure<sp/>key,<sp/>but<sp/>more<sp/>time<sp/>spent<sp/>generating<sp/>it.<sp/>Current<sp/>cryptography<sp/>standards<sp/>recommend<sp/>thousands<sp/>of</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>rounds<sp/>but<sp/>that<sp/>may<sp/>not<sp/>be<sp/>feasible<sp/>on<sp/>the<sp/>CE.</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="cryptx_8h_1a428a5da208ae3b55b73f4e05242148e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a428a5da208ae3b55b73f4e05242148e8" kindref="member">cryptx_hmac_pbkdf2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>password,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>passlen,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>salt,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>saltlen,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>key,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rounds,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>DIGEST<sp/>OPERATIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight></codeline>
<codeline lineno="207"><highlight class="comment"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Convert<sp/>a<sp/>digest<sp/>to<sp/>its<sp/>hexstring<sp/>representation.</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>digest<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>a<sp/>buffer<sp/>or<sp/>digest.</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Byte<sp/>length<sp/>of<sp/>@b<sp/>digest.</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>hexstr<sp/><sp/><sp/>Buffer<sp/>to<sp/>write<sp/>the<sp/>output<sp/>hex<sp/>string<sp/>to.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/>@note<sp/>@b<sp/>hexstr<sp/>must<sp/>be<sp/>at<sp/>least<sp/>twice<sp/>@b<sp/>len<sp/>+1<sp/>bytes<sp/>large.</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="cryptx_8h_1aa25931fdaf401a4fddf0023e272278f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1aa25931fdaf401a4fddf0023e272278f7" kindref="member">cryptx_digest_tostring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>digest,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/>uint8_t*<sp/>hexstr);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Compare<sp/>two<sp/>digests<sp/>or<sp/>buffers.</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>digest1<sp/><sp/><sp/>Pointer<sp/>to<sp/>first<sp/>buffer<sp/>to<sp/>compare.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>digest2<sp/><sp/><sp/>Pointer<sp/>to<sp/>second<sp/>buffer<sp/>to<sp/>compare.</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>bytes<sp/>to<sp/>compare.</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>@return<sp/>@b<sp/>true<sp/>if<sp/>the<sp/>buffers<sp/>are<sp/>equal,<sp/>@b<sp/>false<sp/>if<sp/>not<sp/>equal.</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>is<sp/>a<sp/>constant-time<sp/>implementation.</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cryptx_digest_compare(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>digest1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>digest2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>CRYPTOGRAPHICALLY-SECURE<sp/>RANDOM<sp/>NUMBER<sp/>GENERATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight></codeline>
<codeline lineno="232"><highlight class="comment"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Initializes<sp/>the<sp/>(HW)RNG.</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*<sp/>@returns<sp/>@b<sp/>true<sp/>on<sp/>success,<sp/>@b<sp/>false<sp/>on<sp/>failure.</highlight></codeline>
<codeline lineno="235"><highlight class="comment"><sp/>*<sp/>@note<sp/>If<sp/>you<sp/>forget<sp/>to<sp/>call<sp/>this<sp/>function,<sp/>utilizing<sp/>the<sp/>RNG&apos;s<sp/>other<sp/>functions<sp/>will<sp/>self-initialize<sp/>the<sp/>RNG.</highlight></codeline>
<codeline lineno="236"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="cryptx_8h_1aa4599a28ff439f7a21dbb0ce5772fa78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1aa4599a28ff439f7a21dbb0ce5772fa78" kindref="member">cryptx_csrand_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Returns<sp/>a<sp/>securely<sp/>psuedo-random<sp/>32-bit<sp/>integer</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/>@returns<sp/>A<sp/>securely<sp/>psuedo-random<sp/>32-bit<sp/>integer.</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal">uint32_t<sp/>cryptx_csrand_get(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Fills<sp/>a<sp/>buffer<sp/>with<sp/>securely<sp/>pseduo-random<sp/>bytes</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>buffer<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>a<sp/>buffer<sp/>to<sp/>fill<sp/>with<sp/>random<sp/>bytes.</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>size<sp/><sp/><sp/><sp/><sp/><sp/>Size<sp/>of<sp/>the<sp/>buffer<sp/>to<sp/>fill.</highlight></codeline>
<codeline lineno="249"><highlight class="comment"><sp/>*<sp/>@returns<sp/>@b<sp/>true<sp/>on<sp/>success,<sp/>@b<sp/>false<sp/>on<sp/>failure.</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/>@returns<sp/>@b<sp/>buffer<sp/>filled<sp/>to<sp/>size.</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cryptx_csrand_fill(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ADVANCED<sp/>ENCRYPTION<sp/>STANDARD<sp/>(AES)<sp/>ENCRYPTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight></codeline>
<codeline lineno="260" refid="structcryptx__aes__ctx" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="261" refid="structcryptx__aes__ctx_1aed50e8b9a653c1d20a0f324789ba8f84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint24_t<sp/><ref refid="structcryptx__aes__ctx_1aed50e8b9a653c1d20a0f324789ba8f84" kindref="member">keysize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262" refid="structcryptx__aes__ctx_1ab7564e0e5d2e1bd96b083f913eda1382" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structcryptx__aes__ctx_1ab7564e0e5d2e1bd96b083f913eda1382" kindref="member">round_keys</ref>[60];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263" refid="structcryptx__aes__ctx_1a3cc495f40d5a578c335fd03fe2772e4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__aes__ctx_1a3cc495f40d5a578c335fd03fe2772e4a" kindref="member">iv</ref>[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264" refid="structcryptx__aes__ctx_1a46d05a8ea39c183bd6f09d5fa95bfe25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__aes__ctx_1a46d05a8ea39c183bd6f09d5fa95bfe25" kindref="member">ciphermode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265" refid="structcryptx__aes__ctx_1af6a8c176ebacf1d1fc6a25b1ec2ec6d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__aes__ctx_1af6a8c176ebacf1d1fc6a25b1ec2ec6d8" kindref="member">op_assoc</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266" refid="structcryptx__aes__ctx_1a019c3bf1d587684ca720951dc0f390c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cryptx_aes_private_h<sp/><ref refid="structcryptx__aes__ctx_1a019c3bf1d587684ca720951dc0f390c3" kindref="member">metadata</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal">};</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735" kindref="member">cryptx_aes_cipher_modes</ref><sp/>{</highlight></codeline>
<codeline lineno="270" refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735ad21a3698b98b7368b14ec3d48314a132" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735ad21a3698b98b7368b14ec3d48314a132" kindref="member">AES_MODE_CBC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271" refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735a5ecd63cd0bd97d46f273461b6550cb8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735a5ecd63cd0bd97d46f273461b6550cb8e" kindref="member">AES_MODE_CTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735aa41ebb36bc19b64d64ff6b7fc0d5e5df" kindref="member">AES_MODE_GCM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273" refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735aa41ebb36bc19b64d64ff6b7fc0d5e5df" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433" kindref="member">cryptx_aes_padding_schemes</ref><sp/>{</highlight></codeline>
<codeline lineno="276" refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a673ae2fee0bfe0a962717b3f673b9b7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a673ae2fee0bfe0a962717b3f673b9b7c" kindref="member">PAD_PKCS7</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a322c11c9058ef67073a3ff9bdcb9f759" kindref="member">PAD_DEFAULT</ref><sp/>=<sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a673ae2fee0bfe0a962717b3f673b9b7c" kindref="member">PAD_PKCS7</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a7566d9371110a1a24db62b145c901ad8" kindref="member">PAD_ISO2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281" refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a7566d9371110a1a24db62b145c901ad8" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES128_KEYLEN<sp/><sp/><sp/><sp/>16<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES192_KEYLEN<sp/><sp/><sp/><sp/>24<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES256_KEYLEN<sp/><sp/><sp/><sp/>32<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_BLOCK_SIZE<sp/><sp/><sp/>16<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_IV_SIZE<sp/><sp/>CRYPTX_AES_BLOCK_SIZE<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_AUTHTAG_SIZE<sp/>CRYPTX_AES_BLOCK_SIZE<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="cryptx_8h_1af0f7e8aa23de8ecc99b2420efefa4edc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_CBC_FLAGS(padding_mode)<sp/>\</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((padding_mode)&lt;&lt;2)<sp/>|<sp/>AES_MODE_CBC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="cryptx_8h_1a0ed8d02473b9a003653db30e1d856614" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_CTR_FLAGS(nonce_len,<sp/>counter_len)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="297"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((0x0f<sp/>&amp;<sp/>(counter_len))&lt;&lt;8)<sp/>|<sp/>((0x0f<sp/>&amp;<sp/>(nonce_len))&lt;&lt;4)<sp/>|<sp/>AES_MODE_CTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="cryptx_8h_1ac0de9d43e9ef5718060b164bf71e3ae0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_AES_GCM_FLAGS<sp/><sp/><sp/><sp/>AES_MODE_GCM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="cryptx_8h_1adf4062c77f37927bc0178872056602ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_aes_get_ciphertext_len(len)<sp/>\</highlight></codeline>
<codeline lineno="304"><highlight class="preprocessor">((((len)%CRYPTX_AES_BLOCK_SIZE)==0)<sp/>?<sp/>(len)<sp/>+<sp/>CRYPTX_AES_BLOCK_SIZE<sp/>:<sp/>(((len)&gt;&gt;4)<sp/>+<sp/>1)&lt;&lt;4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="307" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaacf07636102724d2a7913911b0cf74b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaacf07636102724d2a7913911b0cf74b2" kindref="member">AES_OK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda6d39b280aea9d8d62d126eef05d271db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda6d39b280aea9d8d62d126eef05d271db" kindref="member">AES_INVALID_ARG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaae5e9a591aeda666b0e425d9a05834e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaae5e9a591aeda666b0e425d9a05834e3" kindref="member">AES_INVALID_MSG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdad2b49ffeabf14aaf47db3d1bad18f84e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdad2b49ffeabf14aaf47db3d1bad18f84e" kindref="member">AES_INVALID_CIPHERMODE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda47bbd593fc3bdb7758a790bab86b41d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda47bbd593fc3bdb7758a790bab86b41d9" kindref="member">AES_INVALID_PADDINGMODE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaba928751c773ffa0287e47e1f86eae8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaba928751c773ffa0287e47e1f86eae8b" kindref="member">AES_INVALID_CIPHERTEXT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda95a9dcbf64347e3c6f2c50d05e8937f5" kindref="member">AES_INVALID_OPERATION</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="314" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda95a9dcbf64347e3c6f2c50d05e8937f5" refkind="member"><highlight class="normal">}<sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Initializes<sp/>a<sp/>stateful<sp/>AES<sp/>cipher<sp/>context<sp/>to<sp/>be<sp/>used<sp/>for<sp/>encryption<sp/>or<sp/>decryption.</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>context<sp/><sp/><sp/>Pointer<sp/>to<sp/>an<sp/>AES<sp/>cipher<sp/>context<sp/>to<sp/>initialize.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>key<sp/><sp/><sp/>Pointer<sp/>to<sp/>an<sp/>128,<sp/>192,<sp/>or<sp/>256<sp/>bit<sp/>key<sp/>to<sp/>load<sp/>into<sp/>the<sp/>AES<sp/>context.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>keylen<sp/><sp/><sp/><sp/>The<sp/>size,<sp/>in<sp/>bytes,<sp/>of<sp/>the<sp/>@b<sp/>key<sp/>to<sp/>load.</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>iv<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/><sp/>Initialization<sp/>vector,<sp/>a<sp/>buffer<sp/>equal<sp/>to<sp/>the<sp/>block<sp/>size<sp/>filled<sp/>with<sp/>random<sp/>bytes.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ivlen<sp/>Length<sp/>of<sp/>the<sp/>initalization<sp/>vector.<sp/>Capped<sp/>at<sp/>16<sp/>bytes.<sp/>Certain<sp/>cipher<sp/>modes<sp/>have<sp/>different<sp/>recommendations.</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>flags<sp/>A<sp/>series<sp/>of<sp/>flags<sp/>to<sp/>configure<sp/>the<sp/>AES<sp/>context<sp/>with.</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Use<sp/>the<sp/>provided<sp/>@b<sp/>CRYPTX_AES_CTR_FLAGS,<sp/>@b<sp/>CRYPTX_AES_CBC_FLAGS,<sp/>or<sp/>@b<sp/>CRYPTX_AES_GCM_FLAGS<sp/>to<sp/>pass<sp/>flags.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*<sp/>@returns<sp/>An<sp/>@b<sp/>aes_error_t<sp/>indicating<sp/>the<sp/>status<sp/>of<sp/>the<sp/>AES<sp/>operation.</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/>@note<sp/>Contexts<sp/>are<sp/>not<sp/>bidirectional<sp/>due<sp/>to<sp/>being<sp/>stateful.<sp/>If<sp/>you<sp/>need<sp/>to<sp/>process<sp/>both<sp/>encryption<sp/>and<sp/>decryption,</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>initialize<sp/>seperate<sp/>contexts<sp/>for<sp/>encryption<sp/>and<sp/>decryption.<sp/>Both<sp/>contexts<sp/>will<sp/>use<sp/>the<sp/>same<sp/>key,<sp/>but<sp/>different<sp/>initialization<sp/>vectors.</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/>@warning<sp/>It<sp/>is<sp/>recommended<sp/>to<sp/>cycle<sp/>your<sp/>key<sp/>after<sp/>encrypting<sp/>2^64<sp/>blocks<sp/>of<sp/>data<sp/>with<sp/>the<sp/>same<sp/>key.</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>@warning<sp/>Do<sp/>not<sp/>manually<sp/>edit<sp/>the<sp/>@b<sp/>ctx.mode<sp/>field<sp/>of<sp/>the<sp/>context<sp/>structure.</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>This<sp/>will<sp/>break<sp/>the<sp/>cipher<sp/>configuration.<sp/>If<sp/>you<sp/>want<sp/>to<sp/>change<sp/>cipher<sp/>modes,<sp/>do<sp/>so<sp/>by<sp/>calling<sp/>@b<sp/>aes_init<sp/>again.</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>@warning<sp/>AES-CBC<sp/>and<sp/>CTR<sp/>modes<sp/>ensure<sp/>confidentiality<sp/>but<sp/>do<sp/>not<sp/>provide<sp/>message<sp/>integrity<sp/>verification.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>If<sp/>you<sp/>need<sp/>a<sp/>truly<sp/>secure<sp/>construction,<sp/>use<sp/>GCM<sp/>mode<sp/>or<sp/>append<sp/>a<sp/>keyed<sp/>hash<sp/>(HMAC)<sp/>to<sp/>the<sp/>encrypted<sp/>message..</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/>cryptx_aes_init(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>iv,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ivlen,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint24_t<sp/>flags);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Performs<sp/>a<sp/>stateful<sp/>AES<sp/>encryption<sp/>of<sp/>an<sp/>arbitrary<sp/>length<sp/>of<sp/>data.</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>context<sp/><sp/><sp/>Pointer<sp/>to<sp/>an<sp/>AES<sp/>cipher<sp/>context.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>plaintext<sp/>Pointer<sp/>to<sp/>data<sp/>to<sp/>encrypt.</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Length<sp/>of<sp/>data<sp/>at<sp/>@b<sp/>plaintext<sp/>to<sp/>encrypt.</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>ciphertext<sp/><sp/><sp/>Pointer<sp/>to<sp/>buffer<sp/>to<sp/>write<sp/>encrypted<sp/>data<sp/>to.</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>@returns<sp/>An<sp/>@b<sp/>aes_error_t<sp/>indicating<sp/>the<sp/>status<sp/>of<sp/>the<sp/>AES<sp/>operation.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*<sp/>@note<sp/>@b<sp/>ciphertext<sp/>should<sp/>large<sp/>enough<sp/>to<sp/>hold<sp/>the<sp/>encrypted<sp/>message.</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>CBC<sp/>mode,<sp/>this<sp/>is<sp/>the<sp/>smallest<sp/>multiple<sp/>of<sp/>the<sp/>blocksize<sp/>that<sp/>will<sp/>hold<sp/>the<sp/>plaintext.</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>the<sp/>@b<sp/>CRYPTX_AES_CIPHERTEXT_LEN<sp/>macro.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>For<sp/>CTR<sp/>and<sp/>GCM<sp/>modes,<sp/>this<sp/>is<sp/>the<sp/>same<sp/>size<sp/>as<sp/>the<sp/>plaintext.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*<sp/>@note<sp/>@b<sp/>plaintext<sp/>and<sp/>@b<sp/>ciphertext<sp/>are<sp/>aliasable.</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>@note<sp/>Encrypt<sp/>is<sp/>streamable,<sp/>such<sp/>that<sp/>encrypt(msg1)<sp/>+<sp/>encrypt(msg2)<sp/>is<sp/>functionally<sp/>identical<sp/>to<sp/>encrypt(msg1+msg2)</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>exception<sp/>of<sp/>intervening<sp/>padding<sp/>in<sp/>CBC<sp/>mode.</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/>@note<sp/>Once<sp/>a<sp/><sp/>context<sp/>is<sp/>used<sp/>for<sp/>encryption,<sp/>it<sp/>cannot<sp/>be<sp/>used<sp/>for<sp/>decryption.</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/>cryptx_aes_encrypt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>plaintext,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ciphertext);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Performs<sp/>a<sp/>stateful<sp/>AES<sp/>decryption<sp/>of<sp/>an<sp/>arbitrary<sp/>length<sp/>of<sp/>data.</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>context<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>AES<sp/>cipher<sp/>context.</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ciphertext<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>data<sp/>to<sp/>decrypt.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Length<sp/>of<sp/>data<sp/>at<sp/>@b<sp/>ciphertext<sp/>to<sp/>decrypt.</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>plaintext<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>buffer<sp/>to<sp/>write<sp/>decryped<sp/>data<sp/>to.</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>@returns<sp/>An<sp/>@b<sp/>aes_error_t<sp/>indicating<sp/>the<sp/>status<sp/>of<sp/>the<sp/>AES<sp/>operation.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>@note<sp/>@b<sp/>plaintext<sp/>and<sp/>@b<sp/>ciphertext<sp/>are<sp/>aliasable.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>@note<sp/>Decrypt<sp/>is<sp/>streamable,<sp/>such<sp/>that<sp/>decrypt(msg1)<sp/>+<sp/>decrypt(msg2)<sp/>is<sp/>functionally<sp/>identical<sp/>to<sp/>decrypt(msg1+msg2)</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/>with<sp/>the<sp/>exception<sp/>of<sp/>intervening<sp/>padding<sp/>in<sp/>CBC<sp/>mode.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/>@note<sp/>Once<sp/>a<sp/>context<sp/>is<sp/>used<sp/>for<sp/>decryption,<sp/>it<sp/>cannot<sp/>be<sp/>used<sp/>for<sp/>encryption.</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/>cryptx_aes_decrypt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ciphertext,</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>plaintext);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Updates<sp/>the<sp/>cipher<sp/>context<sp/>for<sp/>given<sp/>AAD<sp/>(Additional<sp/>Authenticated<sp/>Data).</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>AAD<sp/>is<sp/>data<sp/>that<sp/>is<sp/>only<sp/>authenticated,<sp/>not<sp/>encrypted.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>context<sp/><sp/><sp/>Pointer<sp/>to<sp/>an<sp/>AES<sp/>context.</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>aad<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>additional<sp/>authenticated<sp/>data<sp/>segment.</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>aad_len<sp/><sp/><sp/>Length<sp/>of<sp/>additional<sp/>data<sp/>segment.</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>@returns<sp/>An<sp/>@b<sp/>aes_error_t<sp/>indicating<sp/>the<sp/>status<sp/>of<sp/>the<sp/>AES<sp/>operation.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>function<sp/>is<sp/>only<sp/>compatible<sp/>with<sp/>AES-GCM<sp/>cipher<sp/>mode.<sp/>Attempting<sp/>to</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/>use<sp/>this<sp/>function<sp/>for<sp/>any<sp/>other<sp/>cipher<sp/>mode<sp/>will<sp/>return<sp/>@b<sp/>AES_INVALID_CIPHERMODE.</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>function<sp/>can<sp/>only<sp/>be<sp/>called<sp/>between<sp/>the<sp/>call<sp/>to<sp/>@b<sp/>cryptx_aes_init<sp/>and<sp/>the<sp/>first<sp/>call</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/>to<sp/>@b<sp/>cryptx_aes_encrypt<sp/>or<sp/>@b<sp/>cryptx_aes_decrypt.<sp/>Once<sp/>encryption<sp/>or<sp/>decryption<sp/>starts,<sp/>you<sp/>can</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/>no<sp/>longer<sp/>update<sp/>AAD.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/>cryptx_aes_update_aad(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>aad,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aad_len);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Returns<sp/>the<sp/>current<sp/>authentication<sp/>tag<sp/>for<sp/>data<sp/>parsed<sp/>so<sp/>far.</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>context<sp/><sp/><sp/>Pointer<sp/>to<sp/>an<sp/>AES<sp/>context</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>digest<sp/><sp/><sp/>Pointer<sp/>to<sp/>a<sp/>buffer<sp/>to<sp/>output<sp/>digest<sp/>to.<sp/>Must<sp/>be<sp/>at<sp/>least<sp/>16<sp/>bytes<sp/>large.</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*<sp/>@returns<sp/>An<sp/>@b<sp/>aes_error_t<sp/>indicating<sp/>the<sp/>status<sp/>of<sp/>the<sp/>AES<sp/>operation.</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>function<sp/>is<sp/>only<sp/>compatible<sp/>with<sp/>AES-GCM<sp/>cipher<sp/>mode.<sp/>Attempting<sp/>to<sp/>call<sp/>it<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>other<sp/>cipher<sp/>mode<sp/>will<sp/>return<sp/>@b<sp/>AES_INVALID_CIPHERMODE.</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/>@note<sp/>Calling<sp/>this<sp/>function<sp/>terminates<sp/>your<sp/>use<sp/>of<sp/>the<sp/>current<sp/>AES<sp/>context.<sp/>This<sp/>is<sp/>because</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*<sp/>reuse<sp/>of<sp/>the<sp/>IV<sp/>buffer<sp/>can<sp/>leak<sp/>the<sp/>hkey<sp/>used<sp/>for<sp/>authentication.<sp/>The<sp/>next<sp/>stream<sp/>may<sp/>use<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/>encryption<sp/>key<sp/>but<sp/>should<sp/>have<sp/>a<sp/>unique<sp/>IV.</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/>cryptx_aes_digest(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>context,<sp/>uint8_t<sp/>*digest);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Parses<sp/>the<sp/>specified<sp/>AAD<sp/>and<sp/>ciphertext<sp/>and<sp/>then<sp/>compares<sp/>the<sp/>output<sp/>auth<sp/>tag</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/>to<sp/>an<sp/>expected<sp/>auth<sp/>tag.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>context<sp/><sp/><sp/>Pointer<sp/>to<sp/>an<sp/>AES<sp/>context.</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>aad<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>associated<sp/>data<sp/>to<sp/>authenticate.</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>aad_len<sp/><sp/><sp/>Length<sp/>of<sp/>associated<sp/>data<sp/>to<sp/>authenticate.</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ciphertext<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>ciphertext<sp/>to<sp/>authenticate.</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>ciphertext_len<sp/><sp/><sp/><sp/>Length<sp/>of<sp/>ciphertext<sp/>to<sp/>authenticate.</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>tag<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>expected<sp/>auth<sp/>tag<sp/>to<sp/>validate<sp/>against.</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/>@returns<sp/>TRUE<sp/>if<sp/>authentication<sp/><sp/>tag<sp/>matches<sp/>expected,<sp/>FALSE<sp/>otherwise.</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*<sp/>@note<sp/>operates<sp/>on<sp/>a<sp/>dummy<sp/>copy<sp/>of<sp/>@b<sp/>*context<sp/>to<sp/>avoid<sp/>nuking<sp/>the<sp/>active<sp/>copy</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*<sp/>@note<sp/>If<sp/>this<sp/>function<sp/>returns<sp/>FALSE,<sp/>do<sp/>not<sp/>decrypt<sp/>the<sp/>message.</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cryptx_aes_verify(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>aad,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aad_len,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ciphertext,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ciphertext_len,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*tag);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>RIVEST-SHAMIR-ADLEMAN<sp/>(RSA)<sp/>ENCRYPTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight></codeline>
<codeline lineno="433" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="434" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a2cafdb683e1870a33bcb821420626cae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a2cafdb683e1870a33bcb821420626cae" kindref="member">RSA_OK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294aab9ab38286c4180a1aa9f6e8df42e5db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294aab9ab38286c4180a1aa9f6e8df42e5db" kindref="member">RSA_INVALID_ARG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="436" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294aedeb18a96b96e292369abed5b2f0a271" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294aedeb18a96b96e292369abed5b2f0a271" kindref="member">RSA_INVALID_MSG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="437" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a843ec210de66176ef63e2d2b8ebdeb65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a843ec210de66176ef63e2d2b8ebdeb65" kindref="member">RSA_INVALID_MODULUS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a43eadc89540121b902e02afabc7a7eb9" kindref="member">RSA_ENCODING_ERROR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="439" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a43eadc89540121b902e02afabc7a7eb9" refkind="member"><highlight class="normal">}<sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294" kindref="member">rsa_error_t</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="cryptx_8h_1a265dcd336b31e2b95870d864c85cee2a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_RSA_MODULUS_MAX<sp/><sp/><sp/><sp/><sp/><sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Encrypts<sp/>a<sp/>message<sp/>using<sp/>the<sp/>given<sp/>RSA<sp/>public<sp/>key.</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>msg<sp/><sp/><sp/>Pointer<sp/>to<sp/>a<sp/>message<sp/>to<sp/>encrypt<sp/>using<sp/>RSA.</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>msglen<sp/><sp/><sp/><sp/>The<sp/>byte<sp/>length<sp/>of<sp/>the<sp/>@b<sp/>msg.</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>pubkey<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>a<sp/>public<sp/>key<sp/>to<sp/>use<sp/>for<sp/>encryption.</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>keylen<sp/><sp/><sp/><sp/>The<sp/>length<sp/>of<sp/>the<sp/>public<sp/>key<sp/>(modulus)<sp/>to<sp/>encrypt<sp/>with.</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>ciphertext<sp/><sp/><sp/>Pointer<sp/>a<sp/>buffer<sp/>to<sp/>write<sp/>the<sp/>ciphertext<sp/>to.</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>oaep_hash_alg<sp/>The<sp/>numeric<sp/>ID<sp/>of<sp/>the<sp/>hashing<sp/>algorithm<sp/>to<sp/>use<sp/>within<sp/>OAEP<sp/>encoding.</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>@b<sp/>cryptx_hash_algorithms.</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*<sp/>@returns<sp/><sp/>An<sp/>@b<sp/>rsa_error_t<sp/>indicating<sp/>the<sp/>status<sp/>of<sp/>the<sp/>RSA<sp/>operation.</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*<sp/>@note<sp/>The<sp/>size<sp/>of<sp/>@b<sp/>ciphertext<sp/>and<sp/>@b<sp/>keylen<sp/>must<sp/>be<sp/>equal.</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>*<sp/>@note<sp/>The<sp/>@b<sp/>msg<sp/>will<sp/>be<sp/>encoded<sp/>using<sp/>OAEP<sp/>before<sp/>encryption.</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>*<sp/>@note<sp/>msg<sp/>and<sp/>pubkey<sp/>are<sp/>both<sp/>treated<sp/>as<sp/>byte<sp/>arrays.</highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/>*<sp/>@note<sp/>The<sp/>public<sp/>exponent<sp/>is<sp/>hardcoded<sp/>to<sp/>@b<sp/>65537.</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294" kindref="member">rsa_error_t</ref><sp/>cryptx_rsa_encrypt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>msglen,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pubkey,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ciphertext,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>oaep_hash_alg);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ELLIPTIC<sp/>CURVE<sp/>DIFFIE-HELLMAN<sp/>(ECDH)<sp/>ENCRYPTION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight></codeline>
<codeline lineno="471"><highlight class="comment"></highlight><highlight class="comment">//<sp/>Using<sp/>curve<sp/>SECT233k1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="474" refid="cryptx_8h_1ac753c393f9a2f85ebd589ed14823ccd7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_ECDH_PRIVKEY_LEN<sp/><sp/><sp/><sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="477" refid="cryptx_8h_1ad75ef28855bfeec84da3e324494c3082" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_ECDH_PUBKEY_LEN<sp/><sp/><sp/><sp/><sp/><sp/>(CRYPTX_ECDH_PRIVKEY_LEN&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_ECDH_SECRET_LEN<sp/><sp/><sp/><sp/><sp/><sp/>CRYPTX_ECDH_PUBKEY_LEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_ecdh_generate_privkey(privkey)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="481"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>cryptx_csrand_fill((privkey),<sp/>(CRYPTX_ECDH_PRIVKEY_LEN))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_ecdh_error<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>ECDH_OK,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>ECDH_INVALID_ARG,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>ECDH_PRIVKEY_INVALID,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>ECDH_RPUBKEY_INVALID</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}<sp/>ecdh_error_t;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Generates<sp/>a<sp/>public<sp/>key<sp/>from<sp/>the<sp/>private<sp/>key<sp/>and<sp/>some<sp/>base<sp/>point<sp/>G<sp/>on<sp/>curve.</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>privkey<sp/><sp/><sp/>Pointer<sp/>to<sp/>a<sp/>randomized<sp/>ECDH<sp/>private<sp/>key.</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>pubkey<sp/><sp/><sp/>Pointer<sp/>to<sp/>buffer<sp/>to<sp/>write<sp/>public<sp/>key.</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*<sp/>@note<sp/>Output<sp/>public<sp/>key<sp/>is<sp/>a<sp/>point<sp/>on<sp/>the<sp/>curve<sp/>expressed<sp/>as<sp/>two<sp/>30-byte<sp/>coordinates</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*<sp/>encoded<sp/>in<sp/>little<sp/>endian<sp/>byte<sp/>order<sp/>and<sp/>padded<sp/>with<sp/>zeros<sp/>(if<sp/>needed).<sp/>You<sp/>may<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>*<sp/>deserialize<sp/>the<sp/>key<sp/>and<sp/>then<sp/>serialize<sp/>it<sp/>into<sp/>a<sp/>different<sp/>format<sp/>to<sp/>use<sp/>it<sp/>with</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*<sp/>some<sp/>encryption<sp/>libraries.</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*<sp/>@note<sp/>This<sp/>function<sp/>expects<sp/>that<sp/>@b<sp/>privkey<sp/>be<sp/>filled<sp/>with<sp/>random<sp/>bytes.<sp/>Failure<sp/>to<sp/>do<sp/>so</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*<sp/>may<sp/>cause<sp/>unexpected<sp/>behavior.<sp/>See<sp/>@b<sp/>CRYPTX_ECDH_GENERATE_PRIVKEY().</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal">ecdh_error_t<sp/>cryptx_ecdh_publickey(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*privkey,<sp/>uint8_t<sp/>*pubkey);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Computes<sp/>a<sp/>secret<sp/>from<sp/>the<sp/>private<sp/>key<sp/>and<sp/>the<sp/>remote<sp/>public<sp/>key.</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>privkey<sp/><sp/><sp/>Pointer<sp/>to<sp/>local<sp/>private<sp/>key.</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*<sp/>@param[in]<sp/>rpubkey<sp/><sp/><sp/>Pointer<sp/>to<sp/>remote<sp/>public<sp/>key.</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*<sp/>@param[out]<sp/>secret<sp/><sp/><sp/>Pointer<sp/>to<sp/>buffer<sp/>to<sp/>write<sp/>shared<sp/>secret<sp/>to.</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>*<sp/>@note<sp/>@b<sp/>secret<sp/>must<sp/>be<sp/>at<sp/>least<sp/>@b<sp/>CRYPTX_ECDH_SECRET_LEN<sp/>bytes.</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/>*<sp/>@note<sp/>Output<sp/>secret<sp/>is<sp/>a<sp/>point<sp/>on<sp/>the<sp/>curve<sp/>expressed<sp/>as<sp/>two<sp/>30-byte<sp/>coordinates</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/>*<sp/>encoded<sp/>in<sp/>little<sp/>endian<sp/>byte<sp/>order<sp/>and<sp/>padded<sp/>with<sp/>zeros<sp/>if<sp/>needed.<sp/>You<sp/>may<sp/>have<sp/>to</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/>*<sp/>deserialize<sp/>the<sp/>secret<sp/>and<sp/>then<sp/>serialize<sp/>it<sp/>into<sp/>a<sp/>different<sp/>format<sp/>for<sp/>compatibility<sp/>with</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/>*<sp/>other<sp/>encryption<sp/>libraries.</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/>*<sp/>@note<sp/>It<sp/>is<sp/>generally<sp/>not<sp/>recommended<sp/>to<sp/>use<sp/>the<sp/>computed<sp/>secret<sp/>as<sp/>an<sp/>encryption<sp/>key<sp/>as<sp/>is.</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/>*<sp/>It<sp/>is<sp/>preferred<sp/>to<sp/>pass<sp/>the<sp/>secret<sp/>to<sp/>a<sp/>KDF<sp/>or<sp/>a<sp/>cryptographic<sp/>primitive<sp/>such<sp/>as<sp/>a<sp/>hash<sp/>function<sp/>and<sp/>use</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/>*<sp/>that<sp/>output<sp/>as<sp/>your<sp/>symmetric<sp/>key.</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal">ecdh_error_t<sp/>cryptx_ecdh_secret(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*privkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*rpubkey,<sp/>uint8_t<sp/>*secret);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>ABSTRACT<sp/>SYNTAX<sp/>NOTATION<sp/>ONE<sp/>(ASN.1)<sp/>DECODING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight></codeline>
<codeline lineno="524" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5" refkind="member"><highlight class="comment"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5" kindref="member">CRYPTX_ASN1_TAGS</ref><sp/>{</highlight></codeline>
<codeline lineno="525" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a0b4ee1817dddda0e7bb95f8c9c5262cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a0b4ee1817dddda0e7bb95f8c9c5262cc" kindref="member">ASN1_RESVD</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="526" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5afcacc079274ffffd6f8f30005a478309" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5afcacc079274ffffd6f8f30005a478309" kindref="member">ASN1_BOOLEAN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="527" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ace678073d12a09bd35a9d14ee843f4f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ace678073d12a09bd35a9d14ee843f4f6" kindref="member">ASN1_INTEGER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="528" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a80cce3c21b5cf2a46abcf2d6559f16a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a80cce3c21b5cf2a46abcf2d6559f16a2" kindref="member">ASN1_BITSTRING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="529" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ad652362316e1126ce1f372ee9f42fdf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ad652362316e1126ce1f372ee9f42fdf7" kindref="member">ASN1_OCTETSTRING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="530" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ab9aa4736a7a0bec12fda19d770381ade" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ab9aa4736a7a0bec12fda19d770381ade" kindref="member">ASN1_NULL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="531" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ab4e5697bbcfa96959f724b475deb438d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ab4e5697bbcfa96959f724b475deb438d" kindref="member">ASN1_OBJECTID</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="532" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5afa75f14a7646b0ee90575da2299c9303" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5afa75f14a7646b0ee90575da2299c9303" kindref="member">ASN1_OBJECTDESC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="533" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a2169eaf366165cd4dfe1aca66659935c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a2169eaf366165cd4dfe1aca66659935c" kindref="member">ASN1_INSTANCE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="534" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ade199cbdfbec356bae58bc468797580a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5ade199cbdfbec356bae58bc468797580a" kindref="member">ASN1_REAL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_ENUMERATED,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_EMBEDDEDPDV,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTF8STRING,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_RELATIVEOID,</highlight></codeline>
<codeline lineno="539" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a472ab1907cf28338eff639b8b5ab667c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5a472ab1907cf28338eff639b8b5ab667c" kindref="member">ASN1_SEQUENCE</ref><sp/>=<sp/>16,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="540" refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5aefff306acd391300face0a8080ad415e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a689d38f1bafe5364a5f7737df5b304f5aefff306acd391300face0a8080ad415e" kindref="member">ASN1_SET</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_NUMERICSTRING,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_PRINTABLESTRING,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_TELETEXSTRING,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_VIDEOTEXSTRING,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_IA5STRING,</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTCTIME,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_GENERALIZEDTIME,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_GRAPHICSTRING,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_VISIBLESTRING,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_GENERALSTRING,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UNIVERSALSTRING,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_CHARSTRING,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_BMPSTRING</highlight></codeline>
<codeline lineno="554"><highlight class="normal">};</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900" kindref="member">CRYPTX_ASN1_CLASSES</ref><sp/>{</highlight></codeline>
<codeline lineno="557" refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a36845401ba730128d3078d9cd0730fe8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a36845401ba730128d3078d9cd0730fe8" kindref="member">ASN1_UNIVERSAL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="558" refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a1c873115fb577a391d1af735307abc45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a1c873115fb577a391d1af735307abc45" kindref="member">ASN1_APPLICATION</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="559" refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a0e4e8c83e4929fe69855de5c8c7a34d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900a0e4e8c83e4929fe69855de5c8c7a34d3" kindref="member">ASN1_CONTEXTSPEC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900ac51c7440728bfe2d94426d0ca4f3d895" kindref="member">ASN1_PRIVATE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="561" refid="cryptx_8h_1a1450446b0fdb10702d0a1a792ac2c900ac51c7440728bfe2d94426d0ca4f3d895" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563" refid="cryptx_8h_1af2211fe420abff08488c8f04de017080" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1af2211fe420abff08488c8f04de017080" kindref="member">CRYPTX_ASN1_FORMS</ref><sp/>{</highlight></codeline>
<codeline lineno="564" refid="cryptx_8h_1af2211fe420abff08488c8f04de017080a916350d579d4895b1f843289b60b4572" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1af2211fe420abff08488c8f04de017080a916350d579d4895b1f843289b60b4572" kindref="member">ASN1_PRIMITIVE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="565" refid="cryptx_8h_1af2211fe420abff08488c8f04de017080ad03b2b41a6f3417a981a78ca887332e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1af2211fe420abff08488c8f04de017080ad03b2b41a6f3417a981a78ca887332e6" kindref="member">ASN1_CONSTRUCTED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="566"><highlight class="normal">};</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="cryptx_8h_1a13585a6206e220218a8f379327b04433" refkind="member"><highlight class="preprocessor">#define<sp/>cryptx_asn1_get_tag(tag)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((tag)<sp/>&amp;<sp/>0b111111)</highlight></codeline>
<codeline lineno="571" refid="cryptx_8h_1a5af192045bb48e03f788962f259a2a7e" refkind="member"><highlight class="preprocessor">#define<sp/>cryptx_asn1_get_class(tag)<sp/><sp/><sp/><sp/><sp/><sp/>(((tag)&gt;&gt;6)<sp/>&amp;<sp/>0b11)</highlight></codeline>
<codeline lineno="573" refid="cryptx_8h_1a3c8b39f5fb3ad1d8d138b9791b18f01e" refkind="member"><highlight class="preprocessor">#define<sp/>cryptx_asn1_get_form(tag)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((tag)&gt;&gt;5)<sp/>&amp;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="576" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33ae8a5623b62dab851b0dc76048afc0b4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33ae8a5623b62dab851b0dc76048afc0b4a" kindref="member">ASN1_OK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a434628c70562f3ab468d94e8eae7784d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a434628c70562f3ab468d94e8eae7784d" kindref="member">ASN1_END_OF_FILE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="578" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33aa13d20ad819d43693d26c77b80fb4952" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33aa13d20ad819d43693d26c77b80fb4952" kindref="member">ASN1_INVALID_ARG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="579" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a0101185f2109f1ba75ea2c4833664474" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a0101185f2109f1ba75ea2c4833664474" kindref="member">ASN1_LEN_OVERFLOW</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="580"><highlight class="normal">}<sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" kindref="member">asn1_error_t</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="583"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Decodes<sp/>the<sp/>ASN.1<sp/>data<sp/>at<sp/>the<sp/>given<sp/>address.<sp/>Seeks<sp/>to<sp/>an<sp/>element<sp/>from<sp/>the<sp/>front<sp/>of<sp/>the<sp/>data.</highlight></codeline>
<codeline lineno="584"><highlight class="comment"><sp/>*<sp/>@param<sp/>data_start<sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>a<sp/>block<sp/>of<sp/>ASN.1-encoded<sp/>data.</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/>*<sp/>@param<sp/>data_len<sp/><sp/><sp/><sp/><sp/><sp/>Length<sp/>of<sp/>ASN.1-encoded<sp/>block.</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/>*<sp/>@param<sp/>seek_to<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>ASN.1<sp/>elements<sp/>to<sp/>skip<sp/>before<sp/>returning<sp/>one.</highlight></codeline>
<codeline lineno="587"><highlight class="comment"><sp/>*<sp/>@param<sp/>element_tag<sp/><sp/><sp/>Masked<sp/>tag<sp/>value<sp/>of<sp/>the<sp/>returned<sp/>element.</highlight></codeline>
<codeline lineno="588"><highlight class="comment"><sp/>*<sp/>@param<sp/>element_len<sp/><sp/><sp/>Length<sp/>of<sp/>the<sp/>returned<sp/>element.</highlight></codeline>
<codeline lineno="589"><highlight class="comment"><sp/>*<sp/>@param<sp/>element_data<sp/><sp/>Pointer<sp/>to<sp/>the<sp/>data<sp/>of<sp/>the<sp/>returned<sp/>element.</highlight></codeline>
<codeline lineno="590"><highlight class="comment"><sp/>*<sp/>@returns<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>An<sp/>@b<sp/>asn1_error_t<sp/>indicating<sp/>the<sp/>status<sp/>of<sp/>the<sp/>operation.</highlight></codeline>
<codeline lineno="591"><highlight class="comment"><sp/>*<sp/>@note<sp/>@b<sp/>ASN1_END_OF_FILE<sp/>will<sp/>be<sp/>returned<sp/>if<sp/>@b<sp/>seek_to<sp/>is<sp/>invalid.</highlight></codeline>
<codeline lineno="592"><highlight class="comment"><sp/>*<sp/>@note<sp/>ASN.1<sp/>is<sp/>a<sp/>tree<sp/>structure.<sp/>You<sp/>can<sp/>use<sp/>the<sp/>@b<sp/>element_data<sp/>and<sp/>@b<sp/>element_len<sp/>parameters</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*<sp/>returned<sp/>by<sp/>this<sp/>function<sp/>to<sp/>iterate<sp/>further<sp/>up<sp/>the<sp/>tree.<sp/>To<sp/>see<sp/>if<sp/>an<sp/>element<sp/>is<sp/>of<sp/>a<sp/>type<sp/>for<sp/>which<sp/>this<sp/>is</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*<sp/>valid,<sp/>check<sp/>the<sp/>return<sp/>value<sp/>of<sp/>@b<sp/>CRYPTX_ASN1_FORM(element_tag).</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*<sp/>@note<sp/>NULL<sp/>may<sp/>be<sp/>passed<sp/>for<sp/>@b<sp/>element_tag,<sp/>@b<sp/>element_len,<sp/>and/or<sp/>@b<sp/>element_data<sp/>if<sp/>you<sp/>do<sp/>not</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>*<sp/>need<sp/>to<sp/>return<sp/>that<sp/>particular<sp/>bit<sp/>of<sp/>information.</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" kindref="member">asn1_error_t</ref><sp/>cryptx_asn1_decode(</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data_start,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>data_len,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>seek_to,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*element_tag,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*element_len,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>**element_data);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>BASE64<sp/>DECODING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment">//***************************************************************************************</highlight></codeline>
<codeline lineno="612" refid="cryptx_8h_1a9db7be56d66674980b5540cab9405cc7" refkind="member"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>cryptx_base64_get_encoded_len(len)<sp/><sp/><sp/><sp/><sp/><sp/>((len)<sp/>*<sp/>4<sp/>/<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_base64_get_decoded_len(len)<sp/><sp/><sp/><sp/><sp/><sp/>((len)<sp/>*<sp/>3<sp/>/<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Converts<sp/>an<sp/>octet-encoded<sp/>byte<sp/>stream<sp/>into<sp/>a<sp/>sextet-encoded<sp/>byte<sp/>stream.</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/>*<sp/>@param<sp/>dest<sp/>Pointer<sp/>to<sp/>output<sp/>sextet-encoded<sp/>data<sp/>stream.</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/>*<sp/>@param<sp/>src<sp/>Pointer<sp/>to<sp/>input<sp/>octet-encoded<sp/>data<sp/>stream.</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/>*<sp/>@param<sp/>len<sp/>Length<sp/>of<sp/>octet-encoded<sp/>data<sp/>stream.</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*<sp/>@note<sp/>@b<sp/>dest<sp/>should<sp/>be<sp/>at<sp/>least<sp/><sp/>@b<sp/>len<sp/>\*<sp/>4<sp/>/<sp/>3<sp/>bytes<sp/>large.</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/>*<sp/>@returns<sp/>Length<sp/>of<sp/>output<sp/>sextet.</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cryptx_base64_encode(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="comment">/******************************************************</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Converts<sp/>a<sp/>sextet-encoded<sp/>byte<sp/>stream<sp/>into<sp/>a<sp/>octet-encoded<sp/>byte<sp/>stream.</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/>*<sp/>@param<sp/>dest<sp/>Pointer<sp/>to<sp/>output<sp/>octet-encoded<sp/>data<sp/>stream.</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/>*<sp/>@param<sp/>src<sp/>Pointer<sp/>to<sp/>input<sp/>sextet-encoded<sp/>data<sp/>stream.</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/>*<sp/>@param<sp/>len<sp/>Length<sp/>of<sp/>sextet-encoded<sp/>data<sp/>stream.</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/>*<sp/>@note<sp/>@b<sp/>dest<sp/>should<sp/>be<sp/>at<sp/>least<sp/>@b<sp/>len<sp/>\*<sp/>3<sp/>/<sp/>4<sp/>bytes<sp/>large.</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/>*<sp/>@returns<sp/>Length<sp/>of<sp/>output<sp/>octet.</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cryptx_base64_decode(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CRYPTX_ENABLE_HAZMAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cryptx_hazmat_aes_ecb_encrypt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block_in,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block_out,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>ks);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cryptx_hazmat_aes_ecb_decrypt(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block_in,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block_out,</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>ks);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cryptx_hazmat_rsa_oaep_encode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plaintext,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*encoded,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>modulus_len,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*auth,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cryptx_hazmat_rsa_oaep_decode(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*encoded,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plaintext,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*auth,</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cryptx_hazmat_powmod(uint8_t<sp/>size,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*restrict<sp/>base,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint24_t<sp/>exp,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*restrict<sp/>mod);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cryptx_ecc_point<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>x[GF2_INTLEN];</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>y[GF2_INTLEN];</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cryptx_hazmat_ecc_point_add(cryptx_ecc_point*<sp/>p,<sp/>cryptx_ecc_point*<sp/>q);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cryptx_hazmat_ecc_point_double(cryptx_ecc_point*<sp/>p);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>cryptx_hazmat_ecc_point_mul_scalar(cryptx_ecc_point*<sp/>p,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>scalar,</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>scalar_bit_width);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/acagliano/Repositories/toolchain/src/cryptx/cryptx.h"/>
  </compounddef>
</doxygen>
