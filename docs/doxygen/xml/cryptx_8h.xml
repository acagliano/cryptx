<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="cryptx_8h" kind="file" language="C++">
    <compoundname>cryptx.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stddef.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h</label>
        <link refid="cryptx_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structcryptx__priv__hash__sha256__state" prot="public">cryptx_priv_hash_sha256_state</innerclass>
    <innerclass refid="unioncryptx__hash__private__h" prot="public">cryptx_hash_private_h</innerclass>
    <innerclass refid="structcryptx__priv__hmac__sha256__state" prot="public">cryptx_priv_hmac_sha256_state</innerclass>
    <innerclass refid="unioncryptx__hmac__private__h" prot="public">cryptx_hmac_private_h</innerclass>
    <innerclass refid="structcryptx__aes__cbc__state" prot="public">cryptx_aes_cbc_state</innerclass>
    <innerclass refid="structcryptx__aes__ctr__state" prot="public">cryptx_aes_ctr_state</innerclass>
    <innerclass refid="structcryptx__aes__gcm__state" prot="public">cryptx_aes_gcm_state</innerclass>
    <innerclass refid="unioncryptx__aes__private__h" prot="public">cryptx_aes_private_h</innerclass>
    <innerclass refid="structcryptx__hash__ctx" prot="public">cryptx_hash_ctx</innerclass>
    <innerclass refid="structcryptx__hmac__ctx" prot="public">cryptx_hmac_ctx</innerclass>
    <innerclass refid="structcryptx__aes__ctx" prot="public">cryptx_aes_ctx</innerclass>
    <innerclass refid="structcryptx__asn1__object" prot="public">cryptx_asn1_object</innerclass>
    <innerclass refid="structcryptx__pkcs8__pubkey" prot="public">cryptx_pkcs8_pubkey</innerclass>
    <innerclass refid="structcryptx__pkcs8__privkey" prot="public">cryptx_pkcs8_privkey</innerclass>
    <innerclass refid="structcryptx__ecc__point" prot="public">cryptx_ecc_point</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="cryptx_8h_1a4f1536bc045d8c6c6b1fd7502922c85a" prot="public" static="no">
        <name>CRYPTX_DIGESTLEN_SHA1</name>
        <briefdescription>
<para>digest length for SHA-1 hash </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="99" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a36616e8d1ed1e6270deadd0f8a4f096d" prot="public" static="no">
        <name>CRYPTX_DIGESTLEN_SHA256</name>
        <briefdescription>
<para>digest length for SHA-256 hash </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="100" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1aa9fde36ec3becdc849fcb37c14899544" prot="public" static="no">
        <name>CRYPTX_KEYLEN_AES128</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="275" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a4aa7074b0e57cf7d3f3eea983fc2547f" prot="public" static="no">
        <name>CRYPTX_KEYLEN_AES192</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="276" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a11632b2d2dcc8cc16684d896c140fb15" prot="public" static="no">
        <name>CRYPTX_KEYLEN_AES256</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="277" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1ab571a7efb0b2dcb981d2876ab6e64d65" prot="public" static="no">
        <name>CRYPTX_BLOCKSIZE_AES</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="279" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a743d804a517a2e38d7f1224fdc8429f1" prot="public" static="no">
        <name>cryptx_aes_cbc_flagset</name>
        <param><defname>padding_mode</defname></param>
        <briefdescription>
<para>Defines a macro to set flags for AES CBC mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="289" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1ab58fc147ecd3f0103486a14cf8254973" prot="public" static="no">
        <name>cryptx_aes_ctr_flagset</name>
        <param><defname>nonce_len</defname></param>
        <param><defname>counter_len</defname></param>
        <briefdescription>
<para>Defines a macro to set flags for AES CTR mode. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="293" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a7bffe1d673fd05c8e538d6169b12509f" prot="public" static="no">
        <name>cryptx_aes_gcm_flagset</name>
        <briefdescription>
<para>GCM has no flags, pass 0 . </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="297" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1adf4062c77f37927bc0178872056602ff" prot="public" static="no">
        <name>cryptx_aes_get_ciphertext_len</name>
        <param><defname>len</defname></param>
        <briefdescription>
<para>Defines a macro to return the byte length of an AES ciphertext given a plaintext length. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="300" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a265dcd336b31e2b95870d864c85cee2a" prot="public" static="no">
        <name>CRYPTX_RSA_MODULUS_MAX</name>
        <briefdescription>
<para>Defines the maximum byte length of an RSA public modulus supported by this library. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="408" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1aba6c506b34f4d5e1ab991512f4368b8e" prot="public" static="no">
        <name>CRYPTX_KEYLEN_EC_PRIVKEY</name>
        <briefdescription>
<para>Defines the byte length of a private key used by this module. </para>
        </briefdescription>
        <detaileddescription>
<sect3 id="cryptx_8h_1autotoc_md3">
<title>ELLIPTIC CURVE DIFFIE-HELLMAN</title>
<para>Using curve SECT233k1 </para>
</sect3>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="433" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a46079c346c2ba0f2145e084a78c2cdab" prot="public" static="no">
        <name>CRYPTX_KEYLEN_EC_PUBKEY</name>
        <briefdescription>
<para>Defines the byte length of a public key used by this module. </para>
        </briefdescription>
        <detaileddescription>
<para><linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="436" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="436" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1afdb20067c07b76dac6331ed30d6cd1d6" prot="public" static="no">
        <name>CRYPTX_KEYLEN_EC_SECRET</name>
        <briefdescription>
<para>Defines the byte length of a secret generated by this module. </para>
        </briefdescription>
        <detaileddescription>
<para><linebreak/>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="439" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="439" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1ae3c158bb1a0ff9721c09573f085b8b5a" prot="public" static="no">
        <name>cryptx_asn1_gettag</name>
        <param><defname>tag</defname></param>
        <briefdescription>
<para>Returns the unmasked tag. See <bold>cryptx_asn1_tags</bold> above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="525" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="525" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a770550928a870169fd4358b427cdcb95" prot="public" static="no">
        <name>cryptx_asn1_getclass</name>
        <param><defname>tag</defname></param>
        <briefdescription>
<para>Returns the 2-bit tag class flag. See <bold>cryptx_asn1_classes</bold> above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="527" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="527" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1ab45e9d12f4f83f53441e72757c0717ea" prot="public" static="no">
        <name>cryptx_asn1_getform</name>
        <param><defname>tag</defname></param>
        <briefdescription>
<para>Returns the 1-bit tag form (1 = constructed, 0 = primitive). See <bold>cryptx_asn1_forms</bold> above. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="529" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="529" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a9db7be56d66674980b5540cab9405cc7" prot="public" static="no">
        <name>cryptx_base64_get_encoded_len</name>
        <param><defname>len</defname></param>
        <briefdescription>
<para>Defines a macro to return the expected base64-encoded data length, given octet-encoded <bold>len</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be len * 8 / 6. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="561" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="561" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1a5629130707448f8475166398fb18a486" prot="public" static="no">
        <name>cryptx_base64_get_decoded_len</name>
        <param><defname>len</defname></param>
        <briefdescription>
<para>Defines a macro to return the expected octet-encoded data length, given base64-encoded <bold>len</bold>. </para>
        </briefdescription>
        <detaileddescription>
<para>This should be len * 6 / 8. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="564" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="564" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cryptx_8h_1ad0e904358b21cab26ad541d594184a89" prot="public" static="no">
        <name>CRYPTX_GF2_INTLEN</name>
        <briefdescription>
<para>Defines the length of a galois field for a curve of degree 233. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="771" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="771" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93b" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_hash_algorithms</name>
        <enumvalue id="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93bac7716785728694693ec29eccd5ffa0e1" prot="public">
          <name>SHA256</name>
          <briefdescription>
<para>algorithm type identifier for SHA-256 </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93ba27028cc8b5d6f0a1cb3030c180019abc" prot="public">
          <name>SHA1</name>
          <briefdescription>
<para>algorithm type identifier for SHA-1 </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Supported hash algorithms. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="93" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a59334db45c5435de6ded4492dec34735" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_aes_cipher_modes</name>
        <enumvalue id="cryptx_8h_1a59334db45c5435de6ded4492dec34735a6d022763befad1bcebcda6aa597c5e55" prot="public">
          <name>CRYPTX_AES_CBC</name>
          <briefdescription>
<para>selects Cyclic Block Chain (CBC) mode </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a59334db45c5435de6ded4492dec34735a11d9f7cd52007c22ac9adbc45bf0442d" prot="public">
          <name>CRYPTX_AES_CTR</name>
          <briefdescription>
<para>selects Counter (CTR) mode </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a59334db45c5435de6ded4492dec34735a0b6b05da37ef303c018bedd8cdbd4b6f" prot="public">
          <name>CRYPTX_AES_GCM</name>
          <briefdescription>
<para>selects Galois Counter (GCM) mode </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="261" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="261" bodyend="265"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_aes_padding_schemes</name>
        <enumvalue id="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a673ae2fee0bfe0a962717b3f673b9b7c" prot="public">
          <name>PAD_PKCS7</name>
          <briefdescription>
<para>PKCS#7 padding | DEFAULT. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a322c11c9058ef67073a3ff9bdcb9f759" prot="public">
          <name>PAD_DEFAULT</name>
          <initializer>= PAD_PKCS7</initializer>
          <briefdescription>
<para>selects the scheme marked DEFAULT. </para>
          </briefdescription>
          <detaileddescription>
<para>Using this is recommended in case a change to the standards would set a stronger padding scheme as default </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a7566d9371110a1a24db62b145c901ad8" prot="public">
          <name>PAD_ISO2</name>
          <briefdescription>
<para>ISO-9797 M2 padding. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="267" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="267" bodyend="273"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a747439e5980be6f5f9fa0c8fbb84655a" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_aes_default_flags</name>
        <enumvalue id="cryptx_8h_1a747439e5980be6f5f9fa0c8fbb84655aaf6ef52028db1d536e3c076574a44ee96" prot="public">
          <name>CRYPTX_AES_CBC_DEFAULTS</name>
          <initializer>= (PAD_DEFAULT | 0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a747439e5980be6f5f9fa0c8fbb84655aaca82ad0c28139f15dfe3145b77271361" prot="public">
          <name>CRYPTX_AES_CTR_DEFAULTS</name>
          <initializer>= (((0x0f &amp; (8))&lt;&lt;6) | ((0x0f &amp; (8))&lt;&lt;2) | 0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a747439e5980be6f5f9fa0c8fbb84655aa9488d8d057bdfcd2b6d399a15bb8dabd" prot="public">
          <name>CRYPTX_AES_GCM_DEFAULTS</name>
          <initializer>= (0)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines defaults for various cipher modes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="282" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="282" bodyend="286"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" prot="public" static="no" strong="no">
        <type></type>
        <name>aes_error_t</name>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaacf07636102724d2a7913911b0cf74b2" prot="public">
          <name>AES_OK</name>
          <briefdescription>
<para>AES operation completed successfully. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda6d39b280aea9d8d62d126eef05d271db" prot="public">
          <name>AES_INVALID_ARG</name>
          <briefdescription>
<para>AES operation failed, bad argument. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaae5e9a591aeda666b0e425d9a05834e3" prot="public">
          <name>AES_INVALID_MSG</name>
          <briefdescription>
<para>AES operation failed, message invalid. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdad2b49ffeabf14aaf47db3d1bad18f84e" prot="public">
          <name>AES_INVALID_CIPHERMODE</name>
          <briefdescription>
<para>AES operation failed, cipher mode undefined. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda47bbd593fc3bdb7758a790bab86b41d9" prot="public">
          <name>AES_INVALID_PADDINGMODE</name>
          <briefdescription>
<para>AES operation failed, padding mode undefined. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaba928751c773ffa0287e47e1f86eae8b" prot="public">
          <name>AES_INVALID_CIPHERTEXT</name>
          <briefdescription>
<para>AES operation failed, ciphertext error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda95a9dcbf64347e3c6f2c50d05e8937f5" prot="public">
          <name>AES_INVALID_OPERATION</name>
          <briefdescription>
<para>AES operation failed, used encrypt context for decrypt or vice versa. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines response codes returned by the AES API. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="304" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="304" bodyend="312"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a0486449f609d0e485bad091a671d9294" prot="public" static="no" strong="no">
        <type></type>
        <name>rsa_error_t</name>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294a2cafdb683e1870a33bcb821420626cae" prot="public">
          <name>RSA_OK</name>
          <briefdescription>
<para>RSA encryption completed successfully. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294aab9ab38286c4180a1aa9f6e8df42e5db" prot="public">
          <name>RSA_INVALID_ARG</name>
          <briefdescription>
<para>RSA encryption failed, bad argument. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294aedeb18a96b96e292369abed5b2f0a271" prot="public">
          <name>RSA_INVALID_MSG</name>
          <briefdescription>
<para>RSA encryption failed, bad msg or msg too long. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294a843ec210de66176ef63e2d2b8ebdeb65" prot="public">
          <name>RSA_INVALID_MODULUS</name>
          <briefdescription>
<para>RSA encryption failed, modulus invalid. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a0486449f609d0e485bad091a671d9294a43eadc89540121b902e02afabc7a7eb9" prot="public">
          <name>RSA_ENCODING_ERROR</name>
          <briefdescription>
<para>RSA encryption failed, OAEP encoding error. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines response codes returned by calls to the RSA API. </para>
        </briefdescription>
        <detaileddescription>
<sect3 id="cryptx_8h_1autotoc_md2">
<title>RIVEST-SHAMIR-ADLEMAN (RSA)</title>
</sect3>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="399" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="399" bodyend="405"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" prot="public" static="no" strong="no">
        <type></type>
        <name>ec_error_t</name>
        <enumvalue id="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90ae92ae69b454b0311041616e4be38d26e" prot="public">
          <name>EC_OK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90a51c1b8f170116b8aa0a75c6ad6fd3d0d" prot="public">
          <name>EC_INVALID_ARG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90a77a3ce6d10fe286a0f7789b15c4ed790" prot="public">
          <name>EC_PRIVKEY_INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90ae8066072efe056458722cc53a743966a" prot="public">
          <name>EC_RPUBKEY_INVALID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines possible response codes from calls to the EC API. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="442" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="442" bodyend="447"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_asn1_tags</name>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a0b4ee1817dddda0e7bb95f8c9c5262cc" prot="public">
          <name>ASN1_RESVD</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>RESERVED. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518afcacc079274ffffd6f8f30005a478309" prot="public">
          <name>ASN1_BOOLEAN</name>
          <briefdescription>
<para>defines a BOOLEAN object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ace678073d12a09bd35a9d14ee843f4f6" prot="public">
          <name>ASN1_INTEGER</name>
          <briefdescription>
<para>defines an INTEGER object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a80cce3c21b5cf2a46abcf2d6559f16a2" prot="public">
          <name>ASN1_BITSTRING</name>
          <briefdescription>
<para>defines a BIT STRING object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ad652362316e1126ce1f372ee9f42fdf7" prot="public">
          <name>ASN1_OCTETSTRING</name>
          <briefdescription>
<para>defines an OCTET STRING object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ab9aa4736a7a0bec12fda19d770381ade" prot="public">
          <name>ASN1_NULL</name>
          <briefdescription>
<para>defines a NULL object (0 size, no data) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ab4e5697bbcfa96959f724b475deb438d" prot="public">
          <name>ASN1_OBJECTID</name>
          <briefdescription>
<para>defines an OBJECT IDENTIFIER </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518afa75f14a7646b0ee90575da2299c9303" prot="public">
          <name>ASN1_OBJECTDESC</name>
          <briefdescription>
<para>defines an OBJECT DESCRIPTION </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a2169eaf366165cd4dfe1aca66659935c" prot="public">
          <name>ASN1_INSTANCE</name>
          <briefdescription>
<para>defines an INSTANCE </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ade199cbdfbec356bae58bc468797580a" prot="public">
          <name>ASN1_REAL</name>
          <briefdescription>
<para>defines a REAL object </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a5bb35c428781f325e40ea36ab317bc42" prot="public">
          <name>ASN1_ENUMERATED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a7c167c8e276b910d748db386f78383af" prot="public">
          <name>ASN1_EMBEDDEDPDV</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a64811d53c5db0139556f07ec23185f08" prot="public">
          <name>ASN1_UTF8STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a5234ef0948bc0487ae9474e21ce0df3f" prot="public">
          <name>ASN1_RELATIVEOID</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a472ab1907cf28338eff639b8b5ab667c" prot="public">
          <name>ASN1_SEQUENCE</name>
          <initializer>= 16</initializer>
          <briefdescription>
<para>defines a SEQUENCE </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518aefff306acd391300face0a8080ad415e" prot="public">
          <name>ASN1_SET</name>
          <briefdescription>
<para>defines a SET </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518af1b09bf2be320630525edcbbffe0424e" prot="public">
          <name>ASN1_NUMERICSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a336e057dd223cc6f701304f0461a2ddf" prot="public">
          <name>ASN1_PRINTABLESTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a9bf70ad3dd4bf8c417d2df3a0567b7a4" prot="public">
          <name>ASN1_TELETEXSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a74f77040fbd3853dd952425441fe5768" prot="public">
          <name>ASN1_VIDEOTEXSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ae00956dc4ea6da4a6f5b052e35ad4b75" prot="public">
          <name>ASN1_IA5STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a11abbe84d583fe76922cb89fe1220567" prot="public">
          <name>ASN1_UTCTIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a6b3d1c40aa79f25a72a9165a4cd691d4" prot="public">
          <name>ASN1_GENERALIZEDTIME</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a7866c130d61ad33372bb0cacdcc50e71" prot="public">
          <name>ASN1_GRAPHICSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518acb9714785116f8951d2cdfb45bcfaf6c" prot="public">
          <name>ASN1_VISIBLESTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518aaecdda4440eb96bc770733f950eab4dd" prot="public">
          <name>ASN1_GENERALSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a1e1d7c1dcf076d12776c085e5f534d58" prot="public">
          <name>ASN1_UNIVERSALSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518af46947fb8b9acd84edae67bb08dabb28" prot="public">
          <name>ASN1_CHARSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518af68d6904a260c69ee964445f81bfbbc4" prot="public">
          <name>ASN1_BMPSTRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<sect3 id="cryptx_8h_1autotoc_md4">
<title>ABSTRACT SYNTAX NOTATION ONE (ASN.1)</title>
</sect3>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="472" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="472" bodyend="502"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_asn1_classes</name>
        <enumvalue id="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150a36845401ba730128d3078d9cd0730fe8" prot="public">
          <name>ASN1_UNIVERSAL</name>
          <briefdescription>
<para>tags defined in the ASN.1 standard. </para>
          </briefdescription>
          <detaileddescription>
<para>Most use cases on calc will be this. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150a1c873115fb577a391d1af735307abc45" prot="public">
          <name>ASN1_APPLICATION</name>
          <briefdescription>
<para>tags unique to a particular application. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150a0e4e8c83e4929fe69855de5c8c7a34d3" prot="public">
          <name>ASN1_CONTEXTSPEC</name>
          <briefdescription>
<para>tags that need to be identified within a particular, well-definded context. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150ac51c7440728bfe2d94426d0ca4f3d895" prot="public">
          <name>ASN1_PRIVATE</name>
          <briefdescription>
<para>reserved for use by a specific entity for their applications. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="504" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="504" bodyend="509"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a19e2a0db96f6eed3d0d22fdf98e67b0c" prot="public" static="no" strong="no">
        <type></type>
        <name>cryptx_asn1_forms</name>
        <enumvalue id="cryptx_8h_1a19e2a0db96f6eed3d0d22fdf98e67b0ca916350d579d4895b1f843289b60b4572" prot="public">
          <name>ASN1_PRIMITIVE</name>
          <briefdescription>
<para>this element should contain no nested elements. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a19e2a0db96f6eed3d0d22fdf98e67b0cad03b2b41a6f3417a981a78ca887332e6" prot="public">
          <name>ASN1_CONSTRUCTED</name>
          <briefdescription>
<para>this element contains nested elements. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="511" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="511" bodyend="514"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" prot="public" static="no" strong="no">
        <type></type>
        <name>asn1_error_t</name>
        <enumvalue id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33ae8a5623b62dab851b0dc76048afc0b4a" prot="public">
          <name>ASN1_OK</name>
          <briefdescription>
<para>No errors occured. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a434628c70562f3ab468d94e8eae7784d" prot="public">
          <name>ASN1_END_OF_FILE</name>
          <briefdescription>
<para>End of ASN.1 data stream reached. </para>
          </briefdescription>
          <detaileddescription>
<para>Technically not an error. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33aa13d20ad819d43693d26c77b80fb4952" prot="public">
          <name>ASN1_INVALID_ARG</name>
          <briefdescription>
<para>One or more arguments invalid. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a0101185f2109f1ba75ea2c4833664474" prot="public">
          <name>ASN1_LEN_OVERFLOW</name>
          <briefdescription>
<para>Length of an element overflowed arch size_t allowance. </para>
          </briefdescription>
          <detaileddescription>
<para>Remainder of data stream unparsable. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines error codes returned from calls to the ASN.1 API. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="532" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="532" bodyend="537"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6c" prot="public" static="no" strong="no">
        <type></type>
        <name>_pkcs8_pubkey_rsa_fields</name>
        <enumvalue id="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6ca7320cdcf509bae5c2495a374a3cde7a6" prot="public">
          <name>PKCS8_PUBLIC_RSA_MODULUS</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>reference to public modulus in <bold><ref refid="structcryptx__pkcs8__pubkey" kindref="compound">cryptx_pkcs8_pubkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6caca4c231faa043d396f93573484c97f06" prot="public">
          <name>PKCS8_PUBLIC_RSA_EXPONENT</name>
          <briefdescription>
<para>reference to public exponent in <bold><ref refid="structcryptx__pkcs8__pubkey" kindref="compound">cryptx_pkcs8_pubkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6ca45f3dfda11cb8657f506aafa1132c539" prot="public">
          <name>PKCS8_PUBLIC_RSA_FIELDS</name>
          <briefdescription>
<para>number of RSA fields in structure (for enumeration) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<sect3 id="cryptx_8h_1autotoc_md5">
<title>PUBLIC KEY CRYPTOGRAPHY STANDARDS 8 (PKCS#8)</title>
<para>Abstraction for importing of PKCS-encoded keyfiles compatible with TLS (and raw input). </para>
</sect3>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="588" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="588" bodyend="592"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713" prot="public" static="no" strong="no">
        <type></type>
        <name>_pkcs8_pubkey_ec_fields</name>
        <enumvalue id="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713a9dd496e2006a74ddb91514be72956d58" prot="public">
          <name>PKCS8_PUBLIC_EC_CURVEID</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>reference to EC Curve ID in <bold><ref refid="structcryptx__pkcs8__pubkey" kindref="compound">cryptx_pkcs8_pubkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713a9e93917030064537caebab410d031b61" prot="public">
          <name>PKCS8_PUBLIC_EC_PUBKEY</name>
          <briefdescription>
<para>reference to ECPoint public key in <bold><ref refid="structcryptx__pkcs8__pubkey" kindref="compound">cryptx_pkcs8_pubkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713a28b860237672a83cd9752fb68b2405c1" prot="public">
          <name>PKCS8_PUBLIC_EC_FIELDS</name>
          <briefdescription>
<para>number of EC fields in structure (for enumeration) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="594" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="594" bodyend="598"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0a" prot="public" static="no" strong="no">
        <type></type>
        <name>_pkcs8_privkey_rsa_fields</name>
        <enumvalue id="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa5584b1029e0bc1af75363cb9d63e3c4a" prot="public">
          <name>PKCS8_PRIVATE_RSA_VERSION</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>reference to RSA version in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa1686e70a66edcd9b031141224fd4781a" prot="public">
          <name>PKCS8_PRIVATE_RSA_MODULUS</name>
          <briefdescription>
<para>reference to private modulus in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aadfd61e7eb3644df96f0b622b54d2f56f" prot="public">
          <name>PKCS8_PRIVATE_RSA_PUBEXPONENT</name>
          <briefdescription>
<para>reference to public exponent in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aad13c0c49850208fc68787d9d772ae24d" prot="public">
          <name>PKCS8_PRIVATE_RSA_EXPONENT</name>
          <briefdescription>
<para>reference to private exponent in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa9e9e55db2d9f5cb138a6b92b7815e4af" prot="public">
          <name>PKCS8_PRIVATE_RSA_P</name>
          <briefdescription>
<para>reference to P in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa791398b293713cc97345586e6de4d19e" prot="public">
          <name>PKCS8_PRIVATE_RSA_Q</name>
          <briefdescription>
<para>reference to Q in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa295070fec0c4abed358a0c345e5beb8e" prot="public">
          <name>PKCS8_PRIVATE_RSA_EXP1</name>
          <briefdescription>
<para>reference to Exp1 in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa4cc42d0a99e3cd6bdea2490362d3e43a" prot="public">
          <name>PKCS8_PRIVATE_RSA_EXP2</name>
          <briefdescription>
<para>reference to Exp2 in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa511494ca2148567f6a536083051c3dec" prot="public">
          <name>PKCS8_PRIVATE_RSA_COEFF</name>
          <briefdescription>
<para>reference to Coefficient in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa6d75b466f683aa54745b97230a37af45" prot="public">
          <name>PKCS8_PRIVATE_RSA_FIELDS</name>
          <briefdescription>
<para>number of RSA fields in structure (for enumeration) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="600" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="600" bodyend="611"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a5d7e076a5245635513053f3b31780c4e" prot="public" static="no" strong="no">
        <type></type>
        <name>_pkcs8_privkey_ec_fields</name>
        <enumvalue id="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea0c38c9582cd6895f0b51f2d9804772ba" prot="public">
          <name>PKCS8_PRIVATE_EC_CURVEID</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>reference to EC Curve ID in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea58dab3856acea3ad7c102e9894632991" prot="public">
          <name>PKCS8_PRIVATE_EC_VERSION</name>
          <briefdescription>
<para>reference to EC version in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ead6fc732dbd3a40cbbee17b0e0b5d9f71" prot="public">
          <name>PKCS8_PRIVATE_EC_PRIVKEY</name>
          <briefdescription>
<para>reference to private key in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea6bd25359cadd26de1d0d03ffb5aa79af" prot="public">
          <name>PKCS8_PRIVATE_EC_PUBKEY</name>
          <briefdescription>
<para>reference to public key in <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea9790db7a5e3d888caa4b576d6a79c1c1" prot="public">
          <name>PKCS8_PRIVATE_EC_FIELDS</name>
          <briefdescription>
<para>number of EC fields in structure (for enumeration) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="613" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="613" bodyend="619"/>
      </memberdef>
      <memberdef kind="enum" id="cryptx_8h_1a18ac3fbeea8ba7f7931796bd253131a4" prot="public" static="no" strong="no">
        <type></type>
        <name>pkcs_error_t</name>
        <enumvalue id="cryptx_8h_1a18ac3fbeea8ba7f7931796bd253131a4ae3e1b5568f600f599b65921673580a3b" prot="public">
          <name>PKCS_OK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a18ac3fbeea8ba7f7931796bd253131a4ad51855979f8e263227e0fba2132d462f" prot="public">
          <name>PKCS_INVALID_ARG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a18ac3fbeea8ba7f7931796bd253131a4a31909947f498b908e7709718c2ddf96f" prot="public">
          <name>PKCS_UNSUPPORTED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="cryptx_8h_1a18ac3fbeea8ba7f7931796bd253131a4ad98753e06ce91e41e842d85a5c7b139b" prot="public">
          <name>PKCS_INVALID_DATA</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines response codes returned by the PKCS8 API. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="622" column="1" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="622" bodyend="627"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="cryptx_8h_1aab2d5399c85cf36a966ac2a7005e5a43" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t cryptx_pkcs8_objectid_rsa[]</definition>
        <argsstring>[]</argsstring>
        <name>cryptx_pkcs8_objectid_rsa</name>
        <briefdescription>
<para>Encoded Object Identifier for RSA. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="654" column="22" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="654" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cryptx_8h_1aeb9b47848c145dee3966d1ecf595f4c6" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t cryptx_pkcs8_objectid_ec[]</definition>
        <argsstring>[]</argsstring>
        <name>cryptx_pkcs8_objectid_ec</name>
        <briefdescription>
<para>Encoded Object Identifier for ECC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="656" column="22" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cryptx_8h_1a3d28abd7e3f95b204709ff90f1329f86" prot="public" static="yes" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t cryptx_pkcs8_curveid_sect233k1[]</definition>
        <argsstring>[]</argsstring>
        <name>cryptx_pkcs8_curveid_sect233k1</name>
        <briefdescription>
<para>Encoded Object Identifier for SECT233k1. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="658" column="22" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cryptx_8h_1a791c9616d63340d5f3d55673abefd768" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t x[30]</definition>
        <argsstring>[30]</argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="0" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="0" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="cryptx_8h_1a9671c45fbc76e3760ed5b891992cf94a" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t y[30]</definition>
        <argsstring>[30]</argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="1" column="9" bodyfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" bodystart="1" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cryptx_8h_1a70b79d7bbba52b64700123ab77ab5a28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_hash_init</definition>
        <argsstring>(struct cryptx_hash_ctx *context, uint8_t hash_alg)</argsstring>
        <name>cryptx_hash_init</name>
        <param>
          <type>struct <ref refid="structcryptx__hash__ctx" kindref="compound">cryptx_hash_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Initializes a context for a specific hash algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a ontext. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if hash initialization succeeded, <bold>false</bold> if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="108" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="108" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a0df23ee0aff04b31db05f5175bfe63a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hash_update</definition>
        <argsstring>(struct cryptx_hash_ctx *context, const void *data, size_t len)</argsstring>
        <name>cryptx_hash_update</name>
        <param>
          <type>struct <ref refid="structcryptx__hash__ctx" kindref="compound">cryptx_hash_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Updates the context for a given block of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a block of data to hash.. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <bold>data</bold> to hash. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="116" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="116" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a1444bb4124409dbae8088ffbc9830ee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hash_digest</definition>
        <argsstring>(struct cryptx_hash_ctx *context, void *digest)</argsstring>
        <name>cryptx_hash_digest</name>
        <param>
          <type>struct <ref refid="structcryptx__hash__ctx" kindref="compound">cryptx_hash_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>digest</declname>
        </param>
        <briefdescription>
<para>Output digest for current context (preserves state). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>digest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to write digest to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="123" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="123" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a661281f90257c5e21dbb53654ba505e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hash_mgf1</definition>
        <argsstring>(const void *data, size_t datalen, void *outbuf, size_t outlen, uint8_t hash_alg)</argsstring>
        <name>cryptx_hash_mgf1</name>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>datalen</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>outbuf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>outlen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Computes a digest of arbitrary length for a given block of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data to hash. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>datalen</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of <bold>data</bold> to hash. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write digest to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to write to <bold>outbuf</bold>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="133" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="133" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a21c854c0bcb6f7497516847e080c27c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_hmac_init</definition>
        <argsstring>(struct cryptx_hmac_ctx *context, const void *key, size_t keylen, uint8_t hash_alg)</argsstring>
        <name>cryptx_hmac_init</name>
        <param>
          <type>struct <ref refid="structcryptx__hmac__ctx" kindref="compound">cryptx_hmac_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Initializes a context for a specific HMAC algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a key used to initialize the HMAC state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the <bold>key</bold>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if initialized succeeded, <bold>false</bold> if failed. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="159" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="159" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a1ab7dcd49b5df0f9e697a5e14939d186" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hmac_update</definition>
        <argsstring>(struct cryptx_hmac_ctx *context, const void *data, size_t len)</argsstring>
        <name>cryptx_hmac_update</name>
        <param>
          <type>struct <ref refid="structcryptx__hmac__ctx" kindref="compound">cryptx_hmac_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Updates the context for a given block of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an HMAC-state context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a block of data to hash.. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the <bold>data</bold> to hash. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="169" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="169" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a710f6c433fa3e6d07c602a0fca5952d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hmac_digest</definition>
        <argsstring>(struct cryptx_hmac_ctx *context, void *digest)</argsstring>
        <name>cryptx_hmac_digest</name>
        <param>
          <type>struct <ref refid="structcryptx__hmac__ctx" kindref="compound">cryptx_hmac_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>digest</declname>
        </param>
        <briefdescription>
<para>Output digest for current context (preserves state). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>digest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to write digest to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="176" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="176" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a428a5da208ae3b55b73f4e05242148e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hmac_pbkdf2</definition>
        <argsstring>(const char *password, size_t passlen, const void *salt, size_t saltlen, uint8_t *key, size_t keylen, size_t rounds, uint8_t hash_alg)</argsstring>
        <name>cryptx_hmac_pbkdf2</name>
        <param>
          <type>const char *</type>
          <declname>password</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>passlen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>salt</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>saltlen</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rounds</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Derives a key from a password, salt, and round count. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>password</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a string containing the password. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte length of the password. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>salt</parametername>
</parameternamelist>
<parameterdescription>
<para>A psuedo-random string to use in each round of key derivation. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>saltlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte length of the salt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rounds</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of times to iterate the HMAC function per block of <bold>keylen</bold>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write key to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of <bold>key</bold> to generate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="189" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="189" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a2537f98ad431d23589334bf33889ebb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_bytes_tostring</definition>
        <argsstring>(const void *buf, size_t len, char *hexstr)</argsstring>
        <name>cryptx_bytes_tostring</name>
        <param>
          <type>const void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>hexstr</declname>
        </param>
        <briefdescription>
<para>Convert a bytearray to its hexstring representation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to bytearray to convert. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Byte length of <bold>digest</bold>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hexstr</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to write the output hex string to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="204" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="204" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ae4aaaf994e1f56c7e1e7641458f74a85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_bytes_fromstring</definition>
        <argsstring>(void *buf, const char *hexstr)</argsstring>
        <name>cryptx_bytes_fromstring</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hexstr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="208" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="208" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a71cc951ac0995a56ea485075235fb3f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_bytes_rcopy</definition>
        <argsstring>(void *dest, const void *src, size_t len)</argsstring>
        <name>cryptx_bytes_rcopy</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Copies <bold>len</bold> bytes from <bold>src</bold> to <bold>dest</bold> while reversing the byte order. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to write bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to read bytes from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to read. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="216" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="216" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1afd0c8d1f7d77d3bd2739561996594ff4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_bytes_reverse</definition>
        <argsstring>(void *buf, size_t len)</argsstring>
        <name>cryptx_bytes_reverse</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Reverses the byte order of a buffer in-place. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to reverse. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="223" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="223" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ae27b2f138550c6d08a539809f4bc27a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_bytes_compare</definition>
        <argsstring>(const void *buf1, const void *buf2, size_t len)</argsstring>
        <name>cryptx_bytes_compare</name>
        <param>
          <type>const void *</type>
          <declname>buf1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>buf2</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Compare two bytearrays using a <bold>constant-time</bold> algorithm. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf1</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to first buffer to compare. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf2</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to second buffer to compare. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of bytes to compare. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> if the buffers are equal, <bold>false</bold> if not equal. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="232" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="232" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a61b09a810e766ef1d2ff00c85ece63f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t cryptx_csrand_get</definition>
        <argsstring>(void)</argsstring>
        <name>cryptx_csrand_get</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Returns a securely psuedo-random 32-bit integer. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A securely psuedo-random 32-bit integer. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="239" column="10" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="239" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a8c550bae2fddbf8a04655325ba2c9e8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_csrand_fill</definition>
        <argsstring>(void *buffer, size_t size)</argsstring>
        <name>cryptx_csrand_fill</name>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Fills a buffer with securely pseduo-random bytes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to fill with random bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the buffer to fill. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><bold>true</bold> on success, <bold>false</bold> on failure. </para>
</simplesect>
<simplesect kind="return"><para><bold>buffer</bold> filled to size. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="248" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="248" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ab96be7c9efe78883e6b81bb7d66c7e45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_init</definition>
        <argsstring>(struct cryptx_aes_ctx *context, const void *key, size_t keylen, const void *iv, size_t ivlen, uint8_t cipher_mode, uint24_t flags)</argsstring>
        <name>cryptx_aes_init</name>
        <param>
          <type>struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>iv</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ivlen</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>cipher_mode</declname>
        </param>
        <param>
          <type>uint24_t</type>
          <declname>flags</declname>
        </param>
        <briefdescription>
<para>Initializes a stateful AES cipher context to be used for encryption or decryption. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an AES cipher context to initialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an 128, 192, or 256 bit key to load into the AES context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>The size, in bytes, of the <bold>key</bold> to load. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iv</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to Initialization vector, a buffer equal to the block size filled with random bytes. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ivlen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the initalization vector. Capped at 16 bytes. Certain cipher modes have different recommendations. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cipher_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Operational mode of the cipher to initialize. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>A series of flags to configure the AES context with. Use the provided <bold>defaults</bold> enumeration or the <bold>flagset</bold> macros above. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>aes_error_t</bold> indicating the status of the AES operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="326" column="13" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="326" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a571d4b9eb0fe3d069b10492025e47fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_encrypt</definition>
        <argsstring>(const struct cryptx_aes_ctx *context, const void *plaintext, size_t len, void *ciphertext)</argsstring>
        <name>cryptx_aes_encrypt</name>
        <param>
          <type>const struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ciphertext</declname>
        </param>
        <briefdescription>
<para>Performs a stateful AES encryption of an arbitrary length of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an AES cipher context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data to encrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data at <bold>plaintext</bold> to encrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ciphertext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write encrypted data to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>aes_error_t</bold> indicating the status of the AES operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="342" column="13" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="342" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ab5cf162f80d83c86c9dbba9aa866b289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_decrypt</definition>
        <argsstring>(const struct cryptx_aes_ctx *context, const void *ciphertext, size_t len, void *plaintext)</argsstring>
        <name>cryptx_aes_decrypt</name>
        <param>
          <type>const struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>ciphertext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>plaintext</declname>
        </param>
        <briefdescription>
<para>Performs a stateful AES decryption of an arbitrary length of data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to AES cipher context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ciphertext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to data to decrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of data at <bold>ciphertext</bold> to decrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write decryped data to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>aes_error_t</bold> indicating the status of the AES operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="355" column="13" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="355" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a3d55233d4178e3f6c6b96272fda56ae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_update_aad</definition>
        <argsstring>(struct cryptx_aes_ctx *context, const void *aad, size_t aad_len)</argsstring>
        <name>cryptx_aes_update_aad</name>
        <param>
          <type>struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>aad_len</declname>
        </param>
        <briefdescription>
<para>Updates the cipher context for given AAD (Additional Authenticated Data). </para>
        </briefdescription>
        <detaileddescription>
<para>AAD is data that is only authenticated, not encrypted. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an AES context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to additional authenticated data segment. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of additional data segment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>aes_error_t</bold> indicating the status of the AES operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="368" column="13" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="368" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a7aaae6b33efe97c579d24729680eda79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref></type>
        <definition>aes_error_t cryptx_aes_digest</definition>
        <argsstring>(struct cryptx_aes_ctx *context, uint8_t *digest)</argsstring>
        <name>cryptx_aes_digest</name>
        <param>
          <type>struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>digest</declname>
        </param>
        <briefdescription>
<para>Returns the current authentication tag for data parsed so far. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an AES context </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>digest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to output digest to. Must be at least 16 bytes large. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>aes_error_t</bold> indicating the status of the AES operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="377" column="13" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="377" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a69437bd1ca1d4fe40dc50d91da7c1be4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_aes_verify</definition>
        <argsstring>(const struct cryptx_aes_ctx *context, const void *aad, size_t aad_len, const void *ciphertext, size_t ciphertext_len, uint8_t *tag)</argsstring>
        <name>cryptx_aes_verify</name>
        <param>
          <type>const struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>context</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>aad</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>aad_len</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>ciphertext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>ciphertext_len</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
<para>Parses the specified AAD and ciphertext and then compares the output auth tag to an expected auth tag. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>context</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an AES context. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to associated data to authenticate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aad_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of associated data to authenticate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ciphertext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to ciphertext to authenticate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ciphertext_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of ciphertext to authenticate. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to expected auth tag to validate against. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE if authentication tag matches expected, FALSE otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="391" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="391" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1aa4f5ae1eb3d9636c20dec64503a4896b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294" kindref="member">rsa_error_t</ref></type>
        <definition>rsa_error_t cryptx_rsa_encrypt</definition>
        <argsstring>(const void *msg, size_t msglen, const void *pubkey, size_t keylen, void *ciphertext, uint8_t oaep_hash_alg)</argsstring>
        <name>cryptx_rsa_encrypt</name>
        <param>
          <type>const void *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>msglen</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>pubkey</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>keylen</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>ciphertext</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>oaep_hash_alg</declname>
        </param>
        <briefdescription>
<para>Encrypts a message using the given RSA public key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a message to encrypt using RSA. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>msglen</parametername>
</parameternamelist>
<parameterdescription>
<para>The byte length of the <bold>msg</bold>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a public key to use for encryption. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keylen</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the public key (modulus) to encrypt with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ciphertext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer a buffer to write the ciphertext to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oaep_hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The numeric ID of the hashing algorithm to use within OAEP encoding. See <bold>cryptx_hash_algorithms</bold>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>rsa_error_t</bold> indicating the status of the RSA operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="421" column="13" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="421" declcolumn="13"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ace17d744e36edae96bea85ccfa7c18f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" kindref="member">ec_error_t</ref></type>
        <definition>ec_error_t cryptx_ec_keygen</definition>
        <argsstring>(uint8_t *privkey, uint8_t *pubkey)</argsstring>
        <name>cryptx_ec_keygen</name>
        <param>
          <type>uint8_t *</type>
          <declname>privkey</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>pubkey</declname>
        </param>
        <briefdescription>
<para>Generates a pair of public/private keys over SECT233k1. </para>
        </briefdescription>
        <detaileddescription>
<para>These keys are valid for ECDH and ECDSA. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>privkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to EC private key buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to EC public key buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A random 29-byte EC private key and associated public key. </para>
</simplesect>
<simplesect kind="return"><para>A response code indicating the return status of this function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="457" column="12" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="457" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a4057940333f4f8f56b8ccf1d24db21ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" kindref="member">ec_error_t</ref></type>
        <definition>ec_error_t cryptx_ec_secret</definition>
        <argsstring>(const uint8_t *privkey, const uint8_t *rpubkey, uint8_t *secret)</argsstring>
        <name>cryptx_ec_secret</name>
        <param>
          <type>const uint8_t *</type>
          <declname>privkey</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>rpubkey</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>secret</declname>
        </param>
        <briefdescription>
<para>Computes a secret given a private key and remote public key using the elliptic curve variant of the <bold>diffie-hellman</bold> key exchange algorithm (ECDH). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>privkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to local private key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rpubkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to remote public key. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>secret</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write shared secret to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>ECDH</bold> secret for use with a symmetric encryption algorithm. </para>
</simplesect>
<simplesect kind="return"><para>A response code indicating the return status of this function. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="468" column="12" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="468" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a9186c5bce6ceb6062ce9c01355f4346e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" kindref="member">asn1_error_t</ref></type>
        <definition>asn1_error_t cryptx_asn1_decode</definition>
        <argsstring>(void *parse_begin, size_t parse_len, uint8_t index, struct cryptx_asn1_object *object)</argsstring>
        <name>cryptx_asn1_decode</name>
        <param>
          <type>void *</type>
          <declname>parse_begin</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>parse_len</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>struct <ref refid="structcryptx__asn1__object" kindref="compound">cryptx_asn1_object</ref> *</type>
          <declname>object</declname>
        </param>
        <briefdescription>
<para>Decodes the ASN.1 data at the given address. </para>
        </briefdescription>
        <detaileddescription>
<para>Seeks to an element from the front of the data. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parse_begin</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a block of ASN.1-encoded data to parse. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>parse_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of ASN.1-encoded block to parse. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Return <bold>index-th</bold> encoded element of current tree level. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>object</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to an <bold>asn1_object</bold> to populate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An <bold>asn1_error_t</bold> indicating the status of the operation. If <bold>index</bold> is past the end of the data, <bold>ASN1_END_OF_FILE</bold> is returned. </para>
</simplesect>
<simplesect kind="note"><para>Function does not recurse the ASN.1 tree structure automatically. It parses all elements at the tree level determined by <bold>parse_begin</bold> and <bold>parse_len</bold>. You may recurse manually by checking the value of <bold><ref refid="cryptx_8h_1ab45e9d12f4f83f53441e72757c0717ea" kindref="member">cryptx_asn1_getform()</ref></bold> on the last returned <bold>object-&gt;tag</bold> and then calling <bold><ref refid="cryptx_8h_1a9186c5bce6ceb6062ce9c01355f4346e" kindref="member">cryptx_asn1_decode()</ref></bold> with <bold>object-&gt;data</bold> as <bold>parse_begin</bold> and <bold>object-&gt;len</bold> as <bold>parse_len</bold>. </para>
</simplesect>
<simplesect kind="note"><para>If you are using this function to decode a PKCS#8 structure for use with this library, use the PKCS#8 wrapper module instead. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="553" column="14" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="553" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a3e216a54646a3f7d04c37102905ef850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cryptx_base64_encode</definition>
        <argsstring>(void *dest, const void *src, size_t len)</argsstring>
        <name>cryptx_base64_encode</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Converts an octet-encoded byte stream into a sextet-encoded byte stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to output sextet-encoded data stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to input octet-encoded data stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of octet-encoded data stream. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Length of output sextet. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="573" column="8" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="573" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a28db41653bf7ba5ef8bfcef425343722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cryptx_base64_decode</definition>
        <argsstring>(void *dest, const void *src, size_t len)</argsstring>
        <name>cryptx_base64_decode</name>
        <param>
          <type>void *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Converts a sextet-encoded byte stream into a octet-encoded byte stream. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to output octet-encoded data stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to input sextet-encoded data stream. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of sextet-encoded data stream. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Length of output octet. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="582" column="8" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="582" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1aa187a2f43e4b3524082b0e8b649ae767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcryptx__pkcs8__pubkey" kindref="compound">cryptx_pkcs8_pubkey</ref> *</type>
        <definition>struct cryptx_pkcs8_pubkey * cryptx_pkcs8_import_publickey</definition>
        <argsstring>(void *data, size_t len, void *(*malloc)(size_t))</argsstring>
        <name>cryptx_pkcs8_import_publickey</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *(*)(size_t)</type>
          <declname>malloc</declname>
        </param>
        <briefdescription>
<para>Attempts to import a PKCS#8-encoded public key for RSA or ECC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to PKCS#8-encoded key data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of key data to import. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>malloc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to toolchain <bold>malloc</bold> function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A malloc&apos;d <bold><ref refid="structcryptx__pkcs8__pubkey" kindref="compound">cryptx_pkcs8_pubkey</ref></bold> structure populated with key metadata. </para>
</simplesect>
<simplesect kind="return"><para>NULL if arguments invalid or allocation failure. </para>
</simplesect>
<simplesect kind="return"><para>The <bold>error</bold> field of the structure set to <bold>True</bold> if a deserialization error occurred. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="669" column="26" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="669" declcolumn="26"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a1d8ba96af68c8fe00b1aed438fff3495" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref> *</type>
        <definition>struct cryptx_pkcs8_privkey * cryptx_pkcs8_import_privatekey</definition>
        <argsstring>(void *data, size_t len, void *(*malloc)(size_t))</argsstring>
        <name>cryptx_pkcs8_import_privatekey</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *(*)(size_t)</type>
          <declname>malloc</declname>
        </param>
        <briefdescription>
<para>Attempts to import a PKCS#8-encoded private key for RSA or ECC. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to PKCS#8-encoded key data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of key data to import. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>malloc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to toolchain <bold>malloc</bold> function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A malloc&apos;d <bold><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref></bold> structure populated with key metadata. </para>
</simplesect>
<simplesect kind="return"><para>NULL if arguments invalid or allocation failure. </para>
</simplesect>
<simplesect kind="return"><para>The <bold>error</bold> field of the structure set to <bold>True</bold> if a deserialization error occurred. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="681" column="27" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="681" declcolumn="27"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a78fb5286dbb1dd4443ca8fbc33005750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_pkcs8_free_publickey</definition>
        <argsstring>(struct cryptx_pkcs8_pubkey *pk, void(*free)(void *))</argsstring>
        <name>cryptx_pkcs8_free_publickey</name>
        <param>
          <type>struct <ref refid="structcryptx__pkcs8__pubkey" kindref="compound">cryptx_pkcs8_pubkey</ref> *</type>
          <declname>pk</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>free</declname>
        </param>
        <briefdescription>
<para>Erases a PKCS#8 public key structure returned by <bold>cryptx_pkcs8_import_publickey</bold> and then frees the allocated memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pk</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a PKCS#8 public key structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to toolchain <bold>free</bold> function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="689" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="689" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a793f8cb12a267c4c2cff1bcc494f2de3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_pkcs8_free_privatekey</definition>
        <argsstring>(struct cryptx_pkcs8_privkey *pk, void(*free)(void *))</argsstring>
        <name>cryptx_pkcs8_free_privatekey</name>
        <param>
          <type>struct <ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref> *</type>
          <declname>pk</declname>
        </param>
        <param>
          <type>void(*)(void *)</type>
          <declname>free</declname>
        </param>
        <briefdescription>
<para>Erases a PKCS#8 private key structure returned by <bold>cryptx_pkcs8_import_privatekey</bold> and then frees the allocated memory. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pk</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a PKCS#8 private key structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>free</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to toolchain <bold>free</bold> function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="696" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="696" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1aa26dcd5f7c0f1f679c91268bc5b69455" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hazmat_aes_ecb_encrypt</definition>
        <argsstring>(const void *block_in, void *block_out, struct cryptx_aes_ctx *ks)</argsstring>
        <name>cryptx_hazmat_aes_ecb_encrypt</name>
        <param>
          <type>const void *</type>
          <declname>block_in</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>block_out</declname>
        </param>
        <param>
          <type>struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>ks</declname>
        </param>
        <briefdescription>
<para>AES-ECB mode single block encryption. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to block of data to encrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write block of encrypted data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ks</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to AES key schedule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>ECB mode is insecure. Use this function as a constructor for other cipher modes, not standalone. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="708" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="708" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a705b398f84e2020d762a0ce03c90bd90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hazmat_aes_ecb_decrypt</definition>
        <argsstring>(const void *block_in, void *block_out, struct cryptx_aes_ctx *ks)</argsstring>
        <name>cryptx_hazmat_aes_ecb_decrypt</name>
        <param>
          <type>const void *</type>
          <declname>block_in</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>block_out</declname>
        </param>
        <param>
          <type>struct <ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref> *</type>
          <declname>ks</declname>
        </param>
        <briefdescription>
<para>AES-ECB mode single block decryption. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>block_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to block of data to decrypt. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>block_out</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write block of decrypted data. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ks</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to AES key schedule. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>ECB mode is insecure. Use this function as a constructor for other cipher modes, not standalone. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="719" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="719" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a686d9781ff0de6cf06424df197ce6e1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_hazmat_rsa_oaep_encode</definition>
        <argsstring>(const void *plaintext, size_t len, void *encoded, size_t modulus_len, const uint8_t *auth, uint8_t hash_alg)</argsstring>
        <name>cryptx_hazmat_rsa_oaep_encode</name>
        <param>
          <type>const void *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>encoded</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>modulus_len</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>auth</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Optimal Asymmetric Encryption Padding v2.2 Encoder. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to block of data to encode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of plaintext to encode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>encoded</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write encoded output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>modulus_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of modulus to encode for (ex: length of RSA public modulus). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auth</parametername>
</parameternamelist>
<parameterdescription>
<para>An optional string to include in the encoding (NULL to omit). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>Algorithm ID of the hash to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on successful encoding, False on error. </para>
</simplesect>
<simplesect kind="note"><para>An error returned from the encoder usually is related to the size of plaintext. Maximum plaintext length for encoding is the length of the modulus minus twice the length of the selected hash digest minus two more padding bytes. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="736" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="736" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ab367fc9a33e00bee5e9a9f8df5f2a697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool cryptx_hazmat_rsa_oaep_decode</definition>
        <argsstring>(const void *encoded, size_t len, void *plaintext, const uint8_t *auth, uint8_t hash_alg)</argsstring>
        <name>cryptx_hazmat_rsa_oaep_decode</name>
        <param>
          <type>const void *</type>
          <declname>encoded</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>plaintext</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>auth</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>hash_alg</declname>
        </param>
        <briefdescription>
<para>Optimal Asymmetric Encryption Padding v2.2 Decoder. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encoded</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to block of data to decode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of plaintext to encode. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plaintext</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to buffer to write decoded output. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>auth</parametername>
</parameternamelist>
<parameterdescription>
<para>String included in the encoding (NULL to omit). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash_alg</parametername>
</parameternamelist>
<parameterdescription>
<para>Algorithm ID of the hash to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True on successful decoding, False on error. </para>
</simplesect>
<simplesect kind="note"><para>An error returned from the decoder usually means the input did not appear to be valid OAEP-encoded data. OAEP 2.2-encoded data starts with the byte <emphasis>0x00</emphasis>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="754" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="754" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a70bc16d6ac300e87e3fc9c9847254bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hazmat_powmod</definition>
        <argsstring>(uint8_t size, uint8_t *restrict base, uint24_t exp, const uint8_t *restrict mod)</argsstring>
        <name>cryptx_hazmat_powmod</name>
        <param>
          <type>uint8_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>uint8_t *restrict</type>
          <declname>base</declname>
        </param>
        <param>
          <type>uint24_t</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>const uint8_t *restrict</type>
          <declname>mod</declname>
        </param>
        <briefdescription>
<para>Modular Exponentation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the modulus, in bytes. <emphasis>0</emphasis> is actually 256. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the base. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exp</parametername>
</parameternamelist>
<parameterdescription>
<para>Exponent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mod</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to modulus. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>This is timing-safe if run from normal speed memory. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="768" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="768" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1a71ea61142ac4e58af9d8b8c9d2d17685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref></type>
        <definition>struct cryptx_ecc_point cryptx_hazmat_ecc_point_add</definition>
        <argsstring>(cryptx_ecc_point *p, cryptx_ecc_point *q)</argsstring>
        <name>cryptx_hazmat_ecc_point_add</name>
        <param>
          <type><ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
<para>Elliptic Curve Point Addition over SECT233k1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to first point to add. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>q</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to second point to add. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Outputs in <bold>p</bold>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="768" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="768" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1ae4b37d491cbd4d5a16e0fb84d87b9270" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hazmat_ecc_point_double</definition>
        <argsstring>(cryptx_ecc_point *p)</argsstring>
        <name>cryptx_hazmat_ecc_point_double</name>
        <param>
          <type><ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Elliptic Curve Point Doubling over SECT233k1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to point to double. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Outputs in <bold>p</bold>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="792" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="792" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="cryptx_8h_1adf9bad66ca13288b71d9306d9c0a55e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void cryptx_hazmat_ecc_point_mul_scalar</definition>
        <argsstring>(cryptx_ecc_point *p, const uint8_t *scalar, size_t scalar_bit_width)</argsstring>
        <name>cryptx_hazmat_ecc_point_mul_scalar</name>
        <param>
          <type><ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>scalar</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>scalar_bit_width</declname>
        </param>
        <briefdescription>
<para>Elliptic Curve Scalar Multiplication over SECT233k1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to point to multiply. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to scalar. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scalar_bit_width</parametername>
</parameternamelist>
<parameterdescription>
<para>Length, in bits, of the scalar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Outputs in <bold>p</bold>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" line="801" column="6" declfile="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h" declline="801" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Industry-Standard Cryptography for the TI-84+ CE. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Anthony <emphasis>ACagliano</emphasis> Cagliano </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>cryptx_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="structcryptx__priv__hash__sha256__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__priv__hash__sha256__state" kindref="compound">cryptx_priv_hash_sha256_state</ref><sp/>{</highlight></codeline>
<codeline lineno="19" refid="structcryptx__priv__hash__sha256__state_1ace8bc5d62baf6635d34d334d676f70dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hash__sha256__state_1ace8bc5d62baf6635d34d334d676f70dc" kindref="member">data</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20" refid="structcryptx__priv__hash__sha256__state_1a39895682d65bc3717534cf819f1c3a5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hash__sha256__state_1a39895682d65bc3717534cf819f1c3a5e" kindref="member">datalen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21" refid="structcryptx__priv__hash__sha256__state_1aface79df571a3e926b521fe08fcc38cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hash__sha256__state_1aface79df571a3e926b521fe08fcc38cd" kindref="member">bitlen</ref>[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22" refid="structcryptx__priv__hash__sha256__state_1ac1ec56cb26c817b455f30a06002ea0ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structcryptx__priv__hash__sha256__state_1ac1ec56cb26c817b455f30a06002ea0ef" kindref="member">state</ref>[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal">};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="unioncryptx__hash__private__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__priv__hash__sha256__state" kindref="compound">cryptx_priv_hash_sha256_state</ref><sp/>sha256;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}<sp/><ref refid="unioncryptx__hash__private__h" kindref="compound">cryptx_hash_private_h</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="structcryptx__priv__hmac__sha256__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__priv__hmac__sha256__state" kindref="compound">cryptx_priv_hmac_sha256_state</ref><sp/>{</highlight></codeline>
<codeline lineno="36" refid="structcryptx__priv__hmac__sha256__state_1a76528b6828a8be3bf9aec6c60f52d9ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hmac__sha256__state_1a76528b6828a8be3bf9aec6c60f52d9ed" kindref="member">ipad</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37" refid="structcryptx__priv__hmac__sha256__state_1a2500321d12090b024ffa47c84d1fd4a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hmac__sha256__state_1a2500321d12090b024ffa47c84d1fd4a7" kindref="member">opad</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="38" refid="structcryptx__priv__hmac__sha256__state_1a211f5efbddeaf4f31dc6ce2183aab29a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hmac__sha256__state_1a211f5efbddeaf4f31dc6ce2183aab29a" kindref="member">data</ref>[64];<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="structcryptx__priv__hmac__sha256__state_1a08a4247ddd5ec7698e39d0179e281255" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hmac__sha256__state_1a08a4247ddd5ec7698e39d0179e281255" kindref="member">datalen</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="40" refid="structcryptx__priv__hmac__sha256__state_1a97047e014a3dcdd45fe2170667b39693" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__priv__hmac__sha256__state_1a97047e014a3dcdd45fe2170667b39693" kindref="member">bitlen</ref>[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="structcryptx__priv__hmac__sha256__state_1a15e182b571ba9a3f833aeb6cdc046859" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structcryptx__priv__hmac__sha256__state_1a15e182b571ba9a3f833aeb6cdc046859" kindref="member">state</ref>[8];<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal">};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="unioncryptx__hmac__private__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__priv__hmac__sha256__state" kindref="compound">cryptx_priv_hmac_sha256_state</ref><sp/>sha256;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}<sp/><ref refid="unioncryptx__hmac__private__h" kindref="compound">cryptx_hmac_private_h</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="structcryptx__aes__cbc__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__cbc__state" kindref="compound">cryptx_aes_cbc_state</ref><sp/>{<sp/>uint8_t<sp/>padding_mode;<sp/>};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="structcryptx__aes__ctr__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__ctr__state" kindref="compound">cryptx_aes_ctr_state</ref><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>counter_pos_start;<sp/>uint8_t<sp/>counter_len;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>last_block_stop;<sp/>uint8_t<sp/>last_block[16];<sp/>};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="structcryptx__aes__gcm__state" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__gcm__state" kindref="compound">cryptx_aes_gcm_state</ref><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>last_block_stop;<sp/>uint8_t<sp/>last_block[16];</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>ghash_key[16];</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>aad_cache[16];<sp/>uint8_t<sp/>auth_tag[16];<sp/>uint8_t<sp/>auth_j0[16];</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>aad_cache_len;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aad_len;<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ct_len;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>gcm_op;</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="unioncryptx__aes__private__h" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="78" refid="unioncryptx__aes__private__h_1ad7b64d4d23bbe6483c6a8f80e1fceff1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__gcm__state" kindref="compound">cryptx_aes_gcm_state</ref><sp/>gcm;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="unioncryptx__aes__private__h_1ab8d218d6589b9b07a4a306237e5eb157" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__cbc__state" kindref="compound">cryptx_aes_cbc_state</ref><sp/>ctr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80" refid="unioncryptx__aes__private__h_1ae1fc34b70eb382df03714488d599dfab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__ctr__state" kindref="compound">cryptx_aes_ctr_state</ref><sp/>cbc;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}<sp/><ref refid="unioncryptx__aes__private__h" kindref="compound">cryptx_aes_private_h</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="structcryptx__hash__ctx" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__hash__ctx" kindref="compound">cryptx_hash_ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="85" refid="structcryptx__hash__ctx_1ae1cc61f269fa5bbf1e8a36b9526c138a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(*<ref refid="structcryptx__hash__ctx_1ae1cc61f269fa5bbf1e8a36b9526c138a" kindref="member">init</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="structcryptx__hash__ctx_1abcba976dfec24f43bbd0af1f3c4abfeb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structcryptx__hash__ctx_1abcba976dfec24f43bbd0af1f3c4abfeb" kindref="member">update</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87" refid="structcryptx__hash__ctx_1a1bc11de9717a516b5c0d053121e9851d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structcryptx__hash__ctx_1a1bc11de9717a516b5c0d053121e9851d" kindref="member">digest</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88" refid="structcryptx__hash__ctx_1a6bceb7d80541e569377e5d3684fd1721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__hash__ctx_1a6bceb7d80541e569377e5d3684fd1721" kindref="member">digest_len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89" refid="structcryptx__hash__ctx_1a7ef6076b4878b27aea27fa71fc929a60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unioncryptx__hash__private__h" kindref="compound">cryptx_hash_private_h</ref><sp/><ref refid="structcryptx__hash__ctx_1a7ef6076b4878b27aea27fa71fc929a60" kindref="member">metadata</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal">};</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93b" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93b" kindref="member">cryptx_hash_algorithms</ref><sp/>{</highlight></codeline>
<codeline lineno="94" refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93bac7716785728694693ec29eccd5ffa0e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93bac7716785728694693ec29eccd5ffa0e1" kindref="member">SHA256</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95" refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93ba27028cc8b5d6f0a1cb3030c180019abc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a57f2f69b5ad395749c8604ca9f43f93ba27028cc8b5d6f0a1cb3030c180019abc" kindref="member">SHA1</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal">};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="cryptx_8h_1a4f1536bc045d8c6c6b1fd7502922c85a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_DIGESTLEN_SHA1<sp/><sp/><sp/><sp/>20<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="cryptx_8h_1a36616e8d1ed1e6270deadd0f8a4f096d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_DIGESTLEN_SHA256<sp/><sp/>32<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="cryptx_8h_1a70b79d7bbba52b64700123ab77ab5a28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a70b79d7bbba52b64700123ab77ab5a28" kindref="member">cryptx_hash_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__hash__ctx" kindref="compound">cryptx_hash_ctx</ref>*<sp/>context,<sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="cryptx_8h_1a0df23ee0aff04b31db05f5175bfe63a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a0df23ee0aff04b31db05f5175bfe63a2" kindref="member">cryptx_hash_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__hash__ctx" kindref="compound">cryptx_hash_ctx</ref>*<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="cryptx_8h_1a1444bb4124409dbae8088ffbc9830ee3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a1444bb4124409dbae8088ffbc9830ee3" kindref="member">cryptx_hash_digest</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__hash__ctx" kindref="compound">cryptx_hash_ctx</ref>*<sp/>context,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>digest);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="cryptx_8h_1a661281f90257c5e21dbb53654ba505e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a661281f90257c5e21dbb53654ba505e7" kindref="member">cryptx_hash_mgf1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>datalen,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>outbuf,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outlen,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"></codeline>
<codeline lineno="143" refid="structcryptx__hmac__ctx" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__hmac__ctx" kindref="compound">cryptx_hmac_ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="144" refid="structcryptx__hmac__ctx_1ad94b42907c9265c29e78b4438fcbeb30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(*<ref refid="structcryptx__hmac__ctx_1ad94b42907c9265c29e78b4438fcbeb30" kindref="member">init</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145" refid="structcryptx__hmac__ctx_1a02b8fb3b5fc0ba3c3e401cb8878b6b3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structcryptx__hmac__ctx_1a02b8fb3b5fc0ba3c3e401cb8878b6b3b" kindref="member">update</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146" refid="structcryptx__hmac__ctx_1ab65e64eac18efc47f8753e659d5f4d3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="structcryptx__hmac__ctx_1ab65e64eac18efc47f8753e659d5f4d3d" kindref="member">digest</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ctx,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>output);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147" refid="structcryptx__hmac__ctx_1ae379877c49e2e682861a975d9640607d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__hmac__ctx_1ae379877c49e2e682861a975d9640607d" kindref="member">digest_len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148" refid="structcryptx__hmac__ctx_1a005cd807fe6ffe5f87c41ea296457270" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unioncryptx__hmac__private__h" kindref="compound">cryptx_hmac_private_h</ref><sp/><ref refid="structcryptx__hmac__ctx_1a005cd807fe6ffe5f87c41ea296457270" kindref="member">metadata</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="cryptx_8h_1a21c854c0bcb6f7497516847e080c27c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a21c854c0bcb6f7497516847e080c27c3" kindref="member">cryptx_hmac_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__hmac__ctx" kindref="compound">cryptx_hmac_ctx</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="cryptx_8h_1a1ab7dcd49b5df0f9e697a5e14939d186" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a1ab7dcd49b5df0f9e697a5e14939d186" kindref="member">cryptx_hmac_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__hmac__ctx" kindref="compound">cryptx_hmac_ctx</ref>*<sp/>context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="cryptx_8h_1a710f6c433fa3e6d07c602a0fca5952d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a710f6c433fa3e6d07c602a0fca5952d7" kindref="member">cryptx_hmac_digest</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__hmac__ctx" kindref="compound">cryptx_hmac_ctx</ref>*<sp/>context,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>digest);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="cryptx_8h_1a428a5da208ae3b55b73f4e05242148e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a428a5da208ae3b55b73f4e05242148e8" kindref="member">cryptx_hmac_pbkdf2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>password,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>passlen,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>salt,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>saltlen,</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t*<sp/>key,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rounds,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="cryptx_8h_1a2537f98ad431d23589334bf33889ebb0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a2537f98ad431d23589334bf33889ebb0" kindref="member">cryptx_bytes_tostring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hexstr);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cryptx_bytes_fromstring(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hexstr);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="cryptx_8h_1a71cc951ac0995a56ea485075235fb3f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a71cc951ac0995a56ea485075235fb3f3" kindref="member">cryptx_bytes_rcopy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="cryptx_8h_1afd0c8d1f7d77d3bd2739561996594ff4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1afd0c8d1f7d77d3bd2739561996594ff4" kindref="member">cryptx_bytes_reverse</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="cryptx_8h_1ae27b2f138550c6d08a539809f4bc27a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1ae27b2f138550c6d08a539809f4bc27a1" kindref="member">cryptx_bytes_compare</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="cryptx_8h_1a61b09a810e766ef1d2ff00c85ece63f2" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="cryptx_8h_1a61b09a810e766ef1d2ff00c85ece63f2" kindref="member">cryptx_csrand_get</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="cryptx_8h_1a8c550bae2fddbf8a04655325ba2c9e8f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a8c550bae2fddbf8a04655325ba2c9e8f" kindref="member">cryptx_csrand_fill</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="structcryptx__aes__ctx" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref><sp/>{</highlight></codeline>
<codeline lineno="253" refid="structcryptx__aes__ctx_1aed50e8b9a653c1d20a0f324789ba8f84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint24_t<sp/><ref refid="structcryptx__aes__ctx_1aed50e8b9a653c1d20a0f324789ba8f84" kindref="member">keysize</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="254" refid="structcryptx__aes__ctx_1ab7564e0e5d2e1bd96b083f913eda1382" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structcryptx__aes__ctx_1ab7564e0e5d2e1bd96b083f913eda1382" kindref="member">round_keys</ref>[60];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255" refid="structcryptx__aes__ctx_1a3cc495f40d5a578c335fd03fe2772e4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__aes__ctx_1a3cc495f40d5a578c335fd03fe2772e4a" kindref="member">iv</ref>[16];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256" refid="structcryptx__aes__ctx_1a46d05a8ea39c183bd6f09d5fa95bfe25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__aes__ctx_1a46d05a8ea39c183bd6f09d5fa95bfe25" kindref="member">ciphermode</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257" refid="structcryptx__aes__ctx_1af6a8c176ebacf1d1fc6a25b1ec2ec6d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__aes__ctx_1af6a8c176ebacf1d1fc6a25b1ec2ec6d8" kindref="member">op_assoc</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258" refid="structcryptx__aes__ctx_1a019c3bf1d587684ca720951dc0f390c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unioncryptx__aes__private__h" kindref="compound">cryptx_aes_private_h</ref><sp/><ref refid="structcryptx__aes__ctx_1a019c3bf1d587684ca720951dc0f390c3" kindref="member">metadata</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal">};</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735" kindref="member">cryptx_aes_cipher_modes</ref><sp/>{</highlight></codeline>
<codeline lineno="262" refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735a6d022763befad1bcebcda6aa597c5e55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735a6d022763befad1bcebcda6aa597c5e55" kindref="member">CRYPTX_AES_CBC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="263" refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735a11d9f7cd52007c22ac9adbc45bf0442d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735a11d9f7cd52007c22ac9adbc45bf0442d" kindref="member">CRYPTX_AES_CTR</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735a0b6b05da37ef303c018bedd8cdbd4b6f" kindref="member">CRYPTX_AES_GCM</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265" refid="cryptx_8h_1a59334db45c5435de6ded4492dec34735a0b6b05da37ef303c018bedd8cdbd4b6f" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433" kindref="member">cryptx_aes_padding_schemes</ref><sp/>{</highlight></codeline>
<codeline lineno="268" refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a673ae2fee0bfe0a962717b3f673b9b7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a673ae2fee0bfe0a962717b3f673b9b7c" kindref="member">PAD_PKCS7</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a322c11c9058ef67073a3ff9bdcb9f759" kindref="member">PAD_DEFAULT</ref><sp/>=<sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a673ae2fee0bfe0a962717b3f673b9b7c" kindref="member">PAD_PKCS7</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a7566d9371110a1a24db62b145c901ad8" kindref="member">PAD_ISO2</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273" refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a7566d9371110a1a24db62b145c901ad8" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_KEYLEN_AES128<sp/><sp/>16<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_KEYLEN_AES192<sp/><sp/><sp/><sp/>24<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_KEYLEN_AES256<sp/><sp/><sp/><sp/>32<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_BLOCKSIZE_AES<sp/><sp/><sp/><sp/>16<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="cryptx_8h_1a747439e5980be6f5f9fa0c8fbb84655a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a747439e5980be6f5f9fa0c8fbb84655a" kindref="member">cryptx_aes_default_flags</ref><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>CRYPTX_AES_CBC_DEFAULTS<sp/>=<sp/>(<ref refid="cryptx_8h_1a66b61f98ab7705ff93bde98685ff3433a322c11c9058ef67073a3ff9bdcb9f759" kindref="member">PAD_DEFAULT</ref><sp/>|<sp/>0),</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/>CRYPTX_AES_CTR_DEFAULTS<sp/>=<sp/>(((0x0f<sp/>&amp;<sp/>(8))&lt;&lt;6)<sp/>|<sp/>((0x0f<sp/>&amp;<sp/>(8))&lt;&lt;2)<sp/>|<sp/>0),</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>CRYPTX_AES_GCM_DEFAULTS<sp/>=<sp/>(0)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="cryptx_8h_1a743d804a517a2e38d7f1224fdc8429f1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_aes_cbc_flagset(padding_mode)<sp/>\</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"><sp/><sp/>(padding_mode)<sp/>|<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="293" refid="cryptx_8h_1ab58fc147ecd3f0103486a14cf8254973" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_aes_ctr_flagset(nonce_len,<sp/>counter_len)<sp/>\</highlight></codeline>
<codeline lineno="294"><highlight class="preprocessor"><sp/><sp/>((0x0f<sp/>&amp;<sp/>(counter_len))&lt;&lt;6)<sp/>|<sp/>((0x0f<sp/>&amp;<sp/>(nonce_len))&lt;&lt;2)<sp/>|<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="cryptx_8h_1a7bffe1d673fd05c8e538d6169b12509f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_aes_gcm_flagset<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="cryptx_8h_1adf4062c77f37927bc0178872056602ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_aes_get_ciphertext_len(len)<sp/>\</highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor">((((len)%CRYPTX_BLOCKSIZE_AES)==0)<sp/>?<sp/>(len)<sp/>+<sp/>CRYPTX_BLOCKSIZE_AES<sp/>:<sp/>(((len)&gt;&gt;4)<sp/>+<sp/>1)&lt;&lt;4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="304" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="305" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaacf07636102724d2a7913911b0cf74b2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaacf07636102724d2a7913911b0cf74b2" kindref="member">AES_OK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="306" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda6d39b280aea9d8d62d126eef05d271db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda6d39b280aea9d8d62d126eef05d271db" kindref="member">AES_INVALID_ARG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaae5e9a591aeda666b0e425d9a05834e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaae5e9a591aeda666b0e425d9a05834e3" kindref="member">AES_INVALID_MSG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdad2b49ffeabf14aaf47db3d1bad18f84e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdad2b49ffeabf14aaf47db3d1bad18f84e" kindref="member">AES_INVALID_CIPHERMODE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="309" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda47bbd593fc3bdb7758a790bab86b41d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda47bbd593fc3bdb7758a790bab86b41d9" kindref="member">AES_INVALID_PADDINGMODE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="310" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaba928751c773ffa0287e47e1f86eae8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfdaba928751c773ffa0287e47e1f86eae8b" kindref="member">AES_INVALID_CIPHERTEXT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda95a9dcbf64347e3c6f2c50d05e8937f5" kindref="member">AES_INVALID_OPERATION</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="312" refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfda95a9dcbf64347e3c6f2c50d05e8937f5" refkind="member"><highlight class="normal">}<sp/><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="cryptx_8h_1ab96be7c9efe78883e6b81bb7d66c7e45" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/><ref refid="cryptx_8h_1ab96be7c9efe78883e6b81bb7d66c7e45" kindref="member">cryptx_aes_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>key,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>iv,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ivlen,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>cipher_mode,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint24_t<sp/>flags);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="342" refid="cryptx_8h_1a571d4b9eb0fe3d069b10492025e47fe0" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/><ref refid="cryptx_8h_1a571d4b9eb0fe3d069b10492025e47fe0" kindref="member">cryptx_aes_encrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>plaintext,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ciphertext);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="cryptx_8h_1ab5cf162f80d83c86c9dbba9aa866b289" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/><ref refid="cryptx_8h_1ab5cf162f80d83c86c9dbba9aa866b289" kindref="member">cryptx_aes_decrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ciphertext,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>plaintext);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="cryptx_8h_1a3d55233d4178e3f6c6b96272fda56ae0" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/><ref refid="cryptx_8h_1a3d55233d4178e3f6c6b96272fda56ae0" kindref="member">cryptx_aes_update_aad</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>aad,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aad_len);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="cryptx_8h_1a7aaae6b33efe97c579d24729680eda79" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1aeb2e64abcc4317e3143fb820f21c3bfd" kindref="member">aes_error_t</ref><sp/><ref refid="cryptx_8h_1a7aaae6b33efe97c579d24729680eda79" kindref="member">cryptx_aes_digest</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>context,<sp/>uint8_t<sp/>*digest);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="391" refid="cryptx_8h_1a69437bd1ca1d4fe40dc50d91da7c1be4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a69437bd1ca1d4fe40dc50d91da7c1be4" kindref="member">cryptx_aes_verify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>context,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>aad,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>aad_len,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ciphertext,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ciphertext_len,</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*tag);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"></codeline>
<codeline lineno="399" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="400" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a2cafdb683e1870a33bcb821420626cae" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a2cafdb683e1870a33bcb821420626cae" kindref="member">RSA_OK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="401" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294aab9ab38286c4180a1aa9f6e8df42e5db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294aab9ab38286c4180a1aa9f6e8df42e5db" kindref="member">RSA_INVALID_ARG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="402" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294aedeb18a96b96e292369abed5b2f0a271" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294aedeb18a96b96e292369abed5b2f0a271" kindref="member">RSA_INVALID_MSG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="403" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a843ec210de66176ef63e2d2b8ebdeb65" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a843ec210de66176ef63e2d2b8ebdeb65" kindref="member">RSA_INVALID_MODULUS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a43eadc89540121b902e02afabc7a7eb9" kindref="member">RSA_ENCODING_ERROR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="405" refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294a43eadc89540121b902e02afabc7a7eb9" refkind="member"><highlight class="normal">}<sp/><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294" kindref="member">rsa_error_t</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="cryptx_8h_1a265dcd336b31e2b95870d864c85cee2a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_RSA_MODULUS_MAX<sp/><sp/><sp/><sp/><sp/><sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="cryptx_8h_1aa4f5ae1eb3d9636c20dec64503a4896b" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1a0486449f609d0e485bad091a671d9294" kindref="member">rsa_error_t</ref><sp/><ref refid="cryptx_8h_1aa4f5ae1eb3d9636c20dec64503a4896b" kindref="member">cryptx_rsa_encrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>msg,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>msglen,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>pubkey,</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>keylen,</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ciphertext,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>oaep_hash_alg);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="cryptx_8h_1aba6c506b34f4d5e1ab991512f4368b8e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_KEYLEN_EC_PRIVKEY<sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="436" refid="cryptx_8h_1a46079c346c2ba0f2145e084a78c2cdab" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_KEYLEN_EC_PUBKEY<sp/><sp/><sp/><sp/><sp/>(CRYPTX_KEYLEN_EC_PRIVKEY&lt;&lt;1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="cryptx_8h_1afdb20067c07b76dac6331ed30d6cd1d6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CRYPTX_KEYLEN_EC_SECRET<sp/><sp/><sp/><sp/><sp/>CRYPTX_KEYLEN_EC_PUBKEY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>_ec_error<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>EC_OK,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>EC_INVALID_ARG,</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>EC_PRIVKEY_INVALID,</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>EC_RPUBKEY_INVALID</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}<sp/><ref refid="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" kindref="member">ec_error_t</ref>;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="cryptx_8h_1ace17d744e36edae96bea85ccfa7c18f9" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" kindref="member">ec_error_t</ref><sp/><ref refid="cryptx_8h_1ace17d744e36edae96bea85ccfa7c18f9" kindref="member">cryptx_ec_keygen</ref>(uint8_t<sp/>*privkey,<sp/>uint8_t<sp/>*pubkey);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="cryptx_8h_1a4057940333f4f8f56b8ccf1d24db21ea" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1a062440922f5fdc1f25c36f1116e8fc90" kindref="member">ec_error_t</ref><sp/><ref refid="cryptx_8h_1a4057940333f4f8f56b8ccf1d24db21ea" kindref="member">cryptx_ec_secret</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*privkey,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*rpubkey,<sp/>uint8_t<sp/>*secret);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518" kindref="member">cryptx_asn1_tags</ref><sp/>{</highlight></codeline>
<codeline lineno="473" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a0b4ee1817dddda0e7bb95f8c9c5262cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a0b4ee1817dddda0e7bb95f8c9c5262cc" kindref="member">ASN1_RESVD</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="474" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518afcacc079274ffffd6f8f30005a478309" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518afcacc079274ffffd6f8f30005a478309" kindref="member">ASN1_BOOLEAN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="475" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ace678073d12a09bd35a9d14ee843f4f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ace678073d12a09bd35a9d14ee843f4f6" kindref="member">ASN1_INTEGER</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a80cce3c21b5cf2a46abcf2d6559f16a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a80cce3c21b5cf2a46abcf2d6559f16a2" kindref="member">ASN1_BITSTRING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ad652362316e1126ce1f372ee9f42fdf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ad652362316e1126ce1f372ee9f42fdf7" kindref="member">ASN1_OCTETSTRING</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ab9aa4736a7a0bec12fda19d770381ade" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ab9aa4736a7a0bec12fda19d770381ade" kindref="member">ASN1_NULL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="479" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ab4e5697bbcfa96959f724b475deb438d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ab4e5697bbcfa96959f724b475deb438d" kindref="member">ASN1_OBJECTID</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518afa75f14a7646b0ee90575da2299c9303" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518afa75f14a7646b0ee90575da2299c9303" kindref="member">ASN1_OBJECTDESC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="481" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a2169eaf366165cd4dfe1aca66659935c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a2169eaf366165cd4dfe1aca66659935c" kindref="member">ASN1_INSTANCE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="482" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ade199cbdfbec356bae58bc468797580a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518ade199cbdfbec356bae58bc468797580a" kindref="member">ASN1_REAL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_ENUMERATED,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_EMBEDDEDPDV,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTF8STRING,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_RELATIVEOID,</highlight></codeline>
<codeline lineno="487" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a472ab1907cf28338eff639b8b5ab667c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518a472ab1907cf28338eff639b8b5ab667c" kindref="member">ASN1_SEQUENCE</ref><sp/>=<sp/>16,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="488" refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518aefff306acd391300face0a8080ad415e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a33270e9043784e6dcfdc9bf85ac05518aefff306acd391300face0a8080ad415e" kindref="member">ASN1_SET</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_NUMERICSTRING,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_PRINTABLESTRING,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_TELETEXSTRING,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_VIDEOTEXSTRING,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_IA5STRING,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UTCTIME,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_GENERALIZEDTIME,</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_GRAPHICSTRING,</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_VISIBLESTRING,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_GENERALSTRING,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_UNIVERSALSTRING,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_CHARSTRING,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>ASN1_BMPSTRING</highlight></codeline>
<codeline lineno="502"><highlight class="normal">};</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504" refid="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150" kindref="member">cryptx_asn1_classes</ref><sp/>{</highlight></codeline>
<codeline lineno="505" refid="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150a36845401ba730128d3078d9cd0730fe8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150a36845401ba730128d3078d9cd0730fe8" kindref="member">ASN1_UNIVERSAL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506" refid="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150a1c873115fb577a391d1af735307abc45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150a1c873115fb577a391d1af735307abc45" kindref="member">ASN1_APPLICATION</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="507" refid="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150a0e4e8c83e4929fe69855de5c8c7a34d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150a0e4e8c83e4929fe69855de5c8c7a34d3" kindref="member">ASN1_CONTEXTSPEC</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150ac51c7440728bfe2d94426d0ca4f3d895" kindref="member">ASN1_PRIVATE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="509" refid="cryptx_8h_1aba4305b9b1c62a999dd90fde584cd150ac51c7440728bfe2d94426d0ca4f3d895" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="cryptx_8h_1a19e2a0db96f6eed3d0d22fdf98e67b0c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a19e2a0db96f6eed3d0d22fdf98e67b0c" kindref="member">cryptx_asn1_forms</ref><sp/>{</highlight></codeline>
<codeline lineno="512" refid="cryptx_8h_1a19e2a0db96f6eed3d0d22fdf98e67b0ca916350d579d4895b1f843289b60b4572" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a19e2a0db96f6eed3d0d22fdf98e67b0ca916350d579d4895b1f843289b60b4572" kindref="member">ASN1_PRIMITIVE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="513" refid="cryptx_8h_1a19e2a0db96f6eed3d0d22fdf98e67b0cad03b2b41a6f3417a981a78ca887332e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a19e2a0db96f6eed3d0d22fdf98e67b0cad03b2b41a6f3417a981a78ca887332e6" kindref="member">ASN1_CONSTRUCTED</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal">};</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="structcryptx__asn1__object" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__asn1__object" kindref="compound">cryptx_asn1_object</ref><sp/>{</highlight></codeline>
<codeline lineno="518" refid="structcryptx__asn1__object_1a3674882b78676006b905c091fbe00742" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__asn1__object_1a3674882b78676006b905c091fbe00742" kindref="member">tag</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="519" refid="structcryptx__asn1__object_1a5501af47a59fe651c4259a50b2d8c7be" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcryptx__asn1__object_1a5501af47a59fe651c4259a50b2d8c7be" kindref="member">len</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="520" refid="structcryptx__asn1__object_1a83a03b4c814b7f437af6b7a032113380" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/>*<ref refid="structcryptx__asn1__object_1a83a03b4c814b7f437af6b7a032113380" kindref="member">data</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="521"><highlight class="normal">};</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="525" refid="cryptx_8h_1ae3c158bb1a0ff9721c09573f085b8b5a" refkind="member"><highlight class="preprocessor">#define<sp/>cryptx_asn1_gettag(tag)<sp/><sp/><sp/><sp/><sp/>((tag)<sp/>&amp;<sp/>0b111111)</highlight></codeline>
<codeline lineno="527" refid="cryptx_8h_1a770550928a870169fd4358b427cdcb95" refkind="member"><highlight class="preprocessor">#define<sp/>cryptx_asn1_getclass(tag)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((tag)&gt;&gt;6)<sp/>&amp;<sp/>0b11)</highlight></codeline>
<codeline lineno="529" refid="cryptx_8h_1ab45e9d12f4f83f53441e72757c0717ea" refkind="member"><highlight class="preprocessor">#define<sp/>cryptx_asn1_getform(tag)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((tag)&gt;&gt;5)<sp/>&amp;<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="533" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33ae8a5623b62dab851b0dc76048afc0b4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33ae8a5623b62dab851b0dc76048afc0b4a" kindref="member">ASN1_OK</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="534" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a434628c70562f3ab468d94e8eae7784d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a434628c70562f3ab468d94e8eae7784d" kindref="member">ASN1_END_OF_FILE</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="535" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33aa13d20ad819d43693d26c77b80fb4952" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33aa13d20ad819d43693d26c77b80fb4952" kindref="member">ASN1_INVALID_ARG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="536" refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a0101185f2109f1ba75ea2c4833664474" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33a0101185f2109f1ba75ea2c4833664474" kindref="member">ASN1_LEN_OVERFLOW</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="537"><highlight class="normal">}<sp/><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" kindref="member">asn1_error_t</ref>;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="553" refid="cryptx_8h_1a9186c5bce6ceb6062ce9c01355f4346e" refkind="member"><highlight class="normal"><ref refid="cryptx_8h_1a5a51cc1578f5502b17c42f16edb3fb33" kindref="member">asn1_error_t</ref><sp/><ref refid="cryptx_8h_1a9186c5bce6ceb6062ce9c01355f4346e" kindref="member">cryptx_asn1_decode</ref>(</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*parse_begin,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>parse_len,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>index,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__asn1__object" kindref="compound">cryptx_asn1_object</ref><sp/>*</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="cryptx_8h_1a9db7be56d66674980b5540cab9405cc7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_base64_get_encoded_len(len)<sp/><sp/><sp/><sp/><sp/><sp/>((len)<sp/>*<sp/>4<sp/>/<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="cryptx_8h_1a5629130707448f8475166398fb18a486" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>cryptx_base64_get_decoded_len(len)<sp/><sp/><sp/><sp/><sp/><sp/>((len)<sp/>*<sp/>3<sp/>/<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="cryptx_8h_1a3e216a54646a3f7d04c37102905ef850" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a3e216a54646a3f7d04c37102905ef850" kindref="member">cryptx_base64_encode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="cryptx_8h_1a28db41653bf7ba5ef8bfcef425343722" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a28db41653bf7ba5ef8bfcef425343722" kindref="member">cryptx_base64_decode</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6c" kindref="member">_pkcs8_pubkey_rsa_fields</ref><sp/>{</highlight></codeline>
<codeline lineno="589" refid="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6ca7320cdcf509bae5c2495a374a3cde7a6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6ca7320cdcf509bae5c2495a374a3cde7a6" kindref="member">PKCS8_PUBLIC_RSA_MODULUS</ref><sp/>=<sp/>0,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="590" refid="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6caca4c231faa043d396f93573484c97f06" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6caca4c231faa043d396f93573484c97f06" kindref="member">PKCS8_PUBLIC_RSA_EXPONENT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591" refid="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6ca45f3dfda11cb8657f506aafa1132c539" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6ca45f3dfda11cb8657f506aafa1132c539" kindref="member">PKCS8_PUBLIC_RSA_FIELDS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal">};</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594" refid="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713" kindref="member">_pkcs8_pubkey_ec_fields</ref><sp/>{</highlight></codeline>
<codeline lineno="595" refid="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713a9dd496e2006a74ddb91514be72956d58" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713a9dd496e2006a74ddb91514be72956d58" kindref="member">PKCS8_PUBLIC_EC_CURVEID</ref><sp/>=<sp/>0,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="596" refid="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713a9e93917030064537caebab410d031b61" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713a9e93917030064537caebab410d031b61" kindref="member">PKCS8_PUBLIC_EC_PUBKEY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713a28b860237672a83cd9752fb68b2405c1" kindref="member">PKCS8_PUBLIC_EC_FIELDS</ref><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="598" refid="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713a28b860237672a83cd9752fb68b2405c1" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600" refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0a" kindref="member">_pkcs8_privkey_rsa_fields</ref><sp/>{</highlight></codeline>
<codeline lineno="601" refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa5584b1029e0bc1af75363cb9d63e3c4a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa5584b1029e0bc1af75363cb9d63e3c4a" kindref="member">PKCS8_PRIVATE_RSA_VERSION</ref><sp/>=<sp/>0,<sp/><sp/></highlight></codeline>
<codeline lineno="602" refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa1686e70a66edcd9b031141224fd4781a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa1686e70a66edcd9b031141224fd4781a" kindref="member">PKCS8_PRIVATE_RSA_MODULUS</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="603" refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aadfd61e7eb3644df96f0b622b54d2f56f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aadfd61e7eb3644df96f0b622b54d2f56f" kindref="member">PKCS8_PRIVATE_RSA_PUBEXPONENT</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="604" refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aad13c0c49850208fc68787d9d772ae24d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aad13c0c49850208fc68787d9d772ae24d" kindref="member">PKCS8_PRIVATE_RSA_EXPONENT</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="605" refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa9e9e55db2d9f5cb138a6b92b7815e4af" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa9e9e55db2d9f5cb138a6b92b7815e4af" kindref="member">PKCS8_PRIVATE_RSA_P</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="606" refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa791398b293713cc97345586e6de4d19e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa791398b293713cc97345586e6de4d19e" kindref="member">PKCS8_PRIVATE_RSA_Q</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="607" refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa295070fec0c4abed358a0c345e5beb8e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa295070fec0c4abed358a0c345e5beb8e" kindref="member">PKCS8_PRIVATE_RSA_EXP1</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="608" refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa4cc42d0a99e3cd6bdea2490362d3e43a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa4cc42d0a99e3cd6bdea2490362d3e43a" kindref="member">PKCS8_PRIVATE_RSA_EXP2</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="609" refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa511494ca2148567f6a536083051c3dec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa511494ca2148567f6a536083051c3dec" kindref="member">PKCS8_PRIVATE_RSA_COEFF</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa6d75b466f683aa54745b97230a37af45" kindref="member">PKCS8_PRIVATE_RSA_FIELDS</ref><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="611" refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa6d75b466f683aa54745b97230a37af45" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4e" kindref="member">_pkcs8_privkey_ec_fields</ref><sp/>{</highlight></codeline>
<codeline lineno="614" refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea0c38c9582cd6895f0b51f2d9804772ba" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea0c38c9582cd6895f0b51f2d9804772ba" kindref="member">PKCS8_PRIVATE_EC_CURVEID</ref><sp/>=<sp/>0,<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="615" refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea58dab3856acea3ad7c102e9894632991" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea58dab3856acea3ad7c102e9894632991" kindref="member">PKCS8_PRIVATE_EC_VERSION</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="616" refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ead6fc732dbd3a40cbbee17b0e0b5d9f71" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ead6fc732dbd3a40cbbee17b0e0b5d9f71" kindref="member">PKCS8_PRIVATE_EC_PRIVKEY</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="617" refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea6bd25359cadd26de1d0d03ffb5aa79af" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea6bd25359cadd26de1d0d03ffb5aa79af" kindref="member">PKCS8_PRIVATE_EC_PUBKEY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><ref refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea9790db7a5e3d888caa4b576d6a79c1c1" kindref="member">PKCS8_PRIVATE_EC_FIELDS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="619" refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea9790db7a5e3d888caa4b576d6a79c1c1" refkind="member"><highlight class="normal">};</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="622" refid="cryptx_8h_1a18ac3fbeea8ba7f7931796bd253131a4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/>PKCS_OK,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>PKCS_INVALID_ARG,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>PKCS_UNSUPPORTED,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/>PKCS_INVALID_DATA,</highlight></codeline>
<codeline lineno="627"><highlight class="normal">}<sp/><ref refid="cryptx_8h_1a18ac3fbeea8ba7f7931796bd253131a4" kindref="member">pkcs_error_t</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="630" refid="structcryptx__pkcs8__pubkey" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__pkcs8__pubkey" kindref="compound">cryptx_pkcs8_pubkey</ref><sp/>{</highlight></codeline>
<codeline lineno="631" refid="structcryptx__pkcs8__pubkey_1a74803b2599c69d7084d2fd3dff518750" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcryptx__pkcs8__pubkey_1a74803b2599c69d7084d2fd3dff518750" kindref="member">error</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="632" refid="structcryptx__pkcs8__pubkey_1a215b479bc956ec6452b3d7304a1c3243" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__asn1__object" kindref="compound">cryptx_asn1_object</ref><sp/><ref refid="structcryptx__pkcs8__pubkey_1a215b479bc956ec6452b3d7304a1c3243" kindref="member">objectid</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__asn1__object" kindref="compound">cryptx_asn1_object</ref><sp/>ec_fields[<ref refid="cryptx_8h_1a013b9acd1ec2148f8bd159dbdf783713a28b860237672a83cd9752fb68b2405c1" kindref="member">PKCS8_PUBLIC_EC_FIELDS</ref>];</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__asn1__object" kindref="compound">cryptx_asn1_object</ref><sp/>rsa_fields[<ref refid="cryptx_8h_1ad7f8765e037450556596efeb6c19ca6ca45f3dfda11cb8657f506aafa1132c539" kindref="member">PKCS8_PUBLIC_RSA_FIELDS</ref>];</highlight></codeline>
<codeline lineno="636" refid="structcryptx__pkcs8__pubkey_1ab4aae8eae36733aadb39c6f655ecd453" refkind="member"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structcryptx__pkcs8__pubkey_1ab4aae8eae36733aadb39c6f655ecd453" kindref="member">publickey</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="637" refid="structcryptx__pkcs8__pubkey_1a7ee270392d5b048d62d1385552124920" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcryptx__pkcs8__pubkey_1a7ee270392d5b048d62d1385552124920" kindref="member">len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="638" refid="structcryptx__pkcs8__pubkey_1ab6be42e76e2eaf5abac08796816f1c07" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__pkcs8__pubkey_1ab6be42e76e2eaf5abac08796816f1c07" kindref="member">raw</ref>[];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="639"><highlight class="normal">};</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="structcryptx__pkcs8__privkey" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref><sp/>{</highlight></codeline>
<codeline lineno="643" refid="structcryptx__pkcs8__privkey_1ace700e3eda00fd25681c6bf5a305c8a0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structcryptx__pkcs8__privkey_1ace700e3eda00fd25681c6bf5a305c8a0" kindref="member">error</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="644" refid="structcryptx__pkcs8__privkey_1a56408e6d7e5c649e17147b5c8789a1f2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__asn1__object" kindref="compound">cryptx_asn1_object</ref><sp/><ref refid="structcryptx__pkcs8__privkey_1a56408e6d7e5c649e17147b5c8789a1f2" kindref="member">objectid</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__asn1__object" kindref="compound">cryptx_asn1_object</ref><sp/>rsa_fields[<ref refid="cryptx_8h_1abb9a88dda2a31903b66341fcdf928c0aa6d75b466f683aa54745b97230a37af45" kindref="member">PKCS8_PRIVATE_RSA_FIELDS</ref>];</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__asn1__object" kindref="compound">cryptx_asn1_object</ref><sp/>ec_fields[<ref refid="cryptx_8h_1a5d7e076a5245635513053f3b31780c4ea9790db7a5e3d888caa4b576d6a79c1c1" kindref="member">PKCS8_PRIVATE_EC_FIELDS</ref>];</highlight></codeline>
<codeline lineno="648" refid="structcryptx__pkcs8__privkey_1aa1a2b1090103a0b4c287a446d383a175" refkind="member"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structcryptx__pkcs8__privkey_1aa1a2b1090103a0b4c287a446d383a175" kindref="member">privatekey</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="649" refid="structcryptx__pkcs8__privkey_1a0d256e0957b8f30b1dd15e2b17b77ed2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcryptx__pkcs8__privkey_1a0d256e0957b8f30b1dd15e2b17b77ed2" kindref="member">len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="650" refid="structcryptx__pkcs8__privkey_1ad7aa3f5c6cea36dad67ff0d2a3dc076a" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="structcryptx__pkcs8__privkey_1ad7aa3f5c6cea36dad67ff0d2a3dc076a" kindref="member">raw</ref>[];<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="651"><highlight class="normal">};</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>cryptx_pkcs8_objectid_rsa[]<sp/>=<sp/>{0x2A,0x86,0x48,0x86,0xF7,0x0D,0x01,0x01,0x01,0};</highlight></codeline>
<codeline lineno="656"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>cryptx_pkcs8_objectid_ec[]<sp/>=<sp/>{0x2A,0x86,0x48,0xCE,0x3D,0x02,0x01,0};</highlight></codeline>
<codeline lineno="658"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>cryptx_pkcs8_curveid_sect233k1[]<sp/>=<sp/>{0x2B,0x81,0x04,0x00,0x1A};</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="669" refid="cryptx_8h_1aa187a2f43e4b3524082b0e8b649ae767" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__pkcs8__pubkey" kindref="compound">cryptx_pkcs8_pubkey</ref><sp/>*<ref refid="cryptx_8h_1aa187a2f43e4b3524082b0e8b649ae767" kindref="member">cryptx_pkcs8_import_publickey</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcryptx__pkcs8__pubkey_1a7ee270392d5b048d62d1385552124920" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>(*malloc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="cryptx_8h_1a1d8ba96af68c8fe00b1aed438fff3495" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref><sp/>*<ref refid="cryptx_8h_1a1d8ba96af68c8fe00b1aed438fff3495" kindref="member">cryptx_pkcs8_import_privatekey</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcryptx__pkcs8__privkey_1a0d256e0957b8f30b1dd15e2b17b77ed2" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>(*malloc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="cryptx_8h_1a78fb5286dbb1dd4443ca8fbc33005750" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a78fb5286dbb1dd4443ca8fbc33005750" kindref="member">cryptx_pkcs8_free_publickey</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__pkcs8__pubkey" kindref="compound">cryptx_pkcs8_pubkey</ref><sp/>*pk,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*free)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="696" refid="cryptx_8h_1a793f8cb12a267c4c2cff1bcc494f2de3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a793f8cb12a267c4c2cff1bcc494f2de3" kindref="member">cryptx_pkcs8_free_privatekey</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__pkcs8__privkey" kindref="compound">cryptx_pkcs8_privkey</ref><sp/>*pk,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*free)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CRYPTX_ENABLE_HAZMAT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="cryptx_8h_1aa26dcd5f7c0f1f679c91268bc5b69455" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1aa26dcd5f7c0f1f679c91268bc5b69455" kindref="member">cryptx_hazmat_aes_ecb_encrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block_in,</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block_out,</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>ks);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="719" refid="cryptx_8h_1a705b398f84e2020d762a0ce03c90bd90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a705b398f84e2020d762a0ce03c90bd90" kindref="member">cryptx_hazmat_aes_ecb_decrypt</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block_in,</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*block_out,</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structcryptx__aes__ctx" kindref="compound">cryptx_aes_ctx</ref>*<sp/>ks);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="736" refid="cryptx_8h_1a686d9781ff0de6cf06424df197ce6e1e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a686d9781ff0de6cf06424df197ce6e1e" kindref="member">cryptx_hazmat_rsa_oaep_encode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plaintext,</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcryptx__pkcs8__privkey_1a0d256e0957b8f30b1dd15e2b17b77ed2" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*encoded,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>modulus_len,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*auth,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="754" refid="cryptx_8h_1ab367fc9a33e00bee5e9a9f8df5f2a697" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1ab367fc9a33e00bee5e9a9f8df5f2a697" kindref="member">cryptx_hazmat_rsa_oaep_decode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*encoded,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structcryptx__pkcs8__privkey_1a0d256e0957b8f30b1dd15e2b17b77ed2" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*plaintext,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*auth,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash_alg);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="768" refid="cryptx_8h_1a71ea61142ac4e58af9d8b8c9d2d17685" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a70bc16d6ac300e87e3fc9c9847254bd1" kindref="member">cryptx_hazmat_powmod</ref>(uint8_t<sp/>size,<sp/>uint8_t<sp/>*restrict<sp/>base,<sp/>uint24_t<sp/>exp,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*restrict<sp/>mod);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="cryptx_8h_1ad0e904358b21cab26ad541d594184a89" refkind="member"><highlight class="preprocessor">#define<sp/>CRYPTX_GF2_INTLEN<sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="774" refid="structcryptx__ecc__point" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref><sp/>{</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>x[<ref refid="cryptx_8h_1ad0e904358b21cab26ad541d594184a89" kindref="member">CRYPTX_GF2_INTLEN</ref>];</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>y[<ref refid="cryptx_8h_1ad0e904358b21cab26ad541d594184a89" kindref="member">CRYPTX_GF2_INTLEN</ref>];</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1a71ea61142ac4e58af9d8b8c9d2d17685" kindref="member">cryptx_hazmat_ecc_point_add</ref>(<ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref>*<sp/>p,<sp/><ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref>*<sp/>q);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="792" refid="cryptx_8h_1ae4b37d491cbd4d5a16e0fb84d87b9270" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1ae4b37d491cbd4d5a16e0fb84d87b9270" kindref="member">cryptx_hazmat_ecc_point_double</ref>(<ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref>*<sp/>p);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="801" refid="cryptx_8h_1adf9bad66ca13288b71d9306d9c0a55e0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="cryptx_8h_1adf9bad66ca13288b71d9306d9c0a55e0" kindref="member">cryptx_hazmat_ecc_point_mul_scalar</ref>(<ref refid="structcryptx__ecc__point" kindref="compound">cryptx_ecc_point</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>scalar,</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>scalar_bit_width);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/acagliano/Library/Mobile Documents/com~apple~CloudDocs/Repositories/toolchain/src/cryptx/cryptx.h"/>
  </compounddef>
</doxygen>
